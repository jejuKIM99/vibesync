<%@page import="mvc.domain.vo.UserVO"%>
<%@ page language="java" contentType="text/html; charset=UTF-8" pageEncoding="UTF-8" %>
<%@ taglib uri="http://java.sun.com/jsp/jstl/core" prefix="c" %>
<%
    String contextPath = request.getContextPath() + "/vibesync";
%>

<link rel="stylesheet" href="https://cdnjs.cloudflare.com/ajax/libs/font-awesome/6.5.2/css/all.min.css">

<style>
.notion-sidebar {
  position: relative;
  display: flex;
  flex-direction: column;
  justify-content: space-between;
  height: 100%;
  width: 100%;
}

.notion-sidebar .menu_content {
  display: flex;
  justify-content: center;
  align-items: start;
  flex-direction: column;
  gap: 40px;
  font-size: 20px;
  font-weight: bold;
  margin-left: 10px;
  margin-block: 60px;
}
.notion-sidebar .menu_content .nickname {
  text-decoration: none;
  color: var(--font-color);
}

.search {
  display: inline-flex;
  align-items: center;
  position: relative;
  cursor: pointer;
}

.search-input {
  width: 100px;
  height: 22px;
  background: none;
  border: none;
  border-bottom: var(--border-color) 2px solid;
  color: var(--font-color);
}

input:focus {
  outline: none;
}

#follow {
  display: flex;
  justify-content: start;
  align-items: center;
  flex-direction: column;
  padding: 0;
  height: auto;
  overflow: hidden;
}

.follow_list label {
  text-decoration: none;
  color: var(--font-color);
  cursor: pointer;
}

#follow_toggle {
  display: none;
}

.follow_items {
  list-style: none;
  padding: 0;
  margin: 20px 0 0;
  max-height: 0;
  overflow: hidden;
  transition: max-height 0.3s ease-out;
}
.follow_items.show {
  max-height: 500px;
  transition: max-height 0.3s ease-in;
}

.follow_items li {
  margin: 4px 0;
}

.icon_wrap {
  display: flex;
  gap: 10px;
}

.nickname-container {
  width: 100%;
  position: relative;
  display: inline-block;
}

.profile img {
  width: 100px;
  height: 100px;
  object-fit: cover;
  border-radius: 50%;
  aspect-ratio: 1/1;
  margin-bottom: 13px;
  border: 4px solid transparent;
  display: block;
  background-image: linear-gradient(var(--card-back), var(--card-back)), linear-gradient(90deg, rgba(138, 196, 255, 1) 0%, rgba(227, 176, 255, 1) 50%, rgba(165, 250, 120, 1) 100%);
  background-origin: border-box;
  background-clip: content-box, border-box;
}

.nickname {
  display: inline-block;
  max-width: 150px;
  white-space: nowrap;
  overflow: hidden;
  text-overflow: ellipsis;
  cursor: pointer;
  padding: 2px 4px;
}

.accountDataLabel {
  font-weight: 400;
  font-size: medium;
  color: grey !important;
}

.accountDataValue {
  font-weight: 500;
  font-size: medium;
}

.modal-sidebar {
    display: none;
    position: absolute;
    top: 100%;
    left: 0;
    background-color: var(--card-back);
    border: 1px solid var(--border-color);
    border-radius: 8px;
    box-shadow: 0 4px 12px rgba(0, 0, 0, 0.15);
    z-index: 1000;
    white-space: nowrap;
    width: 210px;
    height: auto;
    padding: 15px;
    box-sizing: border-box;
}

.modal-nickname {
  display: block;
  text-decoration: none;
  color: var(--modal-font);
  padding: 4px 10px;
  margin-bottom: 10px;
}

.modal-nickname:hover {
  text-decoration: underline;
}

#nickname-modal-2 {
    display: none;
}
#nickname-modal-2 .theme-selector-container {
    width: 100%;
    padding: 0;
    border: none;
    margin-top: 10px;
    display: flex;
    flex-direction: column;
    gap: 5px;
}

.modal-btn {
  width: 100%;
  display: flex;
  align-items: center;
  justify-content: center;
  gap: 8px;
  text-align: center;
  background: #f8f8fa;
  color: #222;
  font-weight: 700;
  font-size: 17px;
  height: 38px;
  border-radius: 12px;
  border: 1.8px solid #e1e4ea;
  margin-bottom: 7px;
  transition: background 0.18s, box-shadow 0.18s;
  box-shadow: 0 1.5px 6px rgba(180,180,200,0.05);
  letter-spacing: 0.2px;
  outline: none;
  cursor: pointer;
}
.modal-btn i {
  font-size: 18px;
  margin-right: 2px;
  color: var(--font-color);
}
.modal-btn img {
   max-height: 22px;
   max-width: 22px;
}

#setting .modal-btn:hover {
  background: #e6f0fa;
  color: #1a81d6;
  border-color: #b9d3ec;
}
#logout .modal-btn:hover {
  background: #f3e7ea;
  color: #ed5e68;
  border-color: #eabec9;
}

.theme-selector-container {
    display: flex;
    flex-direction: column;
    gap: 10px;
    width: 220px;
    padding: 20px;
    border: 1px solid #ccc;
    border-radius: 8px;
    font-family: sans-serif;
}

.theme-option-label {
    display: flex;
    align-items: center;
    padding: 6px 10px;
    border-radius: 4px;
    cursor: pointer;
    transition: background-color 0.2s;
    border: 1px solid transparent;
    position: relative;
}

.theme-option-label:hover {
    background-color: var(--hover-color);
}

.theme-option-label input[type="radio"] {
    position: absolute;
    opacity: 0;
    width: 0;
    height: 0;
}

.custom-radio {
    width: 20px;
    height: 20px;
    border: 2px solid #ccc;
    border-radius: 50%;
    margin-right: 12px;
    display: flex;
    align-items: center;
    justify-content: center;
    transition: border-color 0.2s;
}

.custom-radio .inner-circle {
    width: 10px;
    height: 10px;
    background-color: #3498db;
    border-radius: 50%;
    transform: scale(0);
    transition: transform 0.2s ease-in-out;
}

.theme-option-label input[type="radio"]:checked + .custom-radio {
    border-color: #3498db;
    background-color: #ddeafd;
}

.theme-option-label input[type="radio"]:checked + .custom-radio .inner-circle {
    transform: scale(1);
}

.theme-label-text {
    font-weight: 500;
    font-size: 14px;
    margin-left: 10px;
}

.theme-icon-svg {
    margin-left: auto;
}

.theme-icon-svg img {
    width: 50px;
    height: auto;
    display: block;
}

#nickname-modal-2 #back-btn {
    margin-bottom: 10px;
}

.sidebar-profile img {
    min-width: 30px;
    max-width: 30px;
    height: 30px;
    object-fit: cover;
    border-radius: 50%;
    margin-right: 10px;
    border: 2px solid transparent;
    display: block;
    background-image: linear-gradient(var(--card-back), var(--card-back)), linear-gradient(90deg, rgba(138, 196, 255, 1) 0%, rgba(227, 176, 255, 1) 50%, rgba(165, 250, 120, 1) 100%);
    background-origin: border-box;
    background-clip: content-box, border-box;
}

/* 추가된 스타일: 팔로잉/팔로워 모달 */
.modal-overlay-follow {
    display: none;
    position: fixed;
    top: 0;
    left: 0;
    width: 100vw;
    height: 100vh;
    background: rgba(0,0,0,0.6);
    justify-content: center;
    align-items: center;
    z-index: 2000;
    backdrop-filter: blur(2.5px);
}

.modal-follow-content {
    background: #f5f8fb;
    border-radius: 20px;
    box-shadow: 0 4px 32px 0 rgba(80,110,150,0.10), 0 0 0 1.5px #c7d3e8;
    width: 92%;
    max-width: 415px;
    min-width: 330px;
    min-height: 390px;
    max-height: 78vh;
    display: flex;
    flex-direction: column;
    padding-bottom: 13px;
    border: none;
    animation: zoomIn 0.21s;
    position: relative;
}

.modal-follow-header {
    display: flex;
    justify-content: space-around;
    border-bottom: 2px solid var(--border-color);
    padding: 18px 0 12px 0;
    flex-shrink: 0;
    color: var(--font-size);
    font-size: 18px;
    font-weight: 700;
    background: transparent;
    text-align: center;
    letter-spacing: 0.02em;
}

.modal-follow-tab-btn {
    background: none;
    border: none;
    font-size: 18px;
    font-weight: 700;
    color: #888;
    cursor: pointer;
    padding: 5px 10px;
    transition: color 0.2s;
}

.modal-follow-tab-btn.active {
    color: var(--font-color);
    border-bottom: 2px solid #3498db;
}

.modal-follow-list-container {
    flex-grow: 1;
    overflow-y: auto;
    padding: 13px 25px 10px 25px;
    min-height: 150px;
    display: flex;
    flex-direction: column;
    gap: 15px;
    align-items: stretch;
    justify-content: flex-start;
    background: transparent;
}

.follow-list-item {
    display: flex;
    align-items: center;
    padding: 10px 15px;
    background: var(--card-back);
    border-radius: 11px;
    border: 2px solid var(--border-color);
    transition: background-color 0.14s ease-in-out;
}
.follow-list-item:hover {
    background-color: #f0f0f0;
}
.follow-list-item img {
    width: 44px;
    height: 44px;
    object-fit: cover;
    border-radius: 50%;
    margin-right: 15px;
    border: 1.5px solid lightgrey;
}
.follow-list-item .user-info {
    flex-grow: 1;
}
.follow-list-item .user-info .nickname {
    font-weight: 700;
    font-size: 17px;
    color: #2d3440;
    margin-bottom: 2px;
    cursor: pointer;
    text-decoration: none;
}
.follow-list-item .user-info .nickname:hover {
    text-decoration: underline;
}
.follow-list-item .action-buttons {
    display: flex;
    gap: 8px;
    align-items: center;
}
.follow-list-item .action-buttons .follow-toggle-btn {
    background: #4CAF50;
    color: white;
    border: none;
    border-radius: 5px;
    padding: 8px 12px;
    cursor: pointer;
    font-weight: 600;
    transition: background-color 0.2s;
}
.follow-list-item .action-buttons .follow-toggle-btn.unfollow {
    background: #f44336;
}
.follow-list-item .action-buttons .follow-toggle-btn:hover {
    opacity: 0.9;
}
.follow-list-item .action-buttons .message-btn {
    background: #2196F3;
    color: white;
    border: none;
    border-radius: 5px;
    padding: 8px 10px;
    cursor: pointer;
    display: flex;
    align-items: center;
    justify-content: center;
    transition: background-color 0.2s;
}
.follow-list-item .action-buttons .message-btn i {
    font-size: 16px;
}
.follow-list-item .action-buttons .message-btn:hover {
    opacity: 0.9;
}

.close-modal {
    position: absolute;
    top: 13px;
    right: 17px;
    color: #bcb8ad;
    font-size: 26px;
    font-weight: 400;
    cursor: pointer;
    background: none;
    border: none;
    border-radius: 50%;
    width: 32px;
    height: 32px;
    display: flex;
    align-items: center;
    justify-content: center;
    transition: background 0.13s, color 0.12s;
}
.close-modal:hover,
.close-modal:focus {
    font-weight: bold;
    color: var(--font-color);
    text-decoration: none;
}

.no-message-placeholder {
    display: flex;
    flex-direction: column;
    align-items: center;
    justify-content: center;
    color: #888;
    text-align: center;
    padding: 20px;
}
.no-message-placeholder i {
    font-size: 48px;
    margin-bottom: 16px;
    color: #e0e0e0;
}
.no-message-placeholder p {
    margin: 0;
    font-size: 1rem;
    font-weight: 500;
}
</style>

<button id="toggle-btn">☰</button>

<nav class="notion-sidebar-container" id="sidebar">
  <div class="notion-sidebar">
    <div class="menu_content">
      <div class="nickname-container">
        <span class="profile" id="profile-display">
          <c:choose>
             <c:when test="${not empty userInfo.img}">
                <img src="${pageContext.request.contextPath}/vibesync/${userInfo.img}" alt="프로필">
            </c:when>
            <c:otherwise>
               <img src="<%= contextPath %>/sources/default/default_user.jpg" alt="기본 프로필">
            </c:otherwise>
          </c:choose>
        </span>
        <span class="nickname" id="nickname-display">
          ${userInfo.nickname}
        </span>
        <div class="accountData" id="accountData-display">
          <button type="button" id="following-btn">
            <span class="accountDataValue"></span> <span class="accountDataLabel">팔로잉</span>
          </button>
          <button type="button" id="follower-btn">
            <span class="accountDataValue"></span> <span class="accountDataLabel">팔로워</span>
          </button>
        </div>
        <div id="nickname-modal" class="modal-sidebar">
          <div id="nickname-modal-1">
             <a href="userPage.do?acIdx=${userInfo.ac_idx}" class="modal-nickname">
               ${userInfo.nickname}
             </a>
             <div id="setting">
               <button type="button" id="setting-btn" class="modal-btn">
                  <img src="./sources/icons/settings.svg" alt="setting icon"> Theme
               </button>
            </div>
            <div id="logout">
              <form action="user.do" method="post">
                <input type="hidden" name="accessType" value="logout">
                <button type="submit" class="modal-btn">
                   <i class="fa-solid fa-right-from-bracket"></i> Logout
                </button>
              </form>
            </div>
         </div>
         <div id="nickname-modal-2">
           <button type="button" id="back-btn" class="modal-btn">
               <i class="fa-solid fa-arrow-left"></i> 뒤로가기
           </button>
           <div class="theme-selector-container">
             <label class="theme-option-label">
               <input type="radio" name="theme" value="light" ${sessionScope.theme == 'light' || empty sessionScope.theme ? 'checked' : ''}>
               <div class="custom-radio">
                 <div class="inner-circle"></div>
               </div>
               <span class="theme-label-text">Light</span>
               <div class="theme-icon-svg">
                 <img src="./sources/sidebar/light_icon.svg">
               </div>
             </label>
             <label class="theme-option-label">
               <input type="radio" name="theme" value="dark" ${sessionScope.theme == 'dark' ? 'checked' : ''}>
               <div class="custom-radio">
                 <div class="inner-circle"></div>
               </div>
               <span class="theme-label-text">Dark</span>
               <div class="theme-icon-svg">
                 <img src="./sources/sidebar/dark_icon.svg">
               </div>
             </label>
           </div>
         </div>
        </div>
      </div>

      <a href="main.do" class="home icon_wrap">
        <img src="./sources/icons/home.svg" alt="home icon" class="sidebar_icon">
        <span>HOME</span>
      </a>

      <a href="workspace.do" class="workspace icon_wrap">
        <img src="./sources/icons/work.svg" alt="workspace icon" class="sidebar_icon">
        <span>WORKSPACE</span>
      </a>
      
      <a href="page.do" class="workspace icon_wrap">
        <img src="./sources/icons/page.svg" alt="workspace icon" class="sidebar_icon">
        <span>PAGES</span>
      </a>

      <div id="follow">
        <div class="follow_list" id="followButton">
          <div class="follow_tag icon_wrap">
            <img src="./sources/icons/follow.svg" alt="follow icon" class="sidebar_icon">
            <label for="follow_toggle">FOLLOW</label>
          </div>
          <form id="followForm_side">
            <input type="hidden" name="action" value="getFollowing" />
            <input type="hidden" name="useridx" id="useridx" value="${sessionScope.userInfo.ac_idx}" />
          </form>
          <ul class="follow_items"></ul>
        </div>
      </div>
    </div>
  </div>

  <!-- 팔로잉/팔로워 모달 -->
  <div id="followListModal" class="modal-overlay-follow">
    <div class="modal-follow-content">
      <span class="close-modal">×</span>
      <div class="modal-follow-header">
        <button type="button" class="modal-follow-tab-btn" data-tab-type="following">팔로잉</button>
        <button type="button" class="modal-follow-tab-btn" data-tab-type="follower">팔로워</button>
      </div>
      <div id="followListContent" class="modal-follow-list-container"></div>
    </div>
  </div>
</nav>

<script>
$(document).ready(function() {
   // 페이지 로드될 때 팔로워 수 불러오기
   updateFollowerCount();
   
   var isExpanded = false;

    $('#followButton').on('click', function(e) {
        if ($(e.target).closest('a').length) {
            return;
        }
        e.preventDefault();
        var $ul = $('.follow_items');
        var $followDiv = $('#follow');

        if (isExpanded) {
            $ul.empty();
            $ul.removeClass('show');
            isExpanded = false;
            return;
        }

        var formData = {
            action: $('input[name="action"]').val(),
            useridx: $('input[name="useridx"]').val()
        };

        $.ajax({
            type: 'POST',
            url: '<%= request.getContextPath() %>/sidebar.do',
            data: formData,
            dataType: 'json',
            success: function(response) {
                var items = response.followingList;
                console.log(items)
                $ul.empty();

                if (!items || items.length === 0) {
                    $ul.append('<li><p>No Follower</p></li>');
                } else {
                    $.each(items, function(i, user) {
                        var liHtml = ''
                            + '<li class="sidebar-profile">'
                            +   '<a href="userPage.do?acIdx=' + user.ac_idx + '">' 
                            +     '<img src="'+ user.profile_img +'" alt="profileImg">'
                            +     user.nickname 
                            +   '</a>'
                            + '</li>';
                        $ul.append(liHtml);
                    });
                }
                $ul.addClass('show');
                isExpanded = true;
            },
            error: function(xhr, status, error) {
                console.error('AJAX Error:', error);
            }
        });
    });

    // 닉네임 클릭 시 모달 토글
    $('#nickname-display').on('click', function(e) {
        e.stopPropagation();
        $('#nickname-modal').toggle();
        $('#nickname-modal-1').show();
        $('#nickname-modal-2').hide();
    });

    // 'Setting' 버튼 클릭 시 설정 화면으로 전환
    $('#setting-btn').on('click', function() {
        $('#nickname-modal-1').hide();
        $('#nickname-modal-2').show();
    });

    // '뒤로가기' 버튼 클릭 시 이전 화면으로 복귀
    $('#back-btn').on('click', function() {
        $('#nickname-modal-2').hide();
        $('#nickname-modal-1').show();
    });

    // 모달 외부 클릭 시 모달 닫기
    $(document).on('click', function(e) {
        if ($(e.target).closest('#nickname-modal, #nickname-display').length === 0) {
            $('#nickname-modal').hide();
        }
    });

    // 팔로잉/팔로워 버튼 클릭 시 모달 열기
    $('#following-btn, #follower-btn').on('click', function() {
        let defaultTab = $(this).attr('id') === 'following-btn' ? 'following' : 'follower';
        openFollowListModal(defaultTab);
    });

    // 모달 내 탭 버튼 클릭 이벤트
    $(document).on('click', '.modal-follow-tab-btn', function() {
        $('.modal-follow-tab-btn').removeClass('active');
        $(this).addClass('active');
        let tabType = $(this).data('tab-type');
        loadFollowListData(tabType);
    });

    // 팔로우/언팔로우 버튼 클릭 이벤트
    $(document).on('click', '.follow-toggle-btn', function(e) {
        e.stopPropagation();
        const targetAcIdx = $(this).data('target-ac-idx');
        const isFollowing = $(this).hasClass('unfollow');
        const $button = $(this);
    
        $.ajax({
            url: '<%= request.getContextPath() %>/followToggle.do',
            type: 'POST',
            data: { 
                authorId: targetAcIdx
            },
            dataType: 'json',
            success: function(response) {
                if (response.success) {
                    if (response.following) {
                        $button.removeClass('unfollow').text('팔로잉');
                    } else {
                        $button.addClass('unfollow').text('팔로우');
                    }
                    updateFollowerCount();
                } else {
                    alert('팔로우/언팔로우 처리 실패: ' + (response.message || '알 수 없는 오류'));
                }
            },
            error: function(xhr, status, error) {
                alert('팔로우 요청 중 오류 발생: ' + error);
            }
        });
    });

    // 모달 닫기 버튼
    $(document).on('click', '#followListModal .close-modal', function() {
        closeFollowListModal();
    });
});

function updateFollowerCount() {
    $.ajax({
        type: 'GET',
        url: '<%= request.getContextPath() %>/sidebar.do',
        dataType: 'json',
        success: function(sidebarDTO) {
            var followingCnt = sidebarDTO.userProfile.followingCount;
            var followerCnt = sidebarDTO.userProfile.followerCount;
            var postCnt = sidebarDTO.userProfile.postCount;
            var viewCnt = sidebarDTO.userProfile.postViewCount;
            
            var fHtml = `<div>
                         <button type="button" id="following-btn">
                           <span class="accountDataValue">\${followingCnt}</span> <span class="accountDataLabel">팔로잉</span>
                         </button>
                         <button type="button" id="follower-btn">
                           <span class="accountDataValue">\${followerCnt}</span> <span class="accountDataLabel">팔로워</span>
                         </button>
                      </div>`;
            $(".accountData").empty();
            $(".accountData").append(fHtml);
        },
        error: function(xhr, status, error) {
            console.error('AJAX Error:', error);
        }
    });
}

function openFollowListModal(defaultTab = 'following') {
    const isLoggedIn = ${sessionScope.userInfo != null};
    if (!isLoggedIn) {
        alert("로그인이 필요합니다.");
        location.href = "<%= request.getContextPath() %>/vibesync/user.do";
        return;
    }

    $('#followListModal').css('display', 'flex');
    $('.modal-follow-tab-btn').removeClass('active');
    $(`.modal-follow-tab-btn[data-tab-type="\${defaultTab}"]`).addClass('active');
    loadFollowListData(defaultTab);
}

function loadFollowListData(tabType) {
    const listContainer = $('#followListContent');
    listContainer.empty().html('<p style="text-align:center; padding: 20px;">로딩 중...</p>');

    const basePath = '<%= contextPath %>/sources/';

    let apiUrl = '<%= request.getContextPath() %>/follow.do';
    let requestData = tabType === 'following' ? { action: 'getFollowing' } : { action: 'getFollower' };

    $.ajax({
        url: apiUrl,
        type: 'GET',
        data: requestData,
        dataType: 'json',
        success: function(response) {
            listContainer.empty();
            const list = response;
            if (!list || list.length === 0) {
                listContainer.html('<p class="no-message-placeholder"><i class="fa-solid fa-users"></i><p>목록이 비어있습니다.</p></p>');
                return;
            }
            list.forEach(user => {
                const profileImg = user.profile_img ? `<%= request.getContextPath() %>/\${user.profile_img}` : `\${basePath}default/default_user.jpg`;
                const isFollowing = user.followedByCurrentUser;
                const followButtonText = isFollowing ? '팔로잉' : '팔로우';
                const followButtonClass = isFollowing ? 'follow-toggle-btn unfollow' : 'follow-toggle-btn';

                const itemHtml = `
                    <div class="follow-list-item">
                        <img src="\${profileImg}" alt="프로필">
                        <div class="user-info">
                            <a href="userPage.do?acIdx=\${user.ac_idx}" class="nickname">\${user.nickname}</a>
                        </div>
                        <div class="action-buttons">
                            <button type="button" class="\${followButtonClass}" data-target-ac-idx="\${user.ac_idx}">
                                \${followButtonText}
                            </button>
                            <button type="button" class="message-btn" data-target-ac-idx="\${user.ac_idx}" data-nickname="\${user.nickname}">
                                <i class="fa-solid fa-paper-plane"></i>
                            </button>
                        </div>
                    </div>
                `;
                listContainer.append(itemHtml);
            });
        },
        error: function(xhr, status, error) {
            listContainer.html('<p style="text-align:center; padding: 20px; color: red;">데이터 로드 실패: ' + (xhr.responseJSON ? xhr.responseJSON.message : error) + '</p>');
            console.error('Failed to load follow list:', error);
        }
    });
}

function closeFollowListModal() {
    $('#followListModal').hide();
    $('#followListContent').empty();
}
</script>
<script src="<%= request.getContextPath() %>/vibesync/js/theme.js"></script>