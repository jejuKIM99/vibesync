/*
 * Generated by the Jasper component of Apache Tomcat
 * Version: Apache Tomcat/9.0.104
 * Generated at: 2025-06-23 07:48:06 UTC
 * Note: The last modified time of this file was set to
 *       the last modified time of the source file after
 *       generation to assist with modification tracking.
 */
package org.apache.jsp.vibesync;

import javax.servlet.*;
import javax.servlet.http.*;
import javax.servlet.jsp.*;
import mvc.domain.dto.UserNoteDTO;
import mvc.domain.vo.UserVO;

public final class postView_jsp extends org.apache.jasper.runtime.HttpJspBase
    implements org.apache.jasper.runtime.JspSourceDependent,
                 org.apache.jasper.runtime.JspSourceImports {

  private static final javax.servlet.jsp.JspFactory _jspxFactory =
          javax.servlet.jsp.JspFactory.getDefaultFactory();

  private static java.util.Map<java.lang.String,java.lang.Long> _jspx_dependants;

  static {
    _jspx_dependants = new java.util.HashMap<java.lang.String,java.lang.Long>(2);
    _jspx_dependants.put("/WEB-INF/lib/jstl-1.2.jar", Long.valueOf(1749773114000L));
    _jspx_dependants.put("jar:file:/C:/Class/vibesync/.metadata/.plugins/org.eclipse.wst.server.core/tmp0/wtpwebapps/vibesync/WEB-INF/lib/jstl-1.2.jar!/META-INF/c.tld", Long.valueOf(1153352682000L));
  }

  private static final java.util.Set<java.lang.String> _jspx_imports_packages;

  private static final java.util.Set<java.lang.String> _jspx_imports_classes;

  static {
    _jspx_imports_packages = new java.util.LinkedHashSet<>(4);
    _jspx_imports_packages.add("javax.servlet");
    _jspx_imports_packages.add("javax.servlet.http");
    _jspx_imports_packages.add("javax.servlet.jsp");
    _jspx_imports_classes = new java.util.LinkedHashSet<>(3);
    _jspx_imports_classes.add("mvc.domain.vo.UserVO");
    _jspx_imports_classes.add("mvc.domain.dto.UserNoteDTO");
  }

  private org.apache.jasper.runtime.TagHandlerPool _005fjspx_005ftagPool_005fc_005fset_0026_005fvar_005fvalue_005fnobody;
  private org.apache.jasper.runtime.TagHandlerPool _005fjspx_005ftagPool_005fc_005fif_0026_005ftest;
  private org.apache.jasper.runtime.TagHandlerPool _005fjspx_005ftagPool_005fc_005fout_0026_005fvalue_005fescapeXml_005fnobody;
  private org.apache.jasper.runtime.TagHandlerPool _005fjspx_005ftagPool_005fc_005fchoose;
  private org.apache.jasper.runtime.TagHandlerPool _005fjspx_005ftagPool_005fc_005fwhen_0026_005ftest;
  private org.apache.jasper.runtime.TagHandlerPool _005fjspx_005ftagPool_005fc_005fotherwise;

  private volatile javax.el.ExpressionFactory _el_expressionfactory;
  private volatile org.apache.tomcat.InstanceManager _jsp_instancemanager;

  public java.util.Map<java.lang.String,java.lang.Long> getDependants() {
    return _jspx_dependants;
  }

  public java.util.Set<java.lang.String> getPackageImports() {
    return _jspx_imports_packages;
  }

  public java.util.Set<java.lang.String> getClassImports() {
    return _jspx_imports_classes;
  }

  public javax.el.ExpressionFactory _jsp_getExpressionFactory() {
    if (_el_expressionfactory == null) {
      synchronized (this) {
        if (_el_expressionfactory == null) {
          _el_expressionfactory = _jspxFactory.getJspApplicationContext(getServletConfig().getServletContext()).getExpressionFactory();
        }
      }
    }
    return _el_expressionfactory;
  }

  public org.apache.tomcat.InstanceManager _jsp_getInstanceManager() {
    if (_jsp_instancemanager == null) {
      synchronized (this) {
        if (_jsp_instancemanager == null) {
          _jsp_instancemanager = org.apache.jasper.runtime.InstanceManagerFactory.getInstanceManager(getServletConfig());
        }
      }
    }
    return _jsp_instancemanager;
  }

  public void _jspInit() {
    _005fjspx_005ftagPool_005fc_005fset_0026_005fvar_005fvalue_005fnobody = org.apache.jasper.runtime.TagHandlerPool.getTagHandlerPool(getServletConfig());
    _005fjspx_005ftagPool_005fc_005fif_0026_005ftest = org.apache.jasper.runtime.TagHandlerPool.getTagHandlerPool(getServletConfig());
    _005fjspx_005ftagPool_005fc_005fout_0026_005fvalue_005fescapeXml_005fnobody = org.apache.jasper.runtime.TagHandlerPool.getTagHandlerPool(getServletConfig());
    _005fjspx_005ftagPool_005fc_005fchoose = org.apache.jasper.runtime.TagHandlerPool.getTagHandlerPool(getServletConfig());
    _005fjspx_005ftagPool_005fc_005fwhen_0026_005ftest = org.apache.jasper.runtime.TagHandlerPool.getTagHandlerPool(getServletConfig());
    _005fjspx_005ftagPool_005fc_005fotherwise = org.apache.jasper.runtime.TagHandlerPool.getTagHandlerPool(getServletConfig());
  }

  public void _jspDestroy() {
    _005fjspx_005ftagPool_005fc_005fset_0026_005fvar_005fvalue_005fnobody.release();
    _005fjspx_005ftagPool_005fc_005fif_0026_005ftest.release();
    _005fjspx_005ftagPool_005fc_005fout_0026_005fvalue_005fescapeXml_005fnobody.release();
    _005fjspx_005ftagPool_005fc_005fchoose.release();
    _005fjspx_005ftagPool_005fc_005fwhen_0026_005ftest.release();
    _005fjspx_005ftagPool_005fc_005fotherwise.release();
  }

  public void _jspService(final javax.servlet.http.HttpServletRequest request, final javax.servlet.http.HttpServletResponse response)
      throws java.io.IOException, javax.servlet.ServletException {

    if (!javax.servlet.DispatcherType.ERROR.equals(request.getDispatcherType())) {
      final java.lang.String _jspx_method = request.getMethod();
      if ("OPTIONS".equals(_jspx_method)) {
        response.setHeader("Allow","GET, HEAD, POST, OPTIONS");
        return;
      }
      if (!"GET".equals(_jspx_method) && !"POST".equals(_jspx_method) && !"HEAD".equals(_jspx_method)) {
        response.setHeader("Allow","GET, HEAD, POST, OPTIONS");
        response.sendError(HttpServletResponse.SC_METHOD_NOT_ALLOWED, "JSP들은 오직 GET, POST 또는 HEAD 메소드만을 허용합니다. Jasper는 OPTIONS 메소드 또한 허용합니다.");
        return;
      }
    }

    final javax.servlet.jsp.PageContext pageContext;
    javax.servlet.http.HttpSession session = null;
    final javax.servlet.ServletContext application;
    final javax.servlet.ServletConfig config;
    javax.servlet.jsp.JspWriter out = null;
    final java.lang.Object page = this;
    javax.servlet.jsp.JspWriter _jspx_out = null;
    javax.servlet.jsp.PageContext _jspx_page_context = null;


    try {
      response.setContentType("text/html; charset=UTF-8");
      pageContext = _jspxFactory.getPageContext(this, request, response,
      			null, true, 8192, true);
      _jspx_page_context = pageContext;
      application = pageContext.getServletContext();
      config = pageContext.getServletConfig();
      session = pageContext.getSession();
      out = pageContext.getOut();
      _jspx_out = out;

      out.write("\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("\r\n");
      if (_jspx_meth_c_005fset_005f0(_jspx_page_context))
        return;
      out.write('\r');
      out.write('\n');
      if (_jspx_meth_c_005fset_005f1(_jspx_page_context))
        return;
      out.write('\r');
      out.write('\n');
      if (_jspx_meth_c_005fset_005f2(_jspx_page_context))
        return;
      out.write('\r');
      out.write('\n');
      if (_jspx_meth_c_005fset_005f3(_jspx_page_context))
        return;
      out.write("\r\n");
      out.write("\r\n");
      out.write("<!DOCTYPE html>\r\n");
      org.apache.jasper.runtime.JspRuntimeLibrary.include(request, response, "/vibesync/includes/header.jsp", out, false);
      out.write("\r\n");
      out.write("<head>\r\n");
      out.write("<meta charset=\"UTF-8\">\r\n");
      out.write("<meta name=\"viewport\" content=\"width=device-width, initial-scale=1.0\">\r\n");
      out.write("<title>PostView</title>\r\n");
      out.write("<link rel=\"icon\" href=\"./sources/favicon.ico\" />\r\n");
      out.write("<link rel=\"stylesheet\" href=\"./css/style.css\">\r\n");
      out.write("<link rel=\"stylesheet\" href=\"./css/sidebar.css\">\r\n");
      out.write("<script src=\"./js/script.js\"></script>\r\n");
      out.write("<script src=\"https://code.jquery.com/jquery-3.6.0.min.js\"></script>\r\n");
      out.write("<script>\r\n");
      out.write("//[신규] 조건부 뒤로가기 함수\r\n");
      out.write("function goBackSmartly() {\r\n");
      out.write("    // 이전 페이지의 URL을 확인합니다.\r\n");
      out.write("    const referrer = document.referrer;\r\n");
      out.write("\r\n");
      out.write("    // 이전 페이지 URL에 'noteedit.do'가 포함되어 있으면 두 페이지 뒤로 이동합니다.\r\n");
      out.write("    if (referrer && referrer.includes('noteedit.do')) {\r\n");
      out.write("        history.go(-2);\r\n");
      out.write("    } else {\r\n");
      out.write("        // 그 외의 경우에는 한 페이지만 뒤로 갑니다.\r\n");
      out.write("        history.back();\r\n");
      out.write("    }\r\n");
      out.write("}\r\n");
      out.write("\r\n");
      out.write("const isLoggedIn = ");
      out.write((java.lang.String) org.apache.jasper.runtime.PageContextImpl.proprietaryEvaluate("${not empty user}", java.lang.String.class, (javax.servlet.jsp.PageContext)_jspx_page_context, null));
      out.write("; \r\n");
      out.write("\r\n");
      out.write("function requireLogin() {\r\n");
      out.write("	\r\n");
      out.write("	const ctx = \"");
      out.write((java.lang.String) org.apache.jasper.runtime.PageContextImpl.proprietaryEvaluate("${pageContext.request.contextPath}", java.lang.String.class, (javax.servlet.jsp.PageContext)_jspx_page_context, null));
      out.write("\";\r\n");
      out.write("	\r\n");
      out.write("    if (confirm('로그인이 필요한 기능입니다. 로그인 페이지로 이동하시겠습니까?')) {\r\n");
      out.write("        // 1. 현재 페이지의 전체 주소를 가져옵니다. (예: .../postView.do?nidx=26)\r\n");
      out.write("        const currentUrl = window.location.href; \r\n");
      out.write("        // 2. 로그인 페이지 주소에 'returnUrl' 파라미터를 추가하여 보냅니다.\r\n");
      out.write("        //    encodeURIComponent는 URL에 포함될 수 있는 특수문자(?, &, =)를 안전하게 인코딩합니다.\r\n");
      out.write("        window.location.href = ctx + '/vibesync/user.do?returnUrl=' + encodeURIComponent(currentUrl);\r\n");
      out.write("    }\r\n");
      out.write("}\r\n");
      out.write("      \r\n");
      out.write("    $(document).ready(function() {\r\n");
      out.write("      // 기존 코드 (Follow, Like, Image Path)\r\n");
      out.write("      const ajaxUrl = '");
      out.write((java.lang.String) org.apache.jasper.runtime.PageContextImpl.proprietaryEvaluate("${contextPath}", java.lang.String.class, (javax.servlet.jsp.PageContext)_jspx_page_context, null));
      out.write("/vibesync/postView.do';\r\n");
      out.write("      const ctx = '");
      out.write((java.lang.String) org.apache.jasper.runtime.PageContextImpl.proprietaryEvaluate("${contextPath}", java.lang.String.class, (javax.servlet.jsp.PageContext)_jspx_page_context, null));
      out.write("';\r\n");
      out.write("      \r\n");
      out.write("      \r\n");
      out.write("      $('#followForm').on('submit', function(e) {\r\n");
      out.write("        e.preventDefault();\r\n");
      out.write("        if (!isLoggedIn) {\r\n");
      out.write("            requireLogin();\r\n");
      out.write("            return; \r\n");
      out.write("        }\r\n");
      out.write("        $.ajax({\r\n");
      out.write("          url: ajaxUrl, type: 'POST', data: { action: 'toggleFollow', userIdx: $('#followBtn').data('userIdx'), writerIdx: $('#followBtn').data('writerIdx'), nidx: $('#followBtn').data('nidx') }, dataType: 'json',\r\n");
      out.write("          success: function(data) { $('#followBtn').text(data.following ? 'Unfollow' : 'Follow'); },\r\n");
      out.write("          error: function(xhr, status, error) { console.error('[AJAX-FOLLOW] 에러 발생:', error); }\r\n");
      out.write("        });\r\n");
      out.write("      });\r\n");
      out.write("\r\n");
      out.write("      $('#likeForm').on('submit', function(e) {\r\n");
      out.write("        e.preventDefault();\r\n");
      out.write("        if (!isLoggedIn) {\r\n");
      out.write("            requireLogin();\r\n");
      out.write("            return; // AJAX 요청 중단\r\n");
      out.write("        }\r\n");
      out.write("        const currentCount = parseInt($('#likeCount').text(), 10);\r\n");
      out.write("        $.ajax({\r\n");
      out.write("          url: ajaxUrl, type: 'POST', data: { action: 'toggleLike', userIdx: $('#likeBtn').data('userIdx'), noteIdx: $('#likeBtn').data('noteIdx') }, dataType: 'json',\r\n");
      out.write("          success: function(data) {\r\n");
      out.write("            if (data.liked) { $('#likeImg').attr('src', './sources/icons/fill_heart.png'); $('#likeCount').text(currentCount + 1);\r\n");
      out.write("            } else { $('#likeImg').attr('src', './sources/icons/heart.svg'); $('#likeCount').text(currentCount - 1); }\r\n");
      out.write("          },\r\n");
      out.write("          error: function(xhr, status, error) { console.error('[AJAX-LIKE] 에러 발생:', error); }\r\n");
      out.write("        });\r\n");
      out.write("      });\r\n");
      out.write("\r\n");
      out.write("      $('.text_content img').each(function() {\r\n");
      out.write("        const src = $(this).attr('src');\r\n");
      out.write("        if (src && !src.startsWith('http') && !src.startsWith(ctx)) { $(this).attr('src', ctx + src.substring(1)); }\r\n");
      out.write("      });\r\n");
      out.write("      \r\n");
      out.write("      // =================== 대댓글 기능이 포함된 스크립트 ===================\r\n");
      out.write("      const commentUrl = '");
      out.write((java.lang.String) org.apache.jasper.runtime.PageContextImpl.proprietaryEvaluate("${contextPath}", java.lang.String.class, (javax.servlet.jsp.PageContext)_jspx_page_context, null));
      out.write("/vibesync/comment.do';\r\n");
      out.write("      const loggedInUserIdx = ");
      out.write((java.lang.String) org.apache.jasper.runtime.PageContextImpl.proprietaryEvaluate("${not empty user ? user.ac_idx : -1}", java.lang.String.class, (javax.servlet.jsp.PageContext)_jspx_page_context, null));
      out.write(";\r\n");
      out.write("      const noteIdxForComment = ");
      out.write((java.lang.String) org.apache.jasper.runtime.PageContextImpl.proprietaryEvaluate("${note.note_idx}", java.lang.String.class, (javax.servlet.jsp.PageContext)_jspx_page_context, null));
      out.write(";\r\n");
      out.write("\r\n");
      out.write("      function loadComments() {\r\n");
      out.write("        $.ajax({\r\n");
      out.write("          url: commentUrl, type: 'POST', data: { action: 'list', noteIdx: noteIdxForComment }, dataType: 'json',\r\n");
      out.write("          success: function(comments) {\r\n");
      out.write("            const $commentList = $('#comment-list').empty();\r\n");
      out.write("            if (comments && comments.length > 0) {\r\n");
      out.write("              \r\n");
      out.write("              // [수정] forEach 루프 내부에 console.log 추가\r\n");
      out.write("              comments.forEach(function(comment) {\r\n");
      out.write("                // ===================================================================\r\n");
      out.write("                // [추가된 로그] 브라우저 개발자 도구 콘솔에서 각 댓글의 depth 값을 확인합니다.\r\n");
      out.write("                console.log('Comment ID:', comment.commentlist_idx, 'Received Depth:', comment.depth);\r\n");
      out.write("                // ===================================================================\r\n");
      out.write("\r\n");
      out.write("                const indentStyle = `style=\"margin-left: ${(comment.depth - 1) * 20}px;\"`;\r\n");
      out.write("                const editDeleteButtons = (comment.ac_idx === loggedInUserIdx) ?\r\n");
      out.write("                  ` <button class=\"edit-btn\" data-id=\"${comment.commentlist_idx}\" data-text=\"${encodeURIComponent(comment.text)}\">수정</button>\r\n");
      out.write("                    <button class=\"delete-btn\" data-id=\"${comment.commentlist_idx}\">삭제</button>` : '';\r\n");
      out.write("                \r\n");
      out.write("                const commentHtml = `\r\n");
      out.write("                  <div class=\"comment-item\" ${indentStyle} data-comment-id=\"${comment.commentlist_idx}\">\r\n");
      out.write("                    <div class=\"comment-content-wrapper\" style=\"margin-top: 6px; padding: 10px 0; cursor: pointer; border-bottom: solid 2px var(--border-color);\">\r\n");
      out.write("                        <strong>${comment.nickname}</strong>\r\n");
      out.write("                        <span style=\"color:#888; font-size:0.8em; margin-left:10px;\">${new Date(comment.create_at).toLocaleString()}</span>\r\n");
      out.write("                        <div style=\"float:right;\">${editDeleteButtons}</div>\r\n");
      out.write("                        <p style=\"margin-top:5px; word-wrap:break-word;\">${comment.text.replace(/\\n/g, '<br>')}</p>\r\n");
      out.write("                    </div>\r\n");
      out.write("                  </div>`;\r\n");
      out.write("                $commentList.append(commentHtml);\r\n");
      out.write("              });\r\n");
      out.write("            } else {\r\n");
      out.write("              $commentList.append('<p>No Comment</p>');\r\n");
      out.write("            }\r\n");
      out.write("          },\r\n");
      out.write("          error: function() { $('#comment-list').html('<p>댓글을 불러오는 중 오류가 발생했습니다.</p>'); }\r\n");
      out.write("        });\r\n");
      out.write("      }\r\n");
      out.write("\r\n");
      out.write("      loadComments();\r\n");
      out.write("\r\n");
      out.write("      $('#comment-form').on('submit', function(e) {\r\n");
      out.write("        e.preventDefault();\r\n");
      out.write("        if (!isLoggedIn) {\r\n");
      out.write("            requireLogin();\r\n");
      out.write("            return;\r\n");
      out.write("        }\r\n");
      out.write("        const text = $(this).find('textarea[name=\"text\"]').val();\r\n");
      out.write("        if(!text.trim()) { alert('댓글 내용을 입력하세요.'); return; }\r\n");
      out.write("        $.ajax({\r\n");
      out.write("          url: commentUrl, type: 'POST', data: { action: 'add', noteIdx: noteIdxForComment, text: text }, dataType: 'json',\r\n");
      out.write("          success: function() { $('#comment-form').find('textarea[name=\"text\"]').val(''); loadComments(); }\r\n");
      out.write("        });\r\n");
      out.write("      });\r\n");
      out.write("\r\n");
      out.write("      $('#comment-list').on('click', '.comment-content-wrapper', function() {\r\n");
      out.write("          const $parentComment = $(this).closest('.comment-item');\r\n");
      out.write("          if ($parentComment.next().hasClass('reply-form-wrapper')) {\r\n");
      out.write("              $parentComment.next('.reply-form-wrapper').remove();\r\n");
      out.write("              return;\r\n");
      out.write("          }\r\n");
      out.write("          $('.reply-form-wrapper').remove();\r\n");
      out.write("\r\n");
      out.write("          const replyFormHtml = `\r\n");
      out.write("            <div class=\"reply-form-wrapper\" style=\"margin-left: ${parseInt($parentComment.css('margin-left')) + 20}px; margin-top: 10px; padding-bottom: 10px; margin-bottom: 14px;\">\r\n");
      out.write("                <form class=\"reply-form\">\r\n");
      out.write("                    <input type=\"hidden\" name=\"reCommentIdx\" value=\"${$parentComment.data('comment-id')}\">\r\n");
      out.write("                    <div class=\"reco-div\" style=\"display:flex; align-items: center; \">\r\n");
      out.write("                    <textarea name=\"text\" rows=\"2\" placeholder=\"답글을 입력하세요...\" required style=\"width:100%; resize:none; padding: 8px; border: solid 2px var(--border-color); border-radius: 4px 0 0 4px; outline: none; background-color: var(--background-color); color: var(--font-color);\"></textarea>\r\n");
      out.write("                    <button type=\"submit\" style=\"padding: 5px 10px; height: 50px; border: solid 2px var(--border-color); border-left: none; border-radius: 0 4px 4px 0; font-weight: bold; background-color: var(--card-head); color: var(--card-back);\">작성</button>\r\n");
      out.write("                    </div>\r\n");
      out.write("                </form>\r\n");
      out.write("            </div>\r\n");
      out.write("          `;\r\n");
      out.write("          $parentComment.after(replyFormHtml);\r\n");
      out.write("      });\r\n");
      out.write("\r\n");
      out.write("      $('#comment-list').on('submit', '.reply-form', function(e) {\r\n");
      out.write("          e.preventDefault();\r\n");
      out.write("          const text = $(this).find('textarea[name=\"text\"]').val();\r\n");
      out.write("          const reCommentIdx = $(this).find('input[name=\"reCommentIdx\"]').val();\r\n");
      out.write("          if(!text.trim()) { alert('답글 내용을 입력하세요.'); return; }\r\n");
      out.write("\r\n");
      out.write("          $.ajax({\r\n");
      out.write("              url: commentUrl, type: 'POST',\r\n");
      out.write("              data: { action: 'add', noteIdx: noteIdxForComment, text: text, reCommentIdx: reCommentIdx },\r\n");
      out.write("              dataType: 'json',\r\n");
      out.write("              success: function() { loadComments(); }\r\n");
      out.write("          });\r\n");
      out.write("      });\r\n");
      out.write("      \r\n");
      out.write("      $('#comment-list').on('click', '.delete-btn', function(e) { e.stopPropagation(); if (confirm('정말로 삭제하시겠습니까?')) { $.ajax({ url: commentUrl, type: 'POST', data: { action: 'delete', commentIdx: $(this).data('id') }, dataType: 'json', success: function() { loadComments(); } }); } });\r\n");
      out.write("      $('#comment-list').on('click', '.edit-btn', function(e) { e.stopPropagation(); $('#edit-comment-id').val($(this).data('id')); $('#edit-comment-text').val(decodeURIComponent($(this).data('text'))); $('#edit-comment-modal').show(); });\r\n");
      out.write("      $('#cancel-edit-btn').on('click', function() { $('#edit-comment-modal').hide(); });\r\n");
      out.write("      $('#edit-comment-form').on('submit', function(e) { e.preventDefault(); const text = $('#edit-comment-text').val(); if(!text.trim()) { alert('수정할 내용을 입력하세요.'); return; } $.ajax({ url: commentUrl, type: 'POST', data: { action: 'update', commentIdx: $('#edit-comment-id').val(), text: text }, dataType: 'json', success: function() { $('#edit-comment-modal').hide(); loadComments(); } }); });\r\n");
      out.write("    });\r\n");
      out.write("  </script>\r\n");
      out.write("  <style>\r\n");
      out.write(".postview_ed_btn, .postview_de_btn{padding: 4px 10px;background-color: var(--card-back);font-weight: bold;border: solid 2px var(--border-color);border-radius: 6px;text-transform: uppercase;}\r\n");
      out.write("  </style>\r\n");
      out.write("</head>\r\n");
      out.write("<body>\r\n");
      out.write("  <div id=\"notion-app\">\r\n");
      out.write("    <input type=\"hidden\" id=\"mode\" value=\"postview\">\r\n");
      out.write("    <div class=\"notion-app-inner\">\r\n");
      out.write("      ");
      org.apache.jasper.runtime.JspRuntimeLibrary.include(request, response, "./includes/sidebar.jsp", out, false);
      out.write("\r\n");
      out.write("      <div id=\"content_wrapper\">\r\n");
      out.write("        <section id=\"content\">\r\n");
      out.write("          <div class=\"back_icon\">\r\n");
      out.write("             <a href=\"javascript:void(0);\" onclick=\"goBackSmartly()\"><img src=\"./sources/icons/arrow_back.svg\" alt=\"arrow_back\"></a>\r\n");
      out.write("          </div>\r\n");
      out.write("          <div id=\"postview_Wrapper\">\r\n");
      out.write("            <div class=\"title\">\r\n");
      out.write("              <p>");
      out.write((java.lang.String) org.apache.jasper.runtime.PageContextImpl.proprietaryEvaluate("${note.title}", java.lang.String.class, (javax.servlet.jsp.PageContext)_jspx_page_context, null));
      out.write("</p>\r\n");
      out.write("              ");
      if (_jspx_meth_c_005fif_005f0(_jspx_page_context))
        return;
      out.write("\r\n");
      out.write("            </div>\r\n");
      out.write("            <div class=\"writer_info\">\r\n");
      out.write("              <div class=\"writer\">\r\n");
      out.write("                <img src=\"");
      out.write((java.lang.String) org.apache.jasper.runtime.PageContextImpl.proprietaryEvaluate("${(note.img == null or empty note.img) ? './sources/icons/profile.svg' : note.img}", java.lang.String.class, (javax.servlet.jsp.PageContext)_jspx_page_context, null));
      out.write("\" alt=\"writer_profile\">\r\n");
      out.write("                <a href=\"userPage.do?acIdx=");
      out.write((java.lang.String) org.apache.jasper.runtime.PageContextImpl.proprietaryEvaluate("${note.ac_idx}", java.lang.String.class, (javax.servlet.jsp.PageContext)_jspx_page_context, null));
      out.write('"');
      out.write('>');
      out.write((java.lang.String) org.apache.jasper.runtime.PageContextImpl.proprietaryEvaluate("${note.nickname}", java.lang.String.class, (javax.servlet.jsp.PageContext)_jspx_page_context, null));
      out.write("</a>\r\n");
      out.write("                ");
      if (_jspx_meth_c_005fif_005f1(_jspx_page_context))
        return;
      out.write("\r\n");
      out.write("              </div>\r\n");
      out.write("              <div class=\"like_share\">\r\n");
      out.write("                <div><p><span>view : </span><span>");
      out.write((java.lang.String) org.apache.jasper.runtime.PageContextImpl.proprietaryEvaluate("${note.view_count}", java.lang.String.class, (javax.servlet.jsp.PageContext)_jspx_page_context, null));
      out.write("</span></p></div>\r\n");
      out.write("                <form id=\"likeForm\" style=\"display:inline; margin:0; padding:0;\"><button id=\"likeBtn\" type=\"submit\" data-user-idx=\"");
      out.write((java.lang.String) org.apache.jasper.runtime.PageContextImpl.proprietaryEvaluate("${user.ac_idx}", java.lang.String.class, (javax.servlet.jsp.PageContext)_jspx_page_context, null));
      out.write("\" data-note-idx=\"");
      out.write((java.lang.String) org.apache.jasper.runtime.PageContextImpl.proprietaryEvaluate("${note.note_idx}", java.lang.String.class, (javax.servlet.jsp.PageContext)_jspx_page_context, null));
      out.write("\" style=\"border:none; background:none; cursor:pointer; filter: var(--icon-filter);\"><img id=\"likeImg\" src=\"");
      out.write((java.lang.String) org.apache.jasper.runtime.PageContextImpl.proprietaryEvaluate("${isLiking ? './sources/icons/fill_heart.png' : './sources/icons/heart.svg'}", java.lang.String.class, (javax.servlet.jsp.PageContext)_jspx_page_context, null));
      out.write("\" alt=\"heart\" style=\"vertical-align:middle; width:2rem; height:2rem;\"><span id=\"likeCount\" style=\"vertical-align:middle;\">");
      out.write((java.lang.String) org.apache.jasper.runtime.PageContextImpl.proprietaryEvaluate("${note.like_num}", java.lang.String.class, (javax.servlet.jsp.PageContext)_jspx_page_context, null));
      out.write("</span></button></form>\r\n");
      out.write("              </div>\r\n");
      out.write("            </div>\r\n");
      out.write("            <div class=\"line\"></div>\r\n");
      out.write("            <div class=\"text_content\">\r\n");
      out.write("              ");
      if (_jspx_meth_c_005fout_005f0(_jspx_page_context))
        return;
      out.write("\r\n");
      out.write("            </div>\r\n");
      out.write("            <div class=\"line\" style=\"margin-top: 2rem; margin-bottom: 0px\"></div>\r\n");
      out.write("            <div id=\"comment-section\">\r\n");
      out.write("                <h4>Comments</h4>\r\n");
      out.write("                ");
      if (_jspx_meth_c_005fchoose_005f0(_jspx_page_context))
        return;
      out.write("\r\n");
      out.write("            <div id=\"comment-list\" style=\"clear: both;\"></div>\r\n");
      out.write("         </div>\r\n");
      out.write("                  <div id=\"edit-comment-modal\"\r\n");
      out.write("                     style=\"display: none; position: fixed; top: 0; left: 0; width: 100%; height: 100%; background: rgba(0, 0, 0, 0.5); z-index: 1000;\">\r\n");
      out.write("                     <div\r\n");
      out.write("                        style=\"position: relative; top: 20%; margin: auto; width: 500px; background: white; padding: 20px; border-radius: 5px;\">\r\n");
      out.write("                        <h5>댓글 수정</h5>\r\n");
      out.write("                        <form id=\"edit-comment-form\">\r\n");
      out.write("                           <input type=\"hidden\" id=\"edit-comment-id\" name=\"commentIdx\">\r\n");
      out.write("                           <textarea id=\"edit-comment-text\" name=\"text\" rows=\"4\"\r\n");
      out.write("                              style=\"width: 100%; resize: none; padding: 8px;\"></textarea>\r\n");
      out.write("                           <div style=\"text-align: right; margin-top: 10px;\">\r\n");
      out.write("                              <button type=\"button\" id=\"cancel-edit-btn\">취소</button>\r\n");
      out.write("                              <button type=\"submit\">저장</button>\r\n");
      out.write("                           </div>\r\n");
      out.write("                        </form>\r\n");
      out.write("                     </div>\r\n");
      out.write("                  </div>\r\n");
      out.write("               </div>\r\n");
      out.write("            </section>\r\n");
      out.write("         </div>\r\n");
      out.write("      </div>\r\n");
      out.write("   </div>\r\n");
      out.write("</body>\r\n");
      org.apache.jasper.runtime.JspRuntimeLibrary.include(request, response, "/vibesync/includes/footer.jsp", out, false);
      out.write("\r\n");
      out.write("</html>");
    } catch (java.lang.Throwable t) {
      if (!(t instanceof javax.servlet.jsp.SkipPageException)){
        out = _jspx_out;
        if (out != null && out.getBufferSize() != 0)
          try {
            if (response.isCommitted()) {
              out.flush();
            } else {
              out.clearBuffer();
            }
          } catch (java.io.IOException e) {}
        if (_jspx_page_context != null) _jspx_page_context.handlePageException(t);
        else throw new ServletException(t);
      }
    } finally {
      _jspxFactory.releasePageContext(_jspx_page_context);
    }
  }

  private boolean _jspx_meth_c_005fset_005f0(javax.servlet.jsp.PageContext _jspx_page_context)
          throws java.lang.Throwable {
    javax.servlet.jsp.PageContext pageContext = _jspx_page_context;
    javax.servlet.jsp.JspWriter out = _jspx_page_context.getOut();
    //  c:set
    org.apache.taglibs.standard.tag.rt.core.SetTag _jspx_th_c_005fset_005f0 = (org.apache.taglibs.standard.tag.rt.core.SetTag) _005fjspx_005ftagPool_005fc_005fset_0026_005fvar_005fvalue_005fnobody.get(org.apache.taglibs.standard.tag.rt.core.SetTag.class);
    _jspx_th_c_005fset_005f0.setPageContext(_jspx_page_context);
    _jspx_th_c_005fset_005f0.setParent(null);
    // /vibesync/postView.jsp(6,0) name = var type = java.lang.String reqTime = false required = false fragment = false deferredValue = false expectedTypeName = null deferredMethod = false methodSignature = null
    _jspx_th_c_005fset_005f0.setVar("contextPath");
    // /vibesync/postView.jsp(6,0) name = value type = javax.el.ValueExpression reqTime = true required = false fragment = false deferredValue = true expectedTypeName = java.lang.Object deferredMethod = false methodSignature = null
    _jspx_th_c_005fset_005f0.setValue(new org.apache.jasper.el.JspValueExpression("/vibesync/postView.jsp(6,0) '${pageContext.request.contextPath}'",_jsp_getExpressionFactory().createValueExpression(_jspx_page_context.getELContext(),"${pageContext.request.contextPath}",java.lang.Object.class)).getValue(_jspx_page_context.getELContext()));
    int _jspx_eval_c_005fset_005f0 = _jspx_th_c_005fset_005f0.doStartTag();
    if (_jspx_th_c_005fset_005f0.doEndTag() == javax.servlet.jsp.tagext.Tag.SKIP_PAGE) {
      return true;
    }
    _005fjspx_005ftagPool_005fc_005fset_0026_005fvar_005fvalue_005fnobody.reuse(_jspx_th_c_005fset_005f0);
    return false;
  }

  private boolean _jspx_meth_c_005fset_005f1(javax.servlet.jsp.PageContext _jspx_page_context)
          throws java.lang.Throwable {
    javax.servlet.jsp.PageContext pageContext = _jspx_page_context;
    javax.servlet.jsp.JspWriter out = _jspx_page_context.getOut();
    //  c:set
    org.apache.taglibs.standard.tag.rt.core.SetTag _jspx_th_c_005fset_005f1 = (org.apache.taglibs.standard.tag.rt.core.SetTag) _005fjspx_005ftagPool_005fc_005fset_0026_005fvar_005fvalue_005fnobody.get(org.apache.taglibs.standard.tag.rt.core.SetTag.class);
    _jspx_th_c_005fset_005f1.setPageContext(_jspx_page_context);
    _jspx_th_c_005fset_005f1.setParent(null);
    // /vibesync/postView.jsp(7,0) name = var type = java.lang.String reqTime = false required = false fragment = false deferredValue = false expectedTypeName = null deferredMethod = false methodSignature = null
    _jspx_th_c_005fset_005f1.setVar("user");
    // /vibesync/postView.jsp(7,0) name = value type = javax.el.ValueExpression reqTime = true required = false fragment = false deferredValue = true expectedTypeName = java.lang.Object deferredMethod = false methodSignature = null
    _jspx_th_c_005fset_005f1.setValue(new org.apache.jasper.el.JspValueExpression("/vibesync/postView.jsp(7,0) '${sessionScope.userInfo}'",_jsp_getExpressionFactory().createValueExpression(_jspx_page_context.getELContext(),"${sessionScope.userInfo}",java.lang.Object.class)).getValue(_jspx_page_context.getELContext()));
    int _jspx_eval_c_005fset_005f1 = _jspx_th_c_005fset_005f1.doStartTag();
    if (_jspx_th_c_005fset_005f1.doEndTag() == javax.servlet.jsp.tagext.Tag.SKIP_PAGE) {
      return true;
    }
    _005fjspx_005ftagPool_005fc_005fset_0026_005fvar_005fvalue_005fnobody.reuse(_jspx_th_c_005fset_005f1);
    return false;
  }

  private boolean _jspx_meth_c_005fset_005f2(javax.servlet.jsp.PageContext _jspx_page_context)
          throws java.lang.Throwable {
    javax.servlet.jsp.PageContext pageContext = _jspx_page_context;
    javax.servlet.jsp.JspWriter out = _jspx_page_context.getOut();
    //  c:set
    org.apache.taglibs.standard.tag.rt.core.SetTag _jspx_th_c_005fset_005f2 = (org.apache.taglibs.standard.tag.rt.core.SetTag) _005fjspx_005ftagPool_005fc_005fset_0026_005fvar_005fvalue_005fnobody.get(org.apache.taglibs.standard.tag.rt.core.SetTag.class);
    _jspx_th_c_005fset_005f2.setPageContext(_jspx_page_context);
    _jspx_th_c_005fset_005f2.setParent(null);
    // /vibesync/postView.jsp(8,0) name = var type = java.lang.String reqTime = false required = false fragment = false deferredValue = false expectedTypeName = null deferredMethod = false methodSignature = null
    _jspx_th_c_005fset_005f2.setVar("isFollowing");
    // /vibesync/postView.jsp(8,0) name = value type = javax.el.ValueExpression reqTime = true required = false fragment = false deferredValue = true expectedTypeName = java.lang.Object deferredMethod = false methodSignature = null
    _jspx_th_c_005fset_005f2.setValue(new org.apache.jasper.el.JspValueExpression("/vibesync/postView.jsp(8,0) '${not empty followLike && followLike.following}'",_jsp_getExpressionFactory().createValueExpression(_jspx_page_context.getELContext(),"${not empty followLike && followLike.following}",java.lang.Object.class)).getValue(_jspx_page_context.getELContext()));
    int _jspx_eval_c_005fset_005f2 = _jspx_th_c_005fset_005f2.doStartTag();
    if (_jspx_th_c_005fset_005f2.doEndTag() == javax.servlet.jsp.tagext.Tag.SKIP_PAGE) {
      return true;
    }
    _005fjspx_005ftagPool_005fc_005fset_0026_005fvar_005fvalue_005fnobody.reuse(_jspx_th_c_005fset_005f2);
    return false;
  }

  private boolean _jspx_meth_c_005fset_005f3(javax.servlet.jsp.PageContext _jspx_page_context)
          throws java.lang.Throwable {
    javax.servlet.jsp.PageContext pageContext = _jspx_page_context;
    javax.servlet.jsp.JspWriter out = _jspx_page_context.getOut();
    //  c:set
    org.apache.taglibs.standard.tag.rt.core.SetTag _jspx_th_c_005fset_005f3 = (org.apache.taglibs.standard.tag.rt.core.SetTag) _005fjspx_005ftagPool_005fc_005fset_0026_005fvar_005fvalue_005fnobody.get(org.apache.taglibs.standard.tag.rt.core.SetTag.class);
    _jspx_th_c_005fset_005f3.setPageContext(_jspx_page_context);
    _jspx_th_c_005fset_005f3.setParent(null);
    // /vibesync/postView.jsp(10,0) name = var type = java.lang.String reqTime = false required = false fragment = false deferredValue = false expectedTypeName = null deferredMethod = false methodSignature = null
    _jspx_th_c_005fset_005f3.setVar("isLiking");
    // /vibesync/postView.jsp(10,0) name = value type = javax.el.ValueExpression reqTime = true required = false fragment = false deferredValue = true expectedTypeName = java.lang.Object deferredMethod = false methodSignature = null
    _jspx_th_c_005fset_005f3.setValue(new org.apache.jasper.el.JspValueExpression("/vibesync/postView.jsp(10,0) '${not empty followLike && followLike.liking}'",_jsp_getExpressionFactory().createValueExpression(_jspx_page_context.getELContext(),"${not empty followLike && followLike.liking}",java.lang.Object.class)).getValue(_jspx_page_context.getELContext()));
    int _jspx_eval_c_005fset_005f3 = _jspx_th_c_005fset_005f3.doStartTag();
    if (_jspx_th_c_005fset_005f3.doEndTag() == javax.servlet.jsp.tagext.Tag.SKIP_PAGE) {
      return true;
    }
    _005fjspx_005ftagPool_005fc_005fset_0026_005fvar_005fvalue_005fnobody.reuse(_jspx_th_c_005fset_005f3);
    return false;
  }

  private boolean _jspx_meth_c_005fif_005f0(javax.servlet.jsp.PageContext _jspx_page_context)
          throws java.lang.Throwable {
    javax.servlet.jsp.PageContext pageContext = _jspx_page_context;
    javax.servlet.jsp.JspWriter out = _jspx_page_context.getOut();
    //  c:if
    org.apache.taglibs.standard.tag.rt.core.IfTag _jspx_th_c_005fif_005f0 = (org.apache.taglibs.standard.tag.rt.core.IfTag) _005fjspx_005ftagPool_005fc_005fif_0026_005ftest.get(org.apache.taglibs.standard.tag.rt.core.IfTag.class);
    _jspx_th_c_005fif_005f0.setPageContext(_jspx_page_context);
    _jspx_th_c_005fif_005f0.setParent(null);
    // /vibesync/postView.jsp(213,14) name = test type = boolean reqTime = true required = true fragment = false deferredValue = false expectedTypeName = null deferredMethod = false methodSignature = null
    _jspx_th_c_005fif_005f0.setTest(((java.lang.Boolean) org.apache.jasper.runtime.PageContextImpl.proprietaryEvaluate("${sessionScope.userInfo != null && sessionScope.userInfo.ac_idx == note.upac_idx}", boolean.class, (javax.servlet.jsp.PageContext)_jspx_page_context, null)).booleanValue());
    int _jspx_eval_c_005fif_005f0 = _jspx_th_c_005fif_005f0.doStartTag();
    if (_jspx_eval_c_005fif_005f0 != javax.servlet.jsp.tagext.Tag.SKIP_BODY) {
      do {
        out.write("\r\n");
        out.write("                <div>\r\n");
        out.write("                  <button class=\"postview_ed_btn\"><a href=\"noteedit.do?noteidx=");
        out.write((java.lang.String) org.apache.jasper.runtime.PageContextImpl.proprietaryEvaluate("${note.note_idx}", java.lang.String.class, (javax.servlet.jsp.PageContext)_jspx_page_context, null));
        out.write("\">edit</a></button>\r\n");
        out.write("                  <button class=\"postview_de_btn\"><a href=\"notedelete.do?noteidx=");
        out.write((java.lang.String) org.apache.jasper.runtime.PageContextImpl.proprietaryEvaluate("${note.note_idx}", java.lang.String.class, (javax.servlet.jsp.PageContext)_jspx_page_context, null));
        out.write("\" onclick=\"return confirm('정말로 삭제하시겠습니까?');\">delete</a></button>\r\n");
        out.write("                </div>\r\n");
        out.write("              ");
        int evalDoAfterBody = _jspx_th_c_005fif_005f0.doAfterBody();
        if (evalDoAfterBody != javax.servlet.jsp.tagext.BodyTag.EVAL_BODY_AGAIN)
          break;
      } while (true);
    }
    if (_jspx_th_c_005fif_005f0.doEndTag() == javax.servlet.jsp.tagext.Tag.SKIP_PAGE) {
      return true;
    }
    _005fjspx_005ftagPool_005fc_005fif_0026_005ftest.reuse(_jspx_th_c_005fif_005f0);
    return false;
  }

  private boolean _jspx_meth_c_005fif_005f1(javax.servlet.jsp.PageContext _jspx_page_context)
          throws java.lang.Throwable {
    javax.servlet.jsp.PageContext pageContext = _jspx_page_context;
    javax.servlet.jsp.JspWriter out = _jspx_page_context.getOut();
    //  c:if
    org.apache.taglibs.standard.tag.rt.core.IfTag _jspx_th_c_005fif_005f1 = (org.apache.taglibs.standard.tag.rt.core.IfTag) _005fjspx_005ftagPool_005fc_005fif_0026_005ftest.get(org.apache.taglibs.standard.tag.rt.core.IfTag.class);
    _jspx_th_c_005fif_005f1.setPageContext(_jspx_page_context);
    _jspx_th_c_005fif_005f1.setParent(null);
    // /vibesync/postView.jsp(224,16) name = test type = boolean reqTime = true required = true fragment = false deferredValue = false expectedTypeName = null deferredMethod = false methodSignature = null
    _jspx_th_c_005fif_005f1.setTest(((java.lang.Boolean) org.apache.jasper.runtime.PageContextImpl.proprietaryEvaluate("${not empty sessionScope.userInfo and sessionScope.userInfo.ac_idx != note.upac_idx}", boolean.class, (javax.servlet.jsp.PageContext)_jspx_page_context, null)).booleanValue());
    int _jspx_eval_c_005fif_005f1 = _jspx_th_c_005fif_005f1.doStartTag();
    if (_jspx_eval_c_005fif_005f1 != javax.servlet.jsp.tagext.Tag.SKIP_BODY) {
      do {
        out.write("\r\n");
        out.write("                  <form id=\"followForm\" style=\"display:inline; margin:0; padding:0;\"><button id=\"followBtn\" type=\"submit\" data-user-idx=\"");
        out.write((java.lang.String) org.apache.jasper.runtime.PageContextImpl.proprietaryEvaluate("${user.ac_idx}", java.lang.String.class, (javax.servlet.jsp.PageContext)_jspx_page_context, null));
        out.write("\" data-writer-idx=\"");
        out.write((java.lang.String) org.apache.jasper.runtime.PageContextImpl.proprietaryEvaluate("${note.upac_idx}", java.lang.String.class, (javax.servlet.jsp.PageContext)_jspx_page_context, null));
        out.write("\" data-nidx=\"");
        out.write((java.lang.String) org.apache.jasper.runtime.PageContextImpl.proprietaryEvaluate("${note.note_idx}", java.lang.String.class, (javax.servlet.jsp.PageContext)_jspx_page_context, null));
        out.write("\" style=\"background:#99bc85; border-radius:5px; border:none; cursor:pointer; padding:5px 10px;\">");
        out.write((java.lang.String) org.apache.jasper.runtime.PageContextImpl.proprietaryEvaluate("${isFollowing ? \"Unfollow\" : \"Follow\"}", java.lang.String.class, (javax.servlet.jsp.PageContext)_jspx_page_context, null));
        out.write("</button></form>\r\n");
        out.write("                ");
        int evalDoAfterBody = _jspx_th_c_005fif_005f1.doAfterBody();
        if (evalDoAfterBody != javax.servlet.jsp.tagext.BodyTag.EVAL_BODY_AGAIN)
          break;
      } while (true);
    }
    if (_jspx_th_c_005fif_005f1.doEndTag() == javax.servlet.jsp.tagext.Tag.SKIP_PAGE) {
      return true;
    }
    _005fjspx_005ftagPool_005fc_005fif_0026_005ftest.reuse(_jspx_th_c_005fif_005f1);
    return false;
  }

  private boolean _jspx_meth_c_005fout_005f0(javax.servlet.jsp.PageContext _jspx_page_context)
          throws java.lang.Throwable {
    javax.servlet.jsp.PageContext pageContext = _jspx_page_context;
    javax.servlet.jsp.JspWriter out = _jspx_page_context.getOut();
    //  c:out
    org.apache.taglibs.standard.tag.rt.core.OutTag _jspx_th_c_005fout_005f0 = (org.apache.taglibs.standard.tag.rt.core.OutTag) _005fjspx_005ftagPool_005fc_005fout_0026_005fvalue_005fescapeXml_005fnobody.get(org.apache.taglibs.standard.tag.rt.core.OutTag.class);
    _jspx_th_c_005fout_005f0.setPageContext(_jspx_page_context);
    _jspx_th_c_005fout_005f0.setParent(null);
    // /vibesync/postView.jsp(235,14) name = value type = null reqTime = true required = true fragment = false deferredValue = false expectedTypeName = null deferredMethod = false methodSignature = null
    _jspx_th_c_005fout_005f0.setValue((java.lang.Object) org.apache.jasper.runtime.PageContextImpl.proprietaryEvaluate("${note.text}", java.lang.Object.class, (javax.servlet.jsp.PageContext)_jspx_page_context, null));
    // /vibesync/postView.jsp(235,14) name = escapeXml type = null reqTime = true required = false fragment = false deferredValue = false expectedTypeName = null deferredMethod = false methodSignature = null
    _jspx_th_c_005fout_005f0.setEscapeXml(false);
    int _jspx_eval_c_005fout_005f0 = _jspx_th_c_005fout_005f0.doStartTag();
    if (_jspx_th_c_005fout_005f0.doEndTag() == javax.servlet.jsp.tagext.Tag.SKIP_PAGE) {
      return true;
    }
    _005fjspx_005ftagPool_005fc_005fout_0026_005fvalue_005fescapeXml_005fnobody.reuse(_jspx_th_c_005fout_005f0);
    return false;
  }

  private boolean _jspx_meth_c_005fchoose_005f0(javax.servlet.jsp.PageContext _jspx_page_context)
          throws java.lang.Throwable {
    javax.servlet.jsp.PageContext pageContext = _jspx_page_context;
    javax.servlet.jsp.JspWriter out = _jspx_page_context.getOut();
    //  c:choose
    org.apache.taglibs.standard.tag.common.core.ChooseTag _jspx_th_c_005fchoose_005f0 = (org.apache.taglibs.standard.tag.common.core.ChooseTag) _005fjspx_005ftagPool_005fc_005fchoose.get(org.apache.taglibs.standard.tag.common.core.ChooseTag.class);
    _jspx_th_c_005fchoose_005f0.setPageContext(_jspx_page_context);
    _jspx_th_c_005fchoose_005f0.setParent(null);
    int _jspx_eval_c_005fchoose_005f0 = _jspx_th_c_005fchoose_005f0.doStartTag();
    if (_jspx_eval_c_005fchoose_005f0 != javax.servlet.jsp.tagext.Tag.SKIP_BODY) {
      do {
        out.write("\r\n");
        out.write("                  ");
        out.write("\r\n");
        out.write("                  ");
        if (_jspx_meth_c_005fwhen_005f0(_jspx_th_c_005fchoose_005f0, _jspx_page_context))
          return true;
        out.write("\r\n");
        out.write("                  ");
        out.write("\r\n");
        out.write("                  ");
        if (_jspx_meth_c_005fotherwise_005f0(_jspx_th_c_005fchoose_005f0, _jspx_page_context))
          return true;
        out.write("\r\n");
        out.write("                ");
        int evalDoAfterBody = _jspx_th_c_005fchoose_005f0.doAfterBody();
        if (evalDoAfterBody != javax.servlet.jsp.tagext.BodyTag.EVAL_BODY_AGAIN)
          break;
      } while (true);
    }
    if (_jspx_th_c_005fchoose_005f0.doEndTag() == javax.servlet.jsp.tagext.Tag.SKIP_PAGE) {
      return true;
    }
    _005fjspx_005ftagPool_005fc_005fchoose.reuse(_jspx_th_c_005fchoose_005f0);
    return false;
  }

  private boolean _jspx_meth_c_005fwhen_005f0(javax.servlet.jsp.tagext.JspTag _jspx_th_c_005fchoose_005f0, javax.servlet.jsp.PageContext _jspx_page_context)
          throws java.lang.Throwable {
    javax.servlet.jsp.PageContext pageContext = _jspx_page_context;
    javax.servlet.jsp.JspWriter out = _jspx_page_context.getOut();
    //  c:when
    org.apache.taglibs.standard.tag.rt.core.WhenTag _jspx_th_c_005fwhen_005f0 = (org.apache.taglibs.standard.tag.rt.core.WhenTag) _005fjspx_005ftagPool_005fc_005fwhen_0026_005ftest.get(org.apache.taglibs.standard.tag.rt.core.WhenTag.class);
    _jspx_th_c_005fwhen_005f0.setPageContext(_jspx_page_context);
    _jspx_th_c_005fwhen_005f0.setParent((javax.servlet.jsp.tagext.Tag) _jspx_th_c_005fchoose_005f0);
    // /vibesync/postView.jsp(242,18) name = test type = boolean reqTime = true required = true fragment = false deferredValue = false expectedTypeName = null deferredMethod = false methodSignature = null
    _jspx_th_c_005fwhen_005f0.setTest(((java.lang.Boolean) org.apache.jasper.runtime.PageContextImpl.proprietaryEvaluate("${not empty user}", boolean.class, (javax.servlet.jsp.PageContext)_jspx_page_context, null)).booleanValue());
    int _jspx_eval_c_005fwhen_005f0 = _jspx_th_c_005fwhen_005f0.doStartTag();
    if (_jspx_eval_c_005fwhen_005f0 != javax.servlet.jsp.tagext.Tag.SKIP_BODY) {
      do {
        out.write("\r\n");
        out.write("                      <form id=\"comment-form\" style=\"margin-bottom: 1.864rem;\">\r\n");
        out.write("                          <input type=\"hidden\" name=\"noteIdx\" value=\"");
        out.write((java.lang.String) org.apache.jasper.runtime.PageContextImpl.proprietaryEvaluate("${note.note_idx}", java.lang.String.class, (javax.servlet.jsp.PageContext)_jspx_page_context, null));
        out.write("\">\r\n");
        out.write("                          <div class=\"textarea-div\"\r\n");
        out.write("                              style=\"display: flex; align-items: center;\">\r\n");
        out.write("                              <textarea name=\"text\" rows=\"3\" placeholder=\"댓글을 입력하세요...\"\r\n");
        out.write("                                  required\r\n");
        out.write("                                  style=\"width: 100%; resize: none; padding: 8px; border: solid 2px var(--border-color); border-radius: 4px 0 0 4px; outline: none; background-color: var(--background-color); color: var(--font-color);\"></textarea>\r\n");
        out.write("                              <button type=\"submit\"\r\n");
        out.write("                                  style=\"margin: 0px; padding: 5px 10px; height: 65px; border: solid 2px var(--border-color); border-radius: 0 4px 4px 0; border-left: none; background-color: var(--card-head); color:var(--card-back); font-weight: bold;\">작성</button>\r\n");
        out.write("                          </div>\r\n");
        out.write("                      </form>\r\n");
        out.write("                  ");
        int evalDoAfterBody = _jspx_th_c_005fwhen_005f0.doAfterBody();
        if (evalDoAfterBody != javax.servlet.jsp.tagext.BodyTag.EVAL_BODY_AGAIN)
          break;
      } while (true);
    }
    if (_jspx_th_c_005fwhen_005f0.doEndTag() == javax.servlet.jsp.tagext.Tag.SKIP_PAGE) {
      return true;
    }
    _005fjspx_005ftagPool_005fc_005fwhen_0026_005ftest.reuse(_jspx_th_c_005fwhen_005f0);
    return false;
  }

  private boolean _jspx_meth_c_005fotherwise_005f0(javax.servlet.jsp.tagext.JspTag _jspx_th_c_005fchoose_005f0, javax.servlet.jsp.PageContext _jspx_page_context)
          throws java.lang.Throwable {
    javax.servlet.jsp.PageContext pageContext = _jspx_page_context;
    javax.servlet.jsp.JspWriter out = _jspx_page_context.getOut();
    //  c:otherwise
    org.apache.taglibs.standard.tag.common.core.OtherwiseTag _jspx_th_c_005fotherwise_005f0 = (org.apache.taglibs.standard.tag.common.core.OtherwiseTag) _005fjspx_005ftagPool_005fc_005fotherwise.get(org.apache.taglibs.standard.tag.common.core.OtherwiseTag.class);
    _jspx_th_c_005fotherwise_005f0.setPageContext(_jspx_page_context);
    _jspx_th_c_005fotherwise_005f0.setParent((javax.servlet.jsp.tagext.Tag) _jspx_th_c_005fchoose_005f0);
    int _jspx_eval_c_005fotherwise_005f0 = _jspx_th_c_005fotherwise_005f0.doStartTag();
    if (_jspx_eval_c_005fotherwise_005f0 != javax.servlet.jsp.tagext.Tag.SKIP_BODY) {
      do {
        out.write("\r\n");
        out.write("                      <div class=\"comment-login-prompt\" \r\n");
        out.write("                          style=\"margin-bottom: 1.864rem; padding: 20px; border: 2px solid var(--border-color); border-radius: 4px; text-align: center; cursor: pointer;\">\r\n");
        out.write("                          <a href=\"javascript:void(0);\" onclick=\"requireLogin()\" style=\"text-decoration: none; color: #888; font-weight: bold;\">\r\n");
        out.write("                              로그인 후 댓글을 작성할 수 있습니다.\r\n");
        out.write("                          </a>\r\n");
        out.write("                      </div>\r\n");
        out.write("                  ");
        int evalDoAfterBody = _jspx_th_c_005fotherwise_005f0.doAfterBody();
        if (evalDoAfterBody != javax.servlet.jsp.tagext.BodyTag.EVAL_BODY_AGAIN)
          break;
      } while (true);
    }
    if (_jspx_th_c_005fotherwise_005f0.doEndTag() == javax.servlet.jsp.tagext.Tag.SKIP_PAGE) {
      return true;
    }
    _005fjspx_005ftagPool_005fc_005fotherwise.reuse(_jspx_th_c_005fotherwise_005f0);
    return false;
  }
}
