/*
 * Generated by the Jasper component of Apache Tomcat
 * Version: Apache Tomcat/9.0.104
 * Generated at: 2025-06-23 08:17:18 UTC
 * Note: The last modified time of this file was set to
 *       the last modified time of the source file after
 *       generation to assist with modification tracking.
 */
package org.apache.jsp.vibesync;

import javax.servlet.*;
import javax.servlet.http.*;
import javax.servlet.jsp.*;
import java.util.Enumeration;
import java.net.URLEncoder;

public final class userPage_jsp extends org.apache.jasper.runtime.HttpJspBase
    implements org.apache.jasper.runtime.JspSourceDependent,
                 org.apache.jasper.runtime.JspSourceImports {

  private static final javax.servlet.jsp.JspFactory _jspxFactory =
          javax.servlet.jsp.JspFactory.getDefaultFactory();

  private static java.util.Map<java.lang.String,java.lang.Long> _jspx_dependants;

  static {
    _jspx_dependants = new java.util.HashMap<java.lang.String,java.lang.Long>(3);
    _jspx_dependants.put("/WEB-INF/lib/jstl-1.2.jar", Long.valueOf(1749773114000L));
    _jspx_dependants.put("jar:file:/C:/Class/vibesync/.metadata/.plugins/org.eclipse.wst.server.core/tmp0/wtpwebapps/vibesync/WEB-INF/lib/jstl-1.2.jar!/META-INF/c.tld", Long.valueOf(1153352682000L));
    _jspx_dependants.put("jar:file:/C:/Class/vibesync/.metadata/.plugins/org.eclipse.wst.server.core/tmp0/wtpwebapps/vibesync/WEB-INF/lib/jstl-1.2.jar!/META-INF/fmt.tld", Long.valueOf(1153352682000L));
  }

  private static final java.util.Set<java.lang.String> _jspx_imports_packages;

  private static final java.util.Set<java.lang.String> _jspx_imports_classes;

  static {
    _jspx_imports_packages = new java.util.LinkedHashSet<>(4);
    _jspx_imports_packages.add("javax.servlet");
    _jspx_imports_packages.add("javax.servlet.http");
    _jspx_imports_packages.add("javax.servlet.jsp");
    _jspx_imports_classes = new java.util.LinkedHashSet<>(3);
    _jspx_imports_classes.add("java.net.URLEncoder");
    _jspx_imports_classes.add("java.util.Enumeration");
  }

  private org.apache.jasper.runtime.TagHandlerPool _005fjspx_005ftagPool_005fc_005fchoose;
  private org.apache.jasper.runtime.TagHandlerPool _005fjspx_005ftagPool_005fc_005fwhen_0026_005ftest;
  private org.apache.jasper.runtime.TagHandlerPool _005fjspx_005ftagPool_005fc_005fotherwise;
  private org.apache.jasper.runtime.TagHandlerPool _005fjspx_005ftagPool_005fc_005fif_0026_005ftest;
  private org.apache.jasper.runtime.TagHandlerPool _005fjspx_005ftagPool_005fc_005fforEach_0026_005fvar_005fitems;

  private volatile javax.el.ExpressionFactory _el_expressionfactory;
  private volatile org.apache.tomcat.InstanceManager _jsp_instancemanager;

  public java.util.Map<java.lang.String,java.lang.Long> getDependants() {
    return _jspx_dependants;
  }

  public java.util.Set<java.lang.String> getPackageImports() {
    return _jspx_imports_packages;
  }

  public java.util.Set<java.lang.String> getClassImports() {
    return _jspx_imports_classes;
  }

  public javax.el.ExpressionFactory _jsp_getExpressionFactory() {
    if (_el_expressionfactory == null) {
      synchronized (this) {
        if (_el_expressionfactory == null) {
          _el_expressionfactory = _jspxFactory.getJspApplicationContext(getServletConfig().getServletContext()).getExpressionFactory();
        }
      }
    }
    return _el_expressionfactory;
  }

  public org.apache.tomcat.InstanceManager _jsp_getInstanceManager() {
    if (_jsp_instancemanager == null) {
      synchronized (this) {
        if (_jsp_instancemanager == null) {
          _jsp_instancemanager = org.apache.jasper.runtime.InstanceManagerFactory.getInstanceManager(getServletConfig());
        }
      }
    }
    return _jsp_instancemanager;
  }

  public void _jspInit() {
    _005fjspx_005ftagPool_005fc_005fchoose = org.apache.jasper.runtime.TagHandlerPool.getTagHandlerPool(getServletConfig());
    _005fjspx_005ftagPool_005fc_005fwhen_0026_005ftest = org.apache.jasper.runtime.TagHandlerPool.getTagHandlerPool(getServletConfig());
    _005fjspx_005ftagPool_005fc_005fotherwise = org.apache.jasper.runtime.TagHandlerPool.getTagHandlerPool(getServletConfig());
    _005fjspx_005ftagPool_005fc_005fif_0026_005ftest = org.apache.jasper.runtime.TagHandlerPool.getTagHandlerPool(getServletConfig());
    _005fjspx_005ftagPool_005fc_005fforEach_0026_005fvar_005fitems = org.apache.jasper.runtime.TagHandlerPool.getTagHandlerPool(getServletConfig());
  }

  public void _jspDestroy() {
    _005fjspx_005ftagPool_005fc_005fchoose.release();
    _005fjspx_005ftagPool_005fc_005fwhen_0026_005ftest.release();
    _005fjspx_005ftagPool_005fc_005fotherwise.release();
    _005fjspx_005ftagPool_005fc_005fif_0026_005ftest.release();
    _005fjspx_005ftagPool_005fc_005fforEach_0026_005fvar_005fitems.release();
  }

  public void _jspService(final javax.servlet.http.HttpServletRequest request, final javax.servlet.http.HttpServletResponse response)
      throws java.io.IOException, javax.servlet.ServletException {

    if (!javax.servlet.DispatcherType.ERROR.equals(request.getDispatcherType())) {
      final java.lang.String _jspx_method = request.getMethod();
      if ("OPTIONS".equals(_jspx_method)) {
        response.setHeader("Allow","GET, HEAD, POST, OPTIONS");
        return;
      }
      if (!"GET".equals(_jspx_method) && !"POST".equals(_jspx_method) && !"HEAD".equals(_jspx_method)) {
        response.setHeader("Allow","GET, HEAD, POST, OPTIONS");
        response.sendError(HttpServletResponse.SC_METHOD_NOT_ALLOWED, "JSP들은 오직 GET, POST 또는 HEAD 메소드만을 허용합니다. Jasper는 OPTIONS 메소드 또한 허용합니다.");
        return;
      }
    }

    final javax.servlet.jsp.PageContext pageContext;
    javax.servlet.http.HttpSession session = null;
    final javax.servlet.ServletContext application;
    final javax.servlet.ServletConfig config;
    javax.servlet.jsp.JspWriter out = null;
    final java.lang.Object page = this;
    javax.servlet.jsp.JspWriter _jspx_out = null;
    javax.servlet.jsp.PageContext _jspx_page_context = null;


    try {
      response.setContentType("text/html; charset=UTF-8");
      pageContext = _jspxFactory.getPageContext(this, request, response,
      			null, true, 8192, true);
      _jspx_page_context = pageContext;
      application = pageContext.getServletContext();
      config = pageContext.getServletConfig();
      session = pageContext.getSession();
      out = pageContext.getOut();
      _jspx_out = out;

      out.write("\r\n");
      out.write("\r\n");
      out.write("\r\n");
 String contextPath = request.getContextPath() + "/vibesync"; 
      out.write("\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("<!DOCTYPE html>\r\n");
      org.apache.jasper.runtime.JspRuntimeLibrary.include(request, response, "/vibesync/includes/header.jsp", out, false);
      out.write("\r\n");
      out.write("<head>\r\n");
      out.write("    <meta charset=\"UTF-8\">\r\n");
      out.write("    <meta name=\"viewport\" content=\"width=device-width, initial-scale=1.0\">\r\n");
      out.write("    <title>user</title>\r\n");
      out.write("    <link rel=\"icon\" href=\"./sources/favicon.ico\" />\r\n");
      out.write("    <link rel=\"stylesheet\" href=\"./css/style.css\">\r\n");
      out.write("    <link rel=\"stylesheet\" href=\"./css/sidebar.css\">\r\n");
      out.write("    <script src=\"https://code.jquery.com/jquery-3.7.1.min.js\"></script>\r\n");
      out.write("    <script defer src=\"./js/script.js\"></script>\r\n");
      out.write("    <link rel=\"stylesheet\" href=\"https://cdnjs.cloudflare.com/ajax/libs/font-awesome/6.5.2/css/all.min.css\">\r\n");
      out.write("<style>\r\n");
      out.write("h3 { margin: 0; }\r\n");
      out.write("#left-wrapper {display: flex; height: 100%; gap: 20px; justify-content: center; align-items: center;}\r\n");
      out.write(".wp_btn {background: linear-gradient(90deg, rgba(138, 196, 255, 1) 0%, rgba(227, 176, 255, 1) 50%, rgba(165, 250, 120, 1) 100%);}\r\n");
      out.write(".wp_btn img{width: 1.8em; height: 25px; margin-right: 6px;}\r\n");
      out.write("#settingBtn { background: #6c757d; color: white; border: none; font-weight: 700; cursor: pointer; transition: background-color 0.18s; }\r\n");
      out.write("#settingBtn img {width: 1.8em; height: 26px;}\r\n");
      out.write("#settingBtn:hover { background: #5a6268; }\r\n");
      out.write(".name_function button { border-radius: 5px; }\r\n");
      out.write("#pageCreateBtn { position: fixed; bottom: 20px; right: 20px; width: min(50px, 8vw); height: min(50px, 8vw); border-radius: 50%; background: #8ac4ff; color: #fff; font-size: min(24px,4vw); font-weight: bold; z-index: 1000; border: none; cursor: pointer; }.modal-overlay { position: fixed; top: 0; left: 0; width: 100%; height: 100%; background: rgba(0,0,0,0.5); display: none; justify-content: center; align-items: center; z-index: 2000; }\r\n");
      out.write("#modalWrapper { width: 100%; height: 100%; display: flex; justify-content: center; align-items: center; }\r\n");
      out.write(".modal-content { display: flex; flex-direction: column; justify-content: space-evenly; align-items: center; background: var(--background-color); padding: 20px; border-radius: 8px; width: 90%; max-width: 400px; min-height: 14rem; position: relative; }\r\n");
      out.write("#pageSelect { width: 100%; height: 2rem; text-align: center; border-radius: 10px; font-weight: bold; text-transform: uppercase; }\r\n");
      out.write("#btn_wrapper { display: flex; gap: 2rem; }\r\n");
      out.write(".btn_deco { background: #8ac4ff; border: none; color: white; padding: 4px 12px; border-radius: 6px; }\r\n");
      out.write(".btn_deco:hover { background: #4da3f9; }\r\n");
      out.write("#pageCreateForm { display: flex; flex-direction: column; }\r\n");
      out.write(".modal-close { position: absolute; top: 10px; right: 10px; cursor: pointer; font-size: 18px; border: none; background: none; color: var(--font-color); }\r\n");
      out.write("</style>\r\n");
      out.write("<style> /* Message */\r\n");
      out.write("#up_msg_btn { background-color: #fe4f4f; color: #fff; border: none; font-weight: 700;  display: flex; align-items: center; gap: 13px; letter-spacing: 0.3px; cursor: pointer; outline: none; transition: background-color 0.18s ease-in-out, transform 0.12s; }\r\n");
      out.write("#up_msg_btn i { filter: invert(0) !important; font-size: 1.18em; color: #fff; }\r\n");
      out.write("#up_msg_btn:hover { background: #fe1717; color: #fff; }\r\n");
      out.write(".modal-msglist { display: none; position: fixed; z-index: 999; left: 0; top: 0; width: 100vw; height: 100vh; background: rgba(0,0,0,0.6); backdrop-filter: blur(2.5px); justify-content: center; align-items: center; }\r\n");
      out.write(".modal-msg { position: relative; background: var(--background-color); border-radius: 20px; width: 92%; max-width: 415px; min-width: 330px; min-height: 390px; max-height: 78vh; display: flex; flex-direction: column; padding-bottom: 13px; border: none; animation: zoomIn 0.21s;  }\r\n");
      out.write("@keyframes zoomIn { from { transform: scale(0.97); opacity: 0; } to { transform: scale(1); opacity: 1; } }\r\n");
      out.write("#msgRoomTitle { font-size: 18px; font-weight: 700; color: var(--font-size); padding: 18px 0 12px 0; border-bottom: 2px solid var(--border-color); background: transparent; margin: 0 0 6px 0; text-align: center; letter-spacing: 0.02em; }\r\n");
      out.write("#msgRoomTitle i { margin-right: 9px; color: var(--font-color); font-size: 20px; }\r\n");
      out.write(".close-modal { position: absolute; top: 13px; right: 17px; color: #bcb8ad; font-size: 26px; font-weight: 400; cursor: pointer; background: none; border: none; border-radius: 50%; width: 32px; height: 32px; display: flex; align-items: center; justify-content: center; transition: background 0.13s, color 0.12s; }\r\n");
      out.write(".close-modal:hover, .close-modal:focus { font-weight: bold; color: var(--font-color); text-decoration: none; }\r\n");
      out.write("#msgList { padding: 13px 25px 10px 25px; overflow-y:scroll; flex-grow: 1; flex-direction: column; min-height: 150px; display: flex; align-items: stretch; justify-content: flex-start; background: transparent; }\r\n");
      out.write("#msgList::-webkit-scrollbar{width: 10px;}\r\n");
      out.write("#msgList::-webkit-scrollbar-thumb{background-image:linear-gradient(90deg, rgba(138, 196, 255, 1) 0%, rgba(227, 176, 255, 1) 50%, rgba(165, 250, 120, 1) 100%);background-origin: border-box;background-clip: content-box, border-box;;border-radius: 10px;}\r\n");
      out.write("#msgList::-webkit-scrollbar-track{background-color: rgba(0,0,0,0);}\r\n");
      out.write(".no-message-placeholder { display: flex; flex-direction: column; align-items: center; justify-content: center; color: #888; text-align: center; padding: 20px; }\r\n");
      out.write(".no-message-placeholder i { font-size: 48px; margin-bottom: 16px; color: #e0e0e0; }\r\n");
      out.write(".no-message-placeholder p { margin: 0; font-size: 1rem; font-weight: 500; }\r\n");
      out.write(".msg_item { display: flex; align-items: flex-start; gap: 15px; width: 100%; background: var(--card-back); padding: 19px 18px 17px 15px; border-radius: 11px; animation: fadeInUp 0.26s; border: 2px solid var(--border-color); margin-bottom: 18px; transition: background-color 0.14s ease-in-out;  } \r\n");
      out.write(".msg_item:last-child { margin-bottom: 0; }\r\n");
      out.write(".msg_item:hover { background-color: var(--hover-color); cursor: pointer; }\r\n");
      out.write("@keyframes fadeInUp { from { opacity: 0; transform: translateY(20px);} to { opacity: 1; transform: translateY(0);} }\r\n");
      out.write(".msg_profile img { width: 44px; height: 44px; object-fit: cover; border-radius: 50%; aspect-ratio: 1/1; margin-left: 8px; margin-right: 5px; border: 1.5px solid lightgrey; background: #faf9f6; display: block; background-image:linear-gradient(var(--card-back), var(--card-back)), linear-gradient(90deg, rgba(138, 196, 255, 1) 0%, rgba(227, 176, 255, 1) 50%, rgba(165, 250, 120, 1) 100%); background-origin: border-box; background-clip: content-box, border-box; border: solid 2px transparent; }\r\n");
      out.write(".msg_text_area { flex: 1 1 auto; min-width: 0; display: flex; flex-direction: column; align-items: flex-start; }\r\n");
      out.write(".msg_sender_row { display: flex; align-items: center; gap: 7px; margin-bottom: 1px; }\r\n");
      out.write(".msg_sender { font-weight: 700; font-size: 17px; color: var(--font-color); margin-bottom: 1px; }\r\n");
      out.write(".msg_preview { font-size: 14px; font-weight: 450; color: var(--msg-sub-font); margin: 2px 0 0 0; word-break: break-all; opacity: 0.93; text-overflow: ellipsis; }\r\n");
      out.write(".msg_time { font-size: 12px; color: var(--msg-date-font); margin-top: 5px; white-space: nowrap; }\r\n");
      out.write(".unread-badge { display: flex; align-items: center; justify-content: center; min-width: 20px; height: 20px; padding: 0 5px; background: #45607d; color: #fff; font-size: 12px; font-weight: 700; border-radius: 50%; box-shadow: 0 1px 3px rgba(175,175,160,0.10); margin-left: 5px; user-select: none; }\r\n");
      out.write("</style>\r\n");
      out.write("<style> /* Setting Modal */\r\n");
      out.write(".modal-setting-container { display: none; position: fixed; z-index: 3000; left: 0; top: 0; width: 100%; height: 100%; background: rgba(0,0,0,0.65); backdrop-filter: blur(3px); justify-content: center; align-items: center; }\r\n");
      out.write(".setting-modal-content { color: #333; background: white; padding: 25px; border-radius: 12px; width: 90%; max-width: 420px; text-align: center; position: relative; animation: zoomIn 0.2s; }\r\n");
      out.write(".setting-modal-content h4 { margin-top: 0; margin-bottom: 20px; font-size: 1.2rem; }\r\n");
      out.write(".setting-modal-content h5 { margin-top: 25px; margin-bottom: 15px; border-top: 1px solid #eee; padding-top: 25px; }\r\n");
      out.write("#passwordCheckForm input[type=\"password\"], #changePasswordForm input[type=\"password\"] { width: calc(100% - 22px); padding: 10px; margin-bottom: 10px; border: 1px solid #ccc; border-radius: 5px; }\r\n");
      out.write("#passwordCheckForm button, #profileImageForm button, #changePasswordForm button { width: 100%; padding: 10px; border: none; background: #007bff; color: white; border-radius: 5px; cursor: pointer; font-size: 1rem; margin-top: 10px; }\r\n");
      out.write(".setting-modal-close { position: absolute; top: 10px; right: 15px; font-size: 24px; border: none; background: none; cursor: pointer; color: #888; }\r\n");
      out.write(".setting-error-msg { color: red; font-size: 0.9em; margin-bottom: 10px; height: 1em; }\r\n");
      out.write("#profileImagePreview { width: 120px; height: 120px; border-radius: 50%; object-fit: cover; border: 2px solid #ddd; margin-bottom: 15px; }\r\n");
      out.write("#profileImageInput { margin: 10px 0; }\r\n");
      out.write("#btnDeleteAccount { background-color: #f8d7da; color: #721c24; border: 1px solid #f5c6cb; width: 100%; padding: 12px; margin-top: 25px; border-radius: 5px; cursor: pointer; font-weight: bold; }\r\n");
      out.write("@media (max-width: 516px) {#settingBtn {position: absolute;top: 10px;right: 10px;width: min(50px,10vw);height: min(40px,8vw) !important;display: flex;justify-content: center;}}\r\n");
      out.write("</style>\r\n");
      out.write("</head>\r\n");
      out.write("<body>\r\n");
      out.write("    <div id=\"notion-app\">\r\n");
      out.write("        <input type=\"hidden\" id=\"mode\" value=\"user\">\r\n");
      out.write("        <input type=\"hidden\" id=\"profileUserAcIdx\" value=\"");
      out.write((java.lang.String) org.apache.jasper.runtime.PageContextImpl.proprietaryEvaluate("${userPageData.userProfile.ac_idx}", java.lang.String.class, (javax.servlet.jsp.PageContext)_jspx_page_context, null));
      out.write("\">\r\n");
      out.write("        <input type=\"hidden\" id=\"profileUserNickname\" value=\"");
      out.write((java.lang.String) org.apache.jasper.runtime.PageContextImpl.proprietaryEvaluate("${userPageData.userProfile.nickname}", java.lang.String.class, (javax.servlet.jsp.PageContext)_jspx_page_context, null));
      out.write("\">\r\n");
      out.write("        <input type=\"hidden\" id=\"currentPageNumber\" value=\"");
      out.write((java.lang.String) org.apache.jasper.runtime.PageContextImpl.proprietaryEvaluate("${userPageData.nextPageNumber - 1}", java.lang.String.class, (javax.servlet.jsp.PageContext)_jspx_page_context, null));
      out.write("\">\r\n");
      out.write("        <input type=\"hidden\" id=\"hasMorePosts\" value=\"");
      out.write((java.lang.String) org.apache.jasper.runtime.PageContextImpl.proprietaryEvaluate("${userPageData.hasMorePosts ? 'true' : 'false'}", java.lang.String.class, (javax.servlet.jsp.PageContext)_jspx_page_context, null));
      out.write("\">\r\n");
      out.write("\r\n");
      out.write("        <div class=\"notion-app-inner\">\r\n");
      out.write("            ");
      org.apache.jasper.runtime.JspRuntimeLibrary.include(request, response, "./includes/sidebar.jsp", out, true);
      out.write("\r\n");
      out.write("            <div id=\"content_wrapper\">\r\n");
      out.write("                <section id=\"content\">\r\n");
      out.write("                    <div id=\"user_wrapper\">\r\n");
      out.write("                        <div id=\"userInfo\">\r\n");
      out.write("                            <div class=\"user_profile_img\">\r\n");
      out.write("                                ");
      //  c:choose
      org.apache.taglibs.standard.tag.common.core.ChooseTag _jspx_th_c_005fchoose_005f0 = (org.apache.taglibs.standard.tag.common.core.ChooseTag) _005fjspx_005ftagPool_005fc_005fchoose.get(org.apache.taglibs.standard.tag.common.core.ChooseTag.class);
      _jspx_th_c_005fchoose_005f0.setPageContext(_jspx_page_context);
      _jspx_th_c_005fchoose_005f0.setParent(null);
      int _jspx_eval_c_005fchoose_005f0 = _jspx_th_c_005fchoose_005f0.doStartTag();
      if (_jspx_eval_c_005fchoose_005f0 != javax.servlet.jsp.tagext.Tag.SKIP_BODY) {
        do {
          out.write("\r\n");
          out.write("                                    ");
          if (_jspx_meth_c_005fwhen_005f0(_jspx_th_c_005fchoose_005f0, _jspx_page_context))
            return;
          out.write("\r\n");
          out.write("                                    ");
          //  c:otherwise
          org.apache.taglibs.standard.tag.common.core.OtherwiseTag _jspx_th_c_005fotherwise_005f0 = (org.apache.taglibs.standard.tag.common.core.OtherwiseTag) _005fjspx_005ftagPool_005fc_005fotherwise.get(org.apache.taglibs.standard.tag.common.core.OtherwiseTag.class);
          _jspx_th_c_005fotherwise_005f0.setPageContext(_jspx_page_context);
          _jspx_th_c_005fotherwise_005f0.setParent((javax.servlet.jsp.tagext.Tag) _jspx_th_c_005fchoose_005f0);
          int _jspx_eval_c_005fotherwise_005f0 = _jspx_th_c_005fotherwise_005f0.doStartTag();
          if (_jspx_eval_c_005fotherwise_005f0 != javax.servlet.jsp.tagext.Tag.SKIP_BODY) {
            do {
              out.write("\r\n");
              out.write("                                        <img id=\"mainProfileImage\" src=\"");
              out.print(contextPath );
              out.write("/sources/default/default_user.jpg\" alt=\"기본 프로필\">\r\n");
              out.write("                                    ");
              int evalDoAfterBody = _jspx_th_c_005fotherwise_005f0.doAfterBody();
              if (evalDoAfterBody != javax.servlet.jsp.tagext.BodyTag.EVAL_BODY_AGAIN)
                break;
            } while (true);
          }
          if (_jspx_th_c_005fotherwise_005f0.doEndTag() == javax.servlet.jsp.tagext.Tag.SKIP_PAGE) {
            return;
          }
          _005fjspx_005ftagPool_005fc_005fotherwise.reuse(_jspx_th_c_005fotherwise_005f0);
          out.write("\r\n");
          out.write("                                ");
          int evalDoAfterBody = _jspx_th_c_005fchoose_005f0.doAfterBody();
          if (evalDoAfterBody != javax.servlet.jsp.tagext.BodyTag.EVAL_BODY_AGAIN)
            break;
        } while (true);
      }
      if (_jspx_th_c_005fchoose_005f0.doEndTag() == javax.servlet.jsp.tagext.Tag.SKIP_PAGE) {
        return;
      }
      _005fjspx_005ftagPool_005fc_005fchoose.reuse(_jspx_th_c_005fchoose_005f0);
      out.write("\r\n");
      out.write("                            </div>    \r\n");
      out.write("                            <div class=\"userInfo_detail\">\r\n");
      out.write("                                <div class=\"name_function\">\r\n");
      out.write("                                    <div id=\"left-wrapper\">\r\n");
      out.write("                                        <p>");
      out.write((java.lang.String) org.apache.jasper.runtime.PageContextImpl.proprietaryEvaluate("${userPageData.userProfile.nickname}", java.lang.String.class, (javax.servlet.jsp.PageContext)_jspx_page_context, null));
      out.write("</p>\r\n");
      out.write("                                        ");
      if (_jspx_meth_c_005fif_005f0(_jspx_page_context))
        return;
      out.write("\r\n");
      out.write("                                        <button id=\"up_msg_btn\"><i class=\"fa-solid fa-paper-plane\"></i> Message</button>\r\n");
      out.write("                                        ");
      if (_jspx_meth_c_005fif_005f1(_jspx_page_context))
        return;
      out.write("\r\n");
      out.write("                                    </div>\r\n");
      out.write("                                    ");
      if (_jspx_meth_c_005fif_005f2(_jspx_page_context))
        return;
      out.write("\r\n");
      out.write("                                </div>\r\n");
      out.write("                                <div class=\"user_count\">\r\n");
      out.write("                                    <p>POST <span>");
      out.write((java.lang.String) org.apache.jasper.runtime.PageContextImpl.proprietaryEvaluate("${userPageData.userProfile.postCount}", java.lang.String.class, (javax.servlet.jsp.PageContext)_jspx_page_context, null));
      out.write("</span></p>\r\n");
      out.write("                                    <p>FOLLOWER <span id=\"profileFollowerCount\">");
      out.write((java.lang.String) org.apache.jasper.runtime.PageContextImpl.proprietaryEvaluate("${userPageData.userProfile.followerCount}", java.lang.String.class, (javax.servlet.jsp.PageContext)_jspx_page_context, null));
      out.write("</span></p>\r\n");
      out.write("                                    <p>FOLLOW <span>");
      out.write((java.lang.String) org.apache.jasper.runtime.PageContextImpl.proprietaryEvaluate("${userPageData.userProfile.followingCount}", java.lang.String.class, (javax.servlet.jsp.PageContext)_jspx_page_context, null));
      out.write("</span></p>\r\n");
      out.write("                                </div>\r\n");
      out.write("                            </div>\r\n");
      out.write("                        </div>\r\n");
      out.write("                        <div class=\"line\"></div>\r\n");
      out.write("                        <div id=\"con_wrapper\">\r\n");
      out.write("                            ");
      //  c:forEach
      org.apache.taglibs.standard.tag.rt.core.ForEachTag _jspx_th_c_005fforEach_005f0 = (org.apache.taglibs.standard.tag.rt.core.ForEachTag) _005fjspx_005ftagPool_005fc_005fforEach_0026_005fvar_005fitems.get(org.apache.taglibs.standard.tag.rt.core.ForEachTag.class);
      _jspx_th_c_005fforEach_005f0.setPageContext(_jspx_page_context);
      _jspx_th_c_005fforEach_005f0.setParent(null);
      // /vibesync/userPage.jsp(136,28) name = var type = java.lang.String reqTime = false required = false fragment = false deferredValue = false expectedTypeName = null deferredMethod = false methodSignature = null
      _jspx_th_c_005fforEach_005f0.setVar("post");
      // /vibesync/userPage.jsp(136,28) name = items type = javax.el.ValueExpression reqTime = true required = false fragment = false deferredValue = true expectedTypeName = java.lang.Object deferredMethod = false methodSignature = null
      _jspx_th_c_005fforEach_005f0.setItems(new org.apache.jasper.el.JspValueExpression("/vibesync/userPage.jsp(136,28) '${userPageData.posts}'",_jsp_getExpressionFactory().createValueExpression(_jspx_page_context.getELContext(),"${userPageData.posts}",java.lang.Object.class)).getValue(_jspx_page_context.getELContext()));
      int[] _jspx_push_body_count_c_005fforEach_005f0 = new int[] { 0 };
      try {
        int _jspx_eval_c_005fforEach_005f0 = _jspx_th_c_005fforEach_005f0.doStartTag();
        if (_jspx_eval_c_005fforEach_005f0 != javax.servlet.jsp.tagext.Tag.SKIP_BODY) {
          do {
            out.write("\r\n");
            out.write("                                <a href=\"");
            out.print(contextPath );
            out.write("/postView.do?nidx=");
            out.write((java.lang.String) org.apache.jasper.runtime.PageContextImpl.proprietaryEvaluate("${post.note_idx}", java.lang.String.class, (javax.servlet.jsp.PageContext)_jspx_page_context, null));
            out.write("\">\r\n");
            out.write("                                  <div class=\"con_item\">\r\n");
            out.write("                                    ");
            if (_jspx_meth_c_005fchoose_005f1(_jspx_th_c_005fforEach_005f0, _jspx_page_context, _jspx_push_body_count_c_005fforEach_005f0))
              return;
            out.write("                                   \r\n");
            out.write("                                  </div>\r\n");
            out.write("                                </a>\r\n");
            out.write("                            ");
            int evalDoAfterBody = _jspx_th_c_005fforEach_005f0.doAfterBody();
            if (evalDoAfterBody != javax.servlet.jsp.tagext.BodyTag.EVAL_BODY_AGAIN)
              break;
          } while (true);
        }
        if (_jspx_th_c_005fforEach_005f0.doEndTag() == javax.servlet.jsp.tagext.Tag.SKIP_PAGE) {
          return;
        }
      } catch (java.lang.Throwable _jspx_exception) {
        while (_jspx_push_body_count_c_005fforEach_005f0[0]-- > 0)
          out = _jspx_page_context.popBody();
        _jspx_th_c_005fforEach_005f0.doCatch(_jspx_exception);
      } finally {
        _jspx_th_c_005fforEach_005f0.doFinally();
      }
      _005fjspx_005ftagPool_005fc_005fforEach_0026_005fvar_005fitems.reuse(_jspx_th_c_005fforEach_005f0);
      out.write("\r\n");
      out.write("                        </div>\r\n");
      out.write("                        <div id=\"loadingIndicator\" style=\"display: none; text-align: center; padding: 20px;\">로딩 중...</div>\r\n");
      out.write("                    </div>\r\n");
      out.write("                </section>\r\n");
      out.write("            </div>\r\n");
      out.write("        </div>\r\n");
      out.write("    </div>\r\n");
      out.write("    \r\n");
      out.write("    ");
      if (_jspx_meth_c_005fif_005f3(_jspx_page_context))
        return;
      out.write("\r\n");
      out.write("\r\n");
      out.write("    <div id=\"pageModalOverlay\" class=\"modal-overlay\">\r\n");
      out.write("        <div id=\"modalWrapper\">\r\n");
      out.write("            <div class=\"modal-content\" id=\"pageModalContent\" style=\"border: solid 2px var(--border-color);\">\r\n");
      out.write("            <button class=\"modal-close\" id=\"pageModalClose\">&times;</button>\r\n");
      out.write("            </div>\r\n");
      out.write("        </div>\r\n");
      out.write("    </div>\r\n");
      out.write("    \r\n");
      out.write("    <div id=\"msgListModal\" class=\"modal-msglist\">\r\n");
      out.write("        <div class=\"modal-msg\" style=\"min-width:350px; max-width:430px;\">\r\n");
      out.write("            <span class=\"close-modal\" onclick=\"closeMsgListModal()\"> &times; </span>\r\n");
      out.write("            <h3 id=\"msgRoomTitle\"></h3>\r\n");
      out.write("            <div id=\"msgList\"></div>\r\n");
      out.write("        </div>\r\n");
      out.write("    </div>\r\n");
      out.write("    \r\n");
      out.write("    <div id=\"chatModal\" class=\"chat-modal-super-container\">\r\n");
      out.write("         <div class=\"chat-modal-content\">\r\n");
      out.write("            <span class=\"close-modal\" onclick=\"closeChatModal()\"> &times; </span>\r\n");
      out.write("            <h4 id=\"chatTitle\"></h4>\r\n");
      out.write("            <div id=\"chatHistory\"></div>\r\n");
      out.write("            <div class=\"chat-input-row\">\r\n");
      out.write("                <input type=\"text\" id=\"chatInput\" placeholder=\"메시지를 입력하세요...\" autocomplete=\"off\" />\r\n");
      out.write("                <button type=\"button\" id=\"sendMessageBtn\" title=\"전송\" onclick=\"sendChatMessage();\">\r\n");
      out.write("                    <i class=\"fa-solid fa-paper-plane\" style=\"color:white; font-size: 16px; filter: invert(0) !important;\"></i>\r\n");
      out.write("                </button>\r\n");
      out.write("            </div>\r\n");
      out.write("         </div>\r\n");
      out.write("    </div>\r\n");
      out.write("    \r\n");
      out.write("    <div id=\"modal-setting-container\" class=\"modal-setting-container\">\r\n");
      out.write("        <div class=\"setting-modal-content\">\r\n");
      out.write("            <button class=\"setting-modal-close\">&times;</button>\r\n");
      out.write("            <div id=\"settingContent\"></div>\r\n");
      out.write("        </div>\r\n");
      out.write("    </div>\r\n");
      out.write("\r\n");
      out.write("    <form id=\"logoutForm\" action=\"user.do\" method=\"post\">\r\n");
      out.write("    	<input type=\"hidden\" name=\"accessType\" value=\"logout\">\r\n");
      out.write("    </form>\r\n");
      out.write("\r\n");
      out.write("    <script>\r\n");
      out.write("        let currentChatSenderIdx = 0;\r\n");
      out.write("        let currentUserData = null; // 인증 성공 시 사용자 정보를 저장할 전역 변수\r\n");
      out.write("\r\n");
      out.write("        /*무한스크롤 함수*/\r\n");
      out.write("        var isLoading = false; // 중복 요청 방지 플래그\r\n");
      out.write("        \r\n");
      out.write("        $.ajaxSetup({\r\n");
      out.write("            cache: false\r\n");
      out.write("          });\r\n");
      out.write("        \r\n");
      out.write("        function loadMorePosts(){\r\n");
      out.write("            var hasMore = ($('#hasMorePosts').val() === 'true');\r\n");
      out.write("            if (!hasMore || isLoading) return;\r\n");
      out.write("            isLoading = true;\r\n");
      out.write("            $('#loadingIndicator').show();\r\n");
      out.write("            var nextPage = parseInt($('#currentPageNumber').val()) + 1;\r\n");
      out.write("            var profileUserId = $('#profileUserAcIdx').val();\r\n");
      out.write("            \r\n");
      out.write("            $.ajax({\r\n");
      out.write("                url: '");
      out.write((java.lang.String) org.apache.jasper.runtime.PageContextImpl.proprietaryEvaluate("${pageContext.request.contextPath}", java.lang.String.class, (javax.servlet.jsp.PageContext)_jspx_page_context, null));
      out.write("/loadMorePosts.do', \r\n");
      out.write("                type: 'GET', \r\n");
      out.write("                data: { userId: profileUserId, page: nextPage },\r\n");
      out.write("                dataType: 'json',\r\n");
      out.write("                success: function(response) {\r\n");
      out.write("                    if (response.posts && response.posts.length > 0) {\r\n");
      out.write("                        var postsHtml = '';\r\n");
      out.write("                        var contextPath = '");
      out.write((java.lang.String) org.apache.jasper.runtime.PageContextImpl.proprietaryEvaluate("${pageContext.request.contextPath}", java.lang.String.class, (javax.servlet.jsp.PageContext)_jspx_page_context, null));
      out.write("';\r\n");
      out.write("                        $.each(response.posts, function(index, post) {\r\n");
      out.write("                            var thumbnailUrl = post.thumbnail_img ? contextPath + post.thumbnail_img : contextPath + 'vibesync/sources/default/default_thumbnail.png';\r\n");
      out.write("                            postsHtml += '<a href=\"' + contextPath + '/vibesync/postView.do?nidx=' + post.note_idx + '\">';\r\n");
      out.write("                            postsHtml += '    <div class=\"con_item\">';\r\n");
      out.write("                            postsHtml += '        <img src=\"' + thumbnailUrl + '\" alt=\"' + post.title + ' 썸네일\">';\r\n");
      out.write("                            postsHtml += '    </div>';\r\n");
      out.write("                            postsHtml += '</a>';\r\n");
      out.write("                        });\r\n");
      out.write("                        $('#con_wrapper').append(postsHtml);\r\n");
      out.write("                        $('#currentPageNumber').val(nextPage);\r\n");
      out.write("                    }\r\n");
      out.write("                    if (!response.hasMore) {\r\n");
      out.write("                        $('#hasMorePosts').val('false');\r\n");
      out.write("                        $('#loadingIndicator').text('더 이상 게시물이 없습니다.');\r\n");
      out.write("                    } else {\r\n");
      out.write("                        $('#loadingIndicator').hide();\r\n");
      out.write("                        setTimeout(function() { checkAndLoadIfNeeded(); }, 100);\r\n");
      out.write("                    }\r\n");
      out.write("                    isLoading = false;\r\n");
      out.write("                },\r\n");
      out.write("                error: function() {\r\n");
      out.write("                    alert('게시물을 추가로 불러오는 중 오류가 발생했습니다.');\r\n");
      out.write("                    $('#loadingIndicator').hide();\r\n");
      out.write("                    isLoading = false;\r\n");
      out.write("                }\r\n");
      out.write("            });\r\n");
      out.write("        }\r\n");
      out.write("        \r\n");
      out.write("       function checkAndLoadIfNeeded() {\r\n");
      out.write("            if ($(document).height() <= $(window).height() && ($('#hasMorePosts').val() === 'true')) {\r\n");
      out.write("                console.log(\"콘텐츠가 부족하여 새 게시물을 자동으로 로드합니다.\");\r\n");
      out.write("                loadMorePosts();\r\n");
      out.write("            }\r\n");
      out.write("       }\r\n");
      out.write("    \r\n");
      out.write("       $(document).ready(function() {\r\n");
      out.write("            $('#profileFollowBtn').on('click', function() {\r\n");
      out.write("                var $button = $(this);\r\n");
      out.write("                var authorId = $button.data('author-id');\r\n");
      out.write("                var isLoggedIn = ");
      out.write((java.lang.String) org.apache.jasper.runtime.PageContextImpl.proprietaryEvaluate("${sessionScope.userInfo != null}", java.lang.String.class, (javax.servlet.jsp.PageContext)_jspx_page_context, null));
      out.write("; \r\n");
      out.write("                if (!isLoggedIn) {\r\n");
      out.write("                    alert(\"로그인이 필요합니다.\");\r\n");
      out.write("                    location.href = \"");
      out.write((java.lang.String) org.apache.jasper.runtime.PageContextImpl.proprietaryEvaluate("${pageContext.request.contextPath}", java.lang.String.class, (javax.servlet.jsp.PageContext)_jspx_page_context, null));
      out.write("/login.jsp\"; \r\n");
      out.write("                    return;\r\n");
      out.write("                }\r\n");
      out.write("                $.ajax({\r\n");
      out.write("                    url: '");
      out.write((java.lang.String) org.apache.jasper.runtime.PageContextImpl.proprietaryEvaluate("${pageContext.request.contextPath}", java.lang.String.class, (javax.servlet.jsp.PageContext)_jspx_page_context, null));
      out.write("/followToggle.do', \r\n");
      out.write("                    type: 'POST',\r\n");
      out.write("                    data: { authorId: authorId },\r\n");
      out.write("                    dataType: 'json',\r\n");
      out.write("                    success: function(response) {\r\n");
      out.write("                        if (response.success) {\r\n");
      out.write("                            if (response.following) {\r\n");
      out.write("                                $button.data('following', true).text('UNFOLLOW');\r\n");
      out.write("                            } else {\r\n");
      out.write("                                $button.data('following', false).text('FOLLOW');\r\n");
      out.write("                            }\r\n");
      out.write("                            if (typeof response.newFollowerCount !== 'undefined') {\r\n");
      out.write("                                $('#profileFollowerCount').text(response.newFollowerCount);\r\n");
      out.write("                            }\r\n");
      out.write("                        } else {\r\n");
      out.write("                            alert('오류: ' + (response.message || '팔로우 처리에 실패했습니다.'));\r\n");
      out.write("                        }\r\n");
      out.write("                    },\r\n");
      out.write("                    error: function() {\r\n");
      out.write("                        alert('팔로우 요청 중 오류가 발생했습니다.');\r\n");
      out.write("                    }\r\n");
      out.write("                });\r\n");
      out.write("            });\r\n");
      out.write("\r\n");
      out.write("            $(window).scroll(function() {\r\n");
      out.write("                if ($(window).scrollTop() + $(window).height() >= $(document).height() - 200) {\r\n");
      out.write("                    loadMorePosts();\r\n");
      out.write("                }\r\n");
      out.write("            });\r\n");
      out.write("            \r\n");
      out.write("            $(window).on('resize', function() {\r\n");
      out.write("                checkAndLoadIfNeeded();\r\n");
      out.write("            });\r\n");
      out.write("            \r\n");
      out.write("            $('#pageCreateBtn').on('click', function() {\r\n");
      out.write("                var acIdx = $('#profileUserAcIdx').val();\r\n");
      out.write("                $.get('");
      out.write((java.lang.String) org.apache.jasper.runtime.PageContextImpl.proprietaryEvaluate("${pageContext.request.contextPath}", java.lang.String.class, (javax.servlet.jsp.PageContext)_jspx_page_context, null));
      out.write("/page/modalList.do', { ac_idx: acIdx }, function(html) {\r\n");
      out.write("                    $('#pageModalContent').children(':not(.modal-close)').remove();\r\n");
      out.write("                    $('#pageModalContent').append(html);\r\n");
      out.write("                    $('#pageModalOverlay').fadeIn();\r\n");
      out.write("                });\r\n");
      out.write("            });\r\n");
      out.write("\r\n");
      out.write("            $('#pageModalOverlay').on('click', '#pageModalClose, .modal-overlay', function(e) {\r\n");
      out.write("                e.stopPropagation();\r\n");
      out.write("                $('#pageModalOverlay').fadeOut(function() {\r\n");
      out.write("                    $('#pageModalContent').children(':not(.modal-close)').remove();\r\n");
      out.write("                });\r\n");
      out.write("            });\r\n");
      out.write("\r\n");
      out.write("            $('#pageModalOverlay').on('click', '#newPageBtn', function() {\r\n");
      out.write("                $('#pageModalContent').children(':not(.modal-close)').remove();\r\n");
      out.write("                var formHtml = ''\r\n");
      out.write("                  + '<h3>새 페이지 생성</h3>'\r\n");
      out.write("                  + '<form id=\"pageCreateForm\" enctype=\"multipart/form-data\">'\r\n");
      out.write("                  + '  <label>Subject&nbsp<input type=\"text\" id=\"subject\" name=\"subject\" required/></label><br/>'\r\n");
      out.write("                  + '  <button type=\"submit\" class=\"btn_deco\">Create</button>'\r\n");
      out.write("                  + '</form>';\r\n");
      out.write("                $('#pageModalContent').append(formHtml);\r\n");
      out.write("            });\r\n");
      out.write("            \r\n");
      out.write("            $('#pageModalOverlay').on('click', '#newNoteBtn', function() {\r\n");
      out.write("                 var selectedIdx = $('#pageSelect').val();\r\n");
      out.write("                 $('#newNoteLink').attr('href', 'notecreate.do?pageidx=' + selectedIdx);\r\n");
      out.write("                 window.location.href = $('#newNoteLink').attr('href');\r\n");
      out.write("            });\r\n");
      out.write("\r\n");
      out.write("            $('#pageModalOverlay').on('submit', '#pageCreateForm', function(e) {\r\n");
      out.write("                e.preventDefault();\r\n");
      out.write("                var formData = new FormData(this);\r\n");
      out.write("                let subject = document.getElementById(\"subject\").value;\r\n");
      out.write("                $.ajax({\r\n");
      out.write("                    url: '");
      out.write((java.lang.String) org.apache.jasper.runtime.PageContextImpl.proprietaryEvaluate("${pageContext.request.contextPath}", java.lang.String.class, (javax.servlet.jsp.PageContext)_jspx_page_context, null));
      out.write("/page/create.do?subject=' + subject,\r\n");
      out.write("                    type: 'GET',\r\n");
      out.write("                    data: formData,\r\n");
      out.write("                    processData: false,\r\n");
      out.write("                    contentType: false,\r\n");
      out.write("                    dataType: 'json',\r\n");
      out.write("                    success: function(res) {\r\n");
      out.write("                        if (res.success) {\r\n");
      out.write("                            $('#pageModalOverlay').fadeOut();\r\n");
      out.write("                        } else {\r\n");
      out.write("                            alert('페이지 생성 실패: ' + (res.message || ''));\r\n");
      out.write("                        }\r\n");
      out.write("                    },\r\n");
      out.write("                    error: function() {\r\n");
      out.write("                        alert('페이지 생성 중 오류가 발생했습니다.');\r\n");
      out.write("                    }\r\n");
      out.write("                });\r\n");
      out.write("            });\r\n");
      out.write("            \r\n");
      out.write("            const isOwnProfile = ");
      out.write((java.lang.String) org.apache.jasper.runtime.PageContextImpl.proprietaryEvaluate("${sessionScope.userInfo != null && sessionScope.userInfo.ac_idx == userPageData.userProfile.ac_idx}", java.lang.String.class, (javax.servlet.jsp.PageContext)_jspx_page_context, null));
      out.write(";\r\n");
      out.write("            \r\n");
      out.write("            $('#up_msg_btn').on('click', function () {\r\n");
      out.write("                const isLoggedIn = ");
      out.write((java.lang.String) org.apache.jasper.runtime.PageContextImpl.proprietaryEvaluate("${sessionScope.userInfo != null}", java.lang.String.class, (javax.servlet.jsp.PageContext)_jspx_page_context, null));
      out.write(";\r\n");
      out.write("                if (!isLoggedIn) {\r\n");
      out.write("                    alert(\"로그인이 필요합니다.\");\r\n");
      out.write("                    location.href = \"");
      out.write((java.lang.String) org.apache.jasper.runtime.PageContextImpl.proprietaryEvaluate("${pageContext.request.contextPath}", java.lang.String.class, (javax.servlet.jsp.PageContext)_jspx_page_context, null));
      out.write("/vibesync/user.do\";\r\n");
      out.write("                    return;\r\n");
      out.write("                }\r\n");
      out.write("                if (isOwnProfile) {\r\n");
      out.write("                    openMessageModal();\r\n");
      out.write("                } else {\r\n");
      out.write("                    const profileUserId = $('#profileUserAcIdx').val();\r\n");
      out.write("                    const profileUserNickname = $('#profileUserNickname').val();\r\n");
      out.write("                    openChatWithUser(profileUserId, profileUserNickname);\r\n");
      out.write("                }\r\n");
      out.write("           });\r\n");
      out.write("            \r\n");
      out.write("            $('#msgList').on('click', '.msg_item', function() {\r\n");
      out.write("                const senderIdx = $(this).data('sender-idx');\r\n");
      out.write("                const nickname = $(this).data('nickname');\r\n");
      out.write("                openChatWithUser(senderIdx, nickname);\r\n");
      out.write("            });\r\n");
      out.write("        \r\n");
      out.write("            $(\"#chatInput\").on(\"keydown\", function(e) {\r\n");
      out.write("                if (e.key === \"Enter\" && !e.shiftKey) {\r\n");
      out.write("                    e.preventDefault();\r\n");
      out.write("                    sendChatMessage();\r\n");
      out.write("                }\r\n");
      out.write("            });\r\n");
      out.write("           \r\n");
      out.write("            $('#settingBtn').on('click', function() {\r\n");
      out.write("                showPasswordCheckView();\r\n");
      out.write("                $('#modal-setting-container').css('display', 'flex').hide().fadeIn(200);\r\n");
      out.write("            });\r\n");
      out.write("\r\n");
      out.write("            $('#modal-setting-container').on('click', '.setting-modal-close, .modal-setting-container', function(e) {\r\n");
      out.write("                if (e.target === this) {\r\n");
      out.write("                    $('#modal-setting-container').fadeOut(200);\r\n");
      out.write("                }\r\n");
      out.write("            }).on('click', '.setting-modal-content', function(e) {\r\n");
      out.write("                e.stopPropagation();\r\n");
      out.write("            });\r\n");
      out.write("\r\n");
      out.write("            $('#modal-setting-container').on('submit', '#passwordCheckForm', function(e) {\r\n");
      out.write("                e.preventDefault();\r\n");
      out.write("                const password = $(this).find('input[name=\"password\"]').val();\r\n");
      out.write("                $.ajax({\r\n");
      out.write("                    url: '");
      out.write((java.lang.String) org.apache.jasper.runtime.PageContextImpl.proprietaryEvaluate("${pageContext.request.contextPath}", java.lang.String.class, (javax.servlet.jsp.PageContext)_jspx_page_context, null));
      out.write("/setting/checkPassword.do',\r\n");
      out.write("                    type: 'POST',\r\n");
      out.write("                    data: { password: password },\r\n");
      out.write("                    dataType: 'json',\r\n");
      out.write("                    success: function(response) {\r\n");
      out.write("                        if (response.success) {\r\n");
      out.write("                            currentUserData = response.userData;\r\n");
      out.write("                            showCombinedSettingsView();\r\n");
      out.write("                        } else {\r\n");
      out.write("                            $('#passwordCheckForm .setting-error-msg').text(response.message || '인증에 실패했습니다.');\r\n");
      out.write("                        }\r\n");
      out.write("                    },\r\n");
      out.write("                    error: function(xhr) {\r\n");
      out.write("                        const errorMsg = xhr.responseJSON ? xhr.responseJSON.message : '서버 통신 중 오류가 발생했습니다.';\r\n");
      out.write("                        $('#passwordCheckForm .setting-error-msg').text(errorMsg);\r\n");
      out.write("                    }\r\n");
      out.write("                });\r\n");
      out.write("            });\r\n");
      out.write("            \r\n");
      out.write("            $('#modal-setting-container').on('change', '#profileImageInput', function() {\r\n");
      out.write("                if (this.files && this.files[0]) {\r\n");
      out.write("                    const reader = new FileReader();\r\n");
      out.write("                    \r\n");
      out.write("                    reader.onload = function(e) {\r\n");
      out.write("                        $('#profileImagePreview').attr('src', e.target.result);\r\n");
      out.write("                    }\r\n");
      out.write("                    reader.readAsDataURL(this.files[0]);\r\n");
      out.write("                }\r\n");
      out.write("            });\r\n");
      out.write("\r\n");
      out.write("         // [수정됨] 프로필 이미지 변경 폼 제출 (이미지 미리 로드 기능 추가)\r\n");
      out.write("            $('#modal-setting-container').on('submit', '#profileImageForm', function(e) {\r\n");
      out.write("                e.preventDefault();\r\n");
      out.write("                const fileInput = document.getElementById('profileImageInput');\r\n");
      out.write("                if (!fileInput.files || fileInput.files.length === 0) {\r\n");
      out.write("                    alert('이미지를 선택해주세요.');\r\n");
      out.write("                    return;\r\n");
      out.write("                }\r\n");
      out.write("                const file = fileInput.files[0];\r\n");
      out.write("                const reader = new FileReader();\r\n");
      out.write("                \r\n");
      out.write("                reader.onload = function(event) {\r\n");
      out.write("                    const base64Image = event.target.result;\r\n");
      out.write("                    \r\n");
      out.write("                    $.ajax({\r\n");
      out.write("                        url: '");
      out.write((java.lang.String) org.apache.jasper.runtime.PageContextImpl.proprietaryEvaluate("${pageContext.request.contextPath}", java.lang.String.class, (javax.servlet.jsp.PageContext)_jspx_page_context, null));
      out.write("/setting/setProfile.do',\r\n");
      out.write("                        type: 'POST',\r\n");
      out.write("                        data: {\r\n");
      out.write("                            profileImageBase64: base64Image\r\n");
      out.write("                        },\r\n");
      out.write("                        dataType: 'json',\r\n");
      out.write("                        cache: false,\r\n");
      out.write("                        success: function(response) {\r\n");
      out.write("                            if (response.success) {\r\n");
      out.write("                                // 1. 새 이미지 경로에 캐시 무효화를 위한 타임스탬프 추가\r\n");
      out.write("                                const newImgSrc = '");
      out.write((java.lang.String) org.apache.jasper.runtime.PageContextImpl.proprietaryEvaluate("${pageContext.request.contextPath}", java.lang.String.class, (javax.servlet.jsp.PageContext)_jspx_page_context, null));
      out.write("/vibesync/' + response.newImagePath+ '?t=' + new Date().getTime();\r\n");
      out.write("\r\n");
      out.write("                                // 4. 화면에 보이는 이미지들의 src를 교체 (이제 즉시 반영됨)\r\n");
      out.write("                                $('#mainProfileImage').attr('src', newImgSrc);\r\n");
      out.write("                                $('#profileImagePreview').attr('src', newImgSrc);\r\n");
      out.write("                                $('#profile-display img').attr('src', newImgSrc);\r\n");
      out.write("                                if(currentUserData) currentUserData.img = response.newImagePath;\r\n");
      out.write("\r\n");
      out.write("                                // 5. 모든 시각적 업데이트가 끝난 후 사용자에게 알림\r\n");
      out.write("                                alert('프로필 이미지가 변경되었습니다.');\r\n");
      out.write("                                \r\n");
      out.write("                                // 이미지 로딩 실패 시 에러 처리\r\n");
      out.write("                                tempImg.onerror = function() {\r\n");
      out.write("                                    alert('새 프로필 이미지를 불러오는 데 실패했습니다.');\r\n");
      out.write("                                };\r\n");
      out.write("                                \r\n");
      out.write("                            } else {\r\n");
      out.write("                                alert('오류: ' + response.message);\r\n");
      out.write("                            }\r\n");
      out.write("                        },\r\n");
      out.write("                        error: function() {\r\n");
      out.write("                            alert('프로필 이미지 변경 중 서버 오류가 발생했습니다.');\r\n");
      out.write("                        }\r\n");
      out.write("                    });\r\n");
      out.write("                };\r\n");
      out.write("                reader.readAsDataURL(file);\r\n");
      out.write("            });\r\n");
      out.write("            \r\n");
      out.write("            $('#modal-setting-container').on('submit', '#changePasswordForm', function(e) {\r\n");
      out.write("                e.preventDefault();\r\n");
      out.write("                const newPassword = $(this).find('input[name=\"newPassword\"]').val();\r\n");
      out.write("                const confirmPassword = $(this).find('input[name=\"confirmPassword\"]').val();\r\n");
      out.write("                \r\n");
      out.write("                $('.setting-error-msg').text('');\r\n");
      out.write("                \r\n");
      out.write("                if (newPassword !== confirmPassword) {\r\n");
      out.write("                    $(this).find('.setting-error-msg').text('비밀번호가 일치하지 않습니다.');\r\n");
      out.write("                    return;\r\n");
      out.write("                }\r\n");
      out.write("                if (newPassword.length < 8) {\r\n");
      out.write("                    $(this).find('.setting-error-msg').text('비밀번호는 8자 이상이어야 합니다.');\r\n");
      out.write("                    return;\r\n");
      out.write("                }\r\n");
      out.write("                \r\n");
      out.write("                $.ajax({\r\n");
      out.write("                    url: '");
      out.write((java.lang.String) org.apache.jasper.runtime.PageContextImpl.proprietaryEvaluate("${pageContext.request.contextPath}", java.lang.String.class, (javax.servlet.jsp.PageContext)_jspx_page_context, null));
      out.write("/setting/alterPassword.do',\r\n");
      out.write("                    type: 'POST',\r\n");
      out.write("                    data: { newPassword: newPassword },\r\n");
      out.write("                    dataType: 'json',\r\n");
      out.write("                    success: function(response) {\r\n");
      out.write("                        if (response.success) {\r\n");
      out.write("                            alert('비밀번호가 성공적으로 변경되었습니다. 다시 로그인해주세요.');\r\n");
      out.write("                            $(\"#logoutForm\").submit();\r\n");
      out.write("                        } else {\r\n");
      out.write("                            $(this).find('.setting-error-msg').text(response.message || '비밀번호 변경에 실패했습니다.');\r\n");
      out.write("                        }\r\n");
      out.write("                    },\r\n");
      out.write("                    error: function() {\r\n");
      out.write("                        alert('서버 오류로 비밀번호 변경에 실패했습니다.');\r\n");
      out.write("                    }\r\n");
      out.write("                });\r\n");
      out.write("            });\r\n");
      out.write("            \r\n");
      out.write("            $('#modal-setting-container').on('click', '#btnDeleteAccount', function() {\r\n");
      out.write("                if (confirm('정말로 탈퇴하시겠습니까? 모든 정보는 복구되지 않습니다.')) {\r\n");
      out.write("                    location.href = '");
      out.write((java.lang.String) org.apache.jasper.runtime.PageContextImpl.proprietaryEvaluate("${pageContext.request.contextPath}", java.lang.String.class, (javax.servlet.jsp.PageContext)_jspx_page_context, null));
      out.write("/setting/deleteAccount.do';\r\n");
      out.write("                }\r\n");
      out.write("            });\r\n");
      out.write("         \r\n");
      out.write("           checkAndLoadIfNeeded();\r\n");
      out.write("        });\r\n");
      out.write("        \r\n");
      out.write("        $(window).on('load', function() {\r\n");
      out.write("            if (window.location.hash === \"#msg\") {\r\n");
      out.write("                openMessageModal();\r\n");
      out.write("            }\r\n");
      out.write("        });\r\n");
      out.write("        \r\n");
      out.write("    </script>\r\n");
      out.write("    \r\n");
      out.write("    <script> /* 함수 */\r\n");
      out.write("    \r\n");
      out.write("    function openMessageModal() {\r\n");
      out.write("        window.location.hash = \"msg\";\r\n");
      out.write("        const acIdx = ");
      out.write((java.lang.String) org.apache.jasper.runtime.PageContextImpl.proprietaryEvaluate("${sessionScope.userInfo.ac_idx}", java.lang.String.class, (javax.servlet.jsp.PageContext)_jspx_page_context, null));
      out.write(";\r\n");
      out.write("        const basePath = '");
      out.write((java.lang.String) org.apache.jasper.runtime.PageContextImpl.proprietaryEvaluate("${pageContext.request.contextPath}", java.lang.String.class, (javax.servlet.jsp.PageContext)_jspx_page_context, null));
      out.write("/vibesync/';\r\n");
      out.write("        $.ajax({\r\n");
      out.write("            url: '");
      out.write((java.lang.String) org.apache.jasper.runtime.PageContextImpl.proprietaryEvaluate("${pageContext.request.contextPath}", java.lang.String.class, (javax.servlet.jsp.PageContext)_jspx_page_context, null));
      out.write("/message.do',\r\n");
      out.write("            type: 'GET',\r\n");
      out.write("            data: { view: 'LISTALL' },\r\n");
      out.write("            dataType: 'json',\r\n");
      out.write("            success: function(msgList) {\r\n");
      out.write("                $('#msgListModal').css('display', 'flex');\r\n");
      out.write("                $('#msgRoomTitle').html('<i class=\"fa-solid fa-comment-dots\"></i> 메시지 목록');\r\n");
      out.write("                $('#msgList').empty();\r\n");
      out.write("                if (!msgList || !Array.isArray(msgList) || msgList.length === 0) {\r\n");
      out.write("                    const placeholderHtml = `<div class=\"no-message-placeholder\"><i class=\"fa-regular fa-comments\"></i><p>메시지 내역이 없습니다.</p></div>`;\r\n");
      out.write("                    $('#msgList').html(placeholderHtml);\r\n");
      out.write("                    return;\r\n");
      out.write("                }\r\n");
      out.write("                const msgContainer = $('<div class=\"msg-container\"></div>');\r\n");
      out.write("                msgList.forEach(msg => {\r\n");
      out.write("                    let profileImgHtml = msg.other.profile_img ? `<img src=\"${basePath}${msg.other.profile_img}\" alt=\"profile\">` : `<img src=\"${basePath}sources/default/default_user.jpg\" alt=\"기본 프로필\">`;\r\n");
      out.write("                    let unreadBadgeHtml = '';\r\n");
      out.write("                    if (msg.numOfUnreadMessages > 0) {\r\n");
      out.write("                        unreadBadgeHtml = `<span class=\"unread-badge\">${msg.numOfUnreadMessages}</span>`;\r\n");
      out.write("                    }\r\n");
      out.write("                    const messageHtml = `<div class=\"msg_item\" data-sender-idx=\"${msg.other.ac_idx}\" data-nickname=\"${msg.other.nickname}\"><div class=\"msg_profile\">${profileImgHtml}</div><div class=\"msg_text_area\"><div class=\"msg_sender_row\"><div class=\"msg_sender\">${msg.other.nickname}</div>${unreadBadgeHtml}</div><div class=\"msg_preview\">${msg.latestMessage.text}</div><div class=\"msg_time\">${msg.latestMessage.relativeTime}</div></div></div>`;\r\n");
      out.write("                    msgContainer.append(messageHtml);\r\n");
      out.write("                });\r\n");
      out.write("                $('#msgList').append(msgContainer);\r\n");
      out.write("            },\r\n");
      out.write("            error: function() { alert('메시지 내역 불러오기 실패'); }\r\n");
      out.write("        });\r\n");
      out.write("    }\r\n");
      out.write("\r\n");
      out.write("    function closeMsgListModal() {\r\n");
      out.write("        window.location.hash = \"\";\r\n");
      out.write("        $('#msgListModal').hide();\r\n");
      out.write("    }\r\n");
      out.write("    \r\n");
      out.write("    function openChatWithUser(userIdx, nickname) {\r\n");
      out.write("        currentChatSenderIdx = userIdx;\r\n");
      out.write("        $('#chatTitle').text(nickname + '님과의 대화');\r\n");
      out.write("        $('#chatHistory').html('<p style=\"text-align:center; padding: 20px;\">대화 내역을 불러오는 중...</p>');\r\n");
      out.write("        closeMsgListModal();\r\n");
      out.write("        $.ajax({\r\n");
      out.write("            url: '");
      out.write((java.lang.String) org.apache.jasper.runtime.PageContextImpl.proprietaryEvaluate("${pageContext.request.contextPath}", java.lang.String.class, (javax.servlet.jsp.PageContext)_jspx_page_context, null));
      out.write("/message.do',\r\n");
      out.write("            type: 'GET',\r\n");
      out.write("            data: { sender_idx: userIdx, view: 'CHAT' },\r\n");
      out.write("            dataType: 'json',\r\n");
      out.write("            success: function (chatList) {\r\n");
      out.write("                $('#chatHistory').empty();\r\n");
      out.write("                if (!chatList || !Array.isArray(chatList) || chatList.length === 0) {\r\n");
      out.write("                    $('#chatHistory').html('<p style=\"text-align:center; color:grey; padding: 20px;\">아직 대화 내역이 없습니다.</p>');\r\n");
      out.write("                } else {\r\n");
      out.write("                    const chatContainer = $('<div class=\"chat-container\"></div>');\r\n");
      out.write("                    let lastDate = null;\r\n");
      out.write("                    chatList.forEach(msg => {\r\n");
      out.write("                        if (msg.date !== lastDate) {\r\n");
      out.write("                            lastDate = msg.date;\r\n");
      out.write("                            const dateLabel = $('<div class=\"chat-date-separator\"></div>').text(lastDate);\r\n");
      out.write("                            chatContainer.append(dateLabel);\r\n");
      out.write("                        }\r\n");
      out.write("                        const who = msg.isMine ? 'bubble-me' : 'bubble-other';\r\n");
      out.write("                        const formattedText = msg.text.replace(/\\n/g, '<br>');\r\n");
      out.write("                        const messageHtml = `<div class=\"chat-bubble ${who}\"><div class=\"bubble-text\">${formattedText}</div><div class=\"bubble-time\">${msg.relativeTime}</div></div>`;\r\n");
      out.write("                        chatContainer.append(messageHtml);\r\n");
      out.write("                    });\r\n");
      out.write("                    $('#chatHistory').append(chatContainer);\r\n");
      out.write("                }\r\n");
      out.write("                $('#chatModal').css('display', 'flex');\r\n");
      out.write("                $('#chatHistory').scrollTop($('#chatHistory')[0].scrollHeight);\r\n");
      out.write("            },\r\n");
      out.write("            error: function () { alert('채팅 내역을 불러오는 데 실패했습니다.'); }\r\n");
      out.write("        });\r\n");
      out.write("    }\r\n");
      out.write("    \r\n");
      out.write("    function closeChatModal() {\r\n");
      out.write("        $('#chatModal').hide();\r\n");
      out.write("        currentChatSenderIdx = null;\r\n");
      out.write("        if (");
      out.write((java.lang.String) org.apache.jasper.runtime.PageContextImpl.proprietaryEvaluate("${sessionScope.userInfo != null && sessionScope.userInfo.ac_idx == userPageData.userProfile.ac_idx}", java.lang.String.class, (javax.servlet.jsp.PageContext)_jspx_page_context, null));
      out.write(") {\r\n");
      out.write("            openMessageModal();\r\n");
      out.write("        }\r\n");
      out.write("    }\r\n");
      out.write("    \r\n");
      out.write("    function sendChatMessage() {\r\n");
      out.write("        const message = $(\"#chatInput\").val().trim();\r\n");
      out.write("        if (!message || !currentChatSenderIdx) return;\r\n");
      out.write("        $.ajax({\r\n");
      out.write("            url: '");
      out.write((java.lang.String) org.apache.jasper.runtime.PageContextImpl.proprietaryEvaluate("${pageContext.request.contextPath}", java.lang.String.class, (javax.servlet.jsp.PageContext)_jspx_page_context, null));
      out.write("/message.do',\r\n");
      out.write("            type: 'POST',\r\n");
      out.write("            data: JSON.stringify({ receiver_idx: currentChatSenderIdx, text: message }),\r\n");
      out.write("            contentType: \"application/json; charset=utf-8\",\r\n");
      out.write("            dataType: 'json',\r\n");
      out.write("            success: function(res) {\r\n");
      out.write("                if(res.success) {\r\n");
      out.write("                    $(\"#chatInput\").val(\"\");\r\n");
      out.write("                    reloadChatHistory();\r\n");
      out.write("                } else {\r\n");
      out.write("                    alert('메시지 전송에 실패했습니다.');\r\n");
      out.write("                }\r\n");
      out.write("            },\r\n");
      out.write("            error: function() { alert('메시지 전송 중 오류 발생!'); }\r\n");
      out.write("        });\r\n");
      out.write("    }\r\n");
      out.write("    \r\n");
      out.write("    function reloadChatHistory() {\r\n");
      out.write("       if (currentChatSenderIdx) {\r\n");
      out.write("           const currentNickname = $('#chatTitle').text().replace('님과의 대화', '');\r\n");
      out.write("           openChatWithUser(currentChatSenderIdx, currentNickname);\r\n");
      out.write("        }\r\n");
      out.write("    }\r\n");
      out.write("    \r\n");
      out.write("    function showPasswordCheckView() {\r\n");
      out.write("        const passwordCheckHtml = `<h4>비밀번호 확인</h4><p style=\"font-size:0.9em; color:#555; margin-top:-10px; margin-bottom:20px;\">계정 설정을 위해 현재 비밀번호를 입력해주세요.</p><form id=\"passwordCheckForm\"><div class=\"setting-error-msg\"></div><input type=\"password\" name=\"password\" placeholder=\"비밀번호\" required autocomplete=\"current-password\"><button type=\"submit\">확인</button></form>`;\r\n");
      out.write("        $('#settingContent').html(passwordCheckHtml);\r\n");
      out.write("    }\r\n");
      out.write("\r\n");
      out.write("    function showCombinedSettingsView() {\r\n");
      out.write("        const defaultImgSrc = '");
      out.print(contextPath );
      out.write("/sources/default/default_user.jpg';\r\n");
      out.write("        const currentImgSrc = currentUserData && currentUserData.img ? '");
      out.write((java.lang.String) org.apache.jasper.runtime.PageContextImpl.proprietaryEvaluate("${pageContext.request.contextPath}", java.lang.String.class, (javax.servlet.jsp.PageContext)_jspx_page_context, null));
      out.write("/vibesync/' + currentUserData.img : defaultImgSrc;\r\n");
      out.write("\r\n");
      out.write("        const combinedHtml = `\r\n");
      out.write("            <h4>계정 설정</h4>\r\n");
      out.write("            \r\n");
      out.write("            <h5>프로필 사진 변경</h5>\r\n");
      out.write("            <form id=\"profileImageForm\">\r\n");
      out.write("                <img id=\"profileImagePreview\" src=\"${currentImgSrc}\" alt=\"프로필 미리보기\">\r\n");
      out.write("                <input type=\"file\" name=\"profileImage\" id=\"profileImageInput\" accept=\"image/*\" required>\r\n");
      out.write("                <button type=\"submit\">프로필 사진 저장</button>\r\n");
      out.write("            </form>\r\n");
      out.write("\r\n");
      out.write("            <h5>비밀번호 변경</h5>\r\n");
      out.write("            <form id=\"changePasswordForm\">\r\n");
      out.write("                <div class=\"setting-error-msg\"></div>\r\n");
      out.write("                <input type=\"password\" name=\"newPassword\" placeholder=\"새 비밀번호\" required autocomplete=\"new-password\">\r\n");
      out.write("                <input type=\"password\" name=\"confirmPassword\" placeholder=\"새 비밀번호 확인\" required autocomplete=\"new-password\">\r\n");
      out.write("                <button type=\"submit\">비밀번호 변경</button>\r\n");
      out.write("            </form>\r\n");
      out.write("\r\n");
      out.write("            <button id=\"btnDeleteAccount\">회원 탈퇴</button>\r\n");
      out.write("        `;\r\n");
      out.write("        $('#settingContent').html(combinedHtml);\r\n");
      out.write("    }\r\n");
      out.write("    \r\n");
      out.write("    </script>\r\n");
      out.write("</body>\r\n");
      org.apache.jasper.runtime.JspRuntimeLibrary.include(request, response, "/vibesync/includes/footer.jsp", out, false);
      out.write("\r\n");
      out.write("</html>");
    } catch (java.lang.Throwable t) {
      if (!(t instanceof javax.servlet.jsp.SkipPageException)){
        out = _jspx_out;
        if (out != null && out.getBufferSize() != 0)
          try {
            if (response.isCommitted()) {
              out.flush();
            } else {
              out.clearBuffer();
            }
          } catch (java.io.IOException e) {}
        if (_jspx_page_context != null) _jspx_page_context.handlePageException(t);
        else throw new ServletException(t);
      }
    } finally {
      _jspxFactory.releasePageContext(_jspx_page_context);
    }
  }

  private boolean _jspx_meth_c_005fwhen_005f0(javax.servlet.jsp.tagext.JspTag _jspx_th_c_005fchoose_005f0, javax.servlet.jsp.PageContext _jspx_page_context)
          throws java.lang.Throwable {
    javax.servlet.jsp.PageContext pageContext = _jspx_page_context;
    javax.servlet.jsp.JspWriter out = _jspx_page_context.getOut();
    //  c:when
    org.apache.taglibs.standard.tag.rt.core.WhenTag _jspx_th_c_005fwhen_005f0 = (org.apache.taglibs.standard.tag.rt.core.WhenTag) _005fjspx_005ftagPool_005fc_005fwhen_0026_005ftest.get(org.apache.taglibs.standard.tag.rt.core.WhenTag.class);
    _jspx_th_c_005fwhen_005f0.setPageContext(_jspx_page_context);
    _jspx_th_c_005fwhen_005f0.setParent((javax.servlet.jsp.tagext.Tag) _jspx_th_c_005fchoose_005f0);
    // /vibesync/userPage.jsp(101,36) name = test type = boolean reqTime = true required = true fragment = false deferredValue = false expectedTypeName = null deferredMethod = false methodSignature = null
    _jspx_th_c_005fwhen_005f0.setTest(((java.lang.Boolean) org.apache.jasper.runtime.PageContextImpl.proprietaryEvaluate("${not empty userPageData.userProfile.img}", boolean.class, (javax.servlet.jsp.PageContext)_jspx_page_context, null)).booleanValue());
    int _jspx_eval_c_005fwhen_005f0 = _jspx_th_c_005fwhen_005f0.doStartTag();
    if (_jspx_eval_c_005fwhen_005f0 != javax.servlet.jsp.tagext.Tag.SKIP_BODY) {
      do {
        out.write("\r\n");
        out.write("                                        <img id=\"mainProfileImage\" src=\"");
        out.write((java.lang.String) org.apache.jasper.runtime.PageContextImpl.proprietaryEvaluate("${pageContext.request.contextPath}", java.lang.String.class, (javax.servlet.jsp.PageContext)_jspx_page_context, null));
        out.write("/vibesync/");
        out.write((java.lang.String) org.apache.jasper.runtime.PageContextImpl.proprietaryEvaluate("${userPageData.userProfile.img}", java.lang.String.class, (javax.servlet.jsp.PageContext)_jspx_page_context, null));
        out.write("\" alt=\"프로필\">\r\n");
        out.write("                                    ");
        int evalDoAfterBody = _jspx_th_c_005fwhen_005f0.doAfterBody();
        if (evalDoAfterBody != javax.servlet.jsp.tagext.BodyTag.EVAL_BODY_AGAIN)
          break;
      } while (true);
    }
    if (_jspx_th_c_005fwhen_005f0.doEndTag() == javax.servlet.jsp.tagext.Tag.SKIP_PAGE) {
      return true;
    }
    _005fjspx_005ftagPool_005fc_005fwhen_0026_005ftest.reuse(_jspx_th_c_005fwhen_005f0);
    return false;
  }

  private boolean _jspx_meth_c_005fif_005f0(javax.servlet.jsp.PageContext _jspx_page_context)
          throws java.lang.Throwable {
    javax.servlet.jsp.PageContext pageContext = _jspx_page_context;
    javax.servlet.jsp.JspWriter out = _jspx_page_context.getOut();
    //  c:if
    org.apache.taglibs.standard.tag.rt.core.IfTag _jspx_th_c_005fif_005f0 = (org.apache.taglibs.standard.tag.rt.core.IfTag) _005fjspx_005ftagPool_005fc_005fif_0026_005ftest.get(org.apache.taglibs.standard.tag.rt.core.IfTag.class);
    _jspx_th_c_005fif_005f0.setPageContext(_jspx_page_context);
    _jspx_th_c_005fif_005f0.setParent(null);
    // /vibesync/userPage.jsp(113,40) name = test type = boolean reqTime = true required = true fragment = false deferredValue = false expectedTypeName = null deferredMethod = false methodSignature = null
    _jspx_th_c_005fif_005f0.setTest(((java.lang.Boolean) org.apache.jasper.runtime.PageContextImpl.proprietaryEvaluate("${sessionScope.userInfo != null && sessionScope.userInfo.ac_idx != userPageData.userProfile.ac_idx}", boolean.class, (javax.servlet.jsp.PageContext)_jspx_page_context, null)).booleanValue());
    int _jspx_eval_c_005fif_005f0 = _jspx_th_c_005fif_005f0.doStartTag();
    if (_jspx_eval_c_005fif_005f0 != javax.servlet.jsp.tagext.Tag.SKIP_BODY) {
      do {
        out.write("\r\n");
        out.write("                                            <button type=\"button\" id=\"profileFollowBtn\" class=\"btn_follow_1\" data-author-id=\"");
        out.write((java.lang.String) org.apache.jasper.runtime.PageContextImpl.proprietaryEvaluate("${userPageData.userProfile.ac_idx}", java.lang.String.class, (javax.servlet.jsp.PageContext)_jspx_page_context, null));
        out.write("\" data-following=\"");
        out.write((java.lang.String) org.apache.jasper.runtime.PageContextImpl.proprietaryEvaluate("${userPageData.userProfile.followedByCurrentUser ? 'true' : 'false'}", java.lang.String.class, (javax.servlet.jsp.PageContext)_jspx_page_context, null));
        out.write("\">\r\n");
        out.write("                                                ");
        out.write((java.lang.String) org.apache.jasper.runtime.PageContextImpl.proprietaryEvaluate("${userPageData.userProfile.followedByCurrentUser ? 'UNFOLLOW' : 'FOLLOW'}", java.lang.String.class, (javax.servlet.jsp.PageContext)_jspx_page_context, null));
        out.write("\r\n");
        out.write("                                            </button>\r\n");
        out.write("                                        ");
        int evalDoAfterBody = _jspx_th_c_005fif_005f0.doAfterBody();
        if (evalDoAfterBody != javax.servlet.jsp.tagext.BodyTag.EVAL_BODY_AGAIN)
          break;
      } while (true);
    }
    if (_jspx_th_c_005fif_005f0.doEndTag() == javax.servlet.jsp.tagext.Tag.SKIP_PAGE) {
      return true;
    }
    _005fjspx_005ftagPool_005fc_005fif_0026_005ftest.reuse(_jspx_th_c_005fif_005f0);
    return false;
  }

  private boolean _jspx_meth_c_005fif_005f1(javax.servlet.jsp.PageContext _jspx_page_context)
          throws java.lang.Throwable {
    javax.servlet.jsp.PageContext pageContext = _jspx_page_context;
    javax.servlet.jsp.JspWriter out = _jspx_page_context.getOut();
    //  c:if
    org.apache.taglibs.standard.tag.rt.core.IfTag _jspx_th_c_005fif_005f1 = (org.apache.taglibs.standard.tag.rt.core.IfTag) _005fjspx_005ftagPool_005fc_005fif_0026_005ftest.get(org.apache.taglibs.standard.tag.rt.core.IfTag.class);
    _jspx_th_c_005fif_005f1.setPageContext(_jspx_page_context);
    _jspx_th_c_005fif_005f1.setParent(null);
    // /vibesync/userPage.jsp(119,40) name = test type = boolean reqTime = true required = true fragment = false deferredValue = false expectedTypeName = null deferredMethod = false methodSignature = null
    _jspx_th_c_005fif_005f1.setTest(((java.lang.Boolean) org.apache.jasper.runtime.PageContextImpl.proprietaryEvaluate("${sessionScope.userInfo != null && sessionScope.userInfo.ac_idx == userPageData.userProfile.ac_idx}", boolean.class, (javax.servlet.jsp.PageContext)_jspx_page_context, null)).booleanValue());
    int _jspx_eval_c_005fif_005f1 = _jspx_th_c_005fif_005f1.doStartTag();
    if (_jspx_eval_c_005fif_005f1 != javax.servlet.jsp.tagext.Tag.SKIP_BODY) {
      do {
        out.write("\r\n");
        out.write("                                            <button class=\"wp_btn\" onclick=\"location.href='waList.jsp'\"><img src=\"./sources/icons/watch.svg\">Watch Party</button>\r\n");
        out.write("                                       ");
        int evalDoAfterBody = _jspx_th_c_005fif_005f1.doAfterBody();
        if (evalDoAfterBody != javax.servlet.jsp.tagext.BodyTag.EVAL_BODY_AGAIN)
          break;
      } while (true);
    }
    if (_jspx_th_c_005fif_005f1.doEndTag() == javax.servlet.jsp.tagext.Tag.SKIP_PAGE) {
      return true;
    }
    _005fjspx_005ftagPool_005fc_005fif_0026_005ftest.reuse(_jspx_th_c_005fif_005f1);
    return false;
  }

  private boolean _jspx_meth_c_005fif_005f2(javax.servlet.jsp.PageContext _jspx_page_context)
          throws java.lang.Throwable {
    javax.servlet.jsp.PageContext pageContext = _jspx_page_context;
    javax.servlet.jsp.JspWriter out = _jspx_page_context.getOut();
    //  c:if
    org.apache.taglibs.standard.tag.rt.core.IfTag _jspx_th_c_005fif_005f2 = (org.apache.taglibs.standard.tag.rt.core.IfTag) _005fjspx_005ftagPool_005fc_005fif_0026_005ftest.get(org.apache.taglibs.standard.tag.rt.core.IfTag.class);
    _jspx_th_c_005fif_005f2.setPageContext(_jspx_page_context);
    _jspx_th_c_005fif_005f2.setParent(null);
    // /vibesync/userPage.jsp(123,36) name = test type = boolean reqTime = true required = true fragment = false deferredValue = false expectedTypeName = null deferredMethod = false methodSignature = null
    _jspx_th_c_005fif_005f2.setTest(((java.lang.Boolean) org.apache.jasper.runtime.PageContextImpl.proprietaryEvaluate("${sessionScope.userInfo != null && sessionScope.userInfo.ac_idx == userPageData.userProfile.ac_idx}", boolean.class, (javax.servlet.jsp.PageContext)_jspx_page_context, null)).booleanValue());
    int _jspx_eval_c_005fif_005f2 = _jspx_th_c_005fif_005f2.doStartTag();
    if (_jspx_eval_c_005fif_005f2 != javax.servlet.jsp.tagext.Tag.SKIP_BODY) {
      do {
        out.write("\r\n");
        out.write("                                        <button id=\"settingBtn\"><img src=\"./sources/icons/settings_gear.svg\" alt=\"setting\"></button>\r\n");
        out.write("                                    ");
        int evalDoAfterBody = _jspx_th_c_005fif_005f2.doAfterBody();
        if (evalDoAfterBody != javax.servlet.jsp.tagext.BodyTag.EVAL_BODY_AGAIN)
          break;
      } while (true);
    }
    if (_jspx_th_c_005fif_005f2.doEndTag() == javax.servlet.jsp.tagext.Tag.SKIP_PAGE) {
      return true;
    }
    _005fjspx_005ftagPool_005fc_005fif_0026_005ftest.reuse(_jspx_th_c_005fif_005f2);
    return false;
  }

  private boolean _jspx_meth_c_005fchoose_005f1(javax.servlet.jsp.tagext.JspTag _jspx_th_c_005fforEach_005f0, javax.servlet.jsp.PageContext _jspx_page_context, int[] _jspx_push_body_count_c_005fforEach_005f0)
          throws java.lang.Throwable {
    javax.servlet.jsp.PageContext pageContext = _jspx_page_context;
    javax.servlet.jsp.JspWriter out = _jspx_page_context.getOut();
    //  c:choose
    org.apache.taglibs.standard.tag.common.core.ChooseTag _jspx_th_c_005fchoose_005f1 = (org.apache.taglibs.standard.tag.common.core.ChooseTag) _005fjspx_005ftagPool_005fc_005fchoose.get(org.apache.taglibs.standard.tag.common.core.ChooseTag.class);
    _jspx_th_c_005fchoose_005f1.setPageContext(_jspx_page_context);
    _jspx_th_c_005fchoose_005f1.setParent((javax.servlet.jsp.tagext.Tag) _jspx_th_c_005fforEach_005f0);
    int _jspx_eval_c_005fchoose_005f1 = _jspx_th_c_005fchoose_005f1.doStartTag();
    if (_jspx_eval_c_005fchoose_005f1 != javax.servlet.jsp.tagext.Tag.SKIP_BODY) {
      do {
        out.write("\r\n");
        out.write("                                        ");
        if (_jspx_meth_c_005fwhen_005f1(_jspx_th_c_005fchoose_005f1, _jspx_page_context, _jspx_push_body_count_c_005fforEach_005f0))
          return true;
        out.write("\r\n");
        out.write("                                        ");
        if (_jspx_meth_c_005fotherwise_005f1(_jspx_th_c_005fchoose_005f1, _jspx_page_context, _jspx_push_body_count_c_005fforEach_005f0))
          return true;
        out.write("\r\n");
        out.write("                                    ");
        int evalDoAfterBody = _jspx_th_c_005fchoose_005f1.doAfterBody();
        if (evalDoAfterBody != javax.servlet.jsp.tagext.BodyTag.EVAL_BODY_AGAIN)
          break;
      } while (true);
    }
    if (_jspx_th_c_005fchoose_005f1.doEndTag() == javax.servlet.jsp.tagext.Tag.SKIP_PAGE) {
      return true;
    }
    _005fjspx_005ftagPool_005fc_005fchoose.reuse(_jspx_th_c_005fchoose_005f1);
    return false;
  }

  private boolean _jspx_meth_c_005fwhen_005f1(javax.servlet.jsp.tagext.JspTag _jspx_th_c_005fchoose_005f1, javax.servlet.jsp.PageContext _jspx_page_context, int[] _jspx_push_body_count_c_005fforEach_005f0)
          throws java.lang.Throwable {
    javax.servlet.jsp.PageContext pageContext = _jspx_page_context;
    javax.servlet.jsp.JspWriter out = _jspx_page_context.getOut();
    //  c:when
    org.apache.taglibs.standard.tag.rt.core.WhenTag _jspx_th_c_005fwhen_005f1 = (org.apache.taglibs.standard.tag.rt.core.WhenTag) _005fjspx_005ftagPool_005fc_005fwhen_0026_005ftest.get(org.apache.taglibs.standard.tag.rt.core.WhenTag.class);
    _jspx_th_c_005fwhen_005f1.setPageContext(_jspx_page_context);
    _jspx_th_c_005fwhen_005f1.setParent((javax.servlet.jsp.tagext.Tag) _jspx_th_c_005fchoose_005f1);
    // /vibesync/userPage.jsp(140,40) name = test type = boolean reqTime = true required = true fragment = false deferredValue = false expectedTypeName = null deferredMethod = false methodSignature = null
    _jspx_th_c_005fwhen_005f1.setTest(((java.lang.Boolean) org.apache.jasper.runtime.PageContextImpl.proprietaryEvaluate("${not empty post.thumbnail_img}", boolean.class, (javax.servlet.jsp.PageContext)_jspx_page_context, null)).booleanValue());
    int _jspx_eval_c_005fwhen_005f1 = _jspx_th_c_005fwhen_005f1.doStartTag();
    if (_jspx_eval_c_005fwhen_005f1 != javax.servlet.jsp.tagext.Tag.SKIP_BODY) {
      do {
        out.write("\r\n");
        out.write("                                            <img src=\"");
        out.write((java.lang.String) org.apache.jasper.runtime.PageContextImpl.proprietaryEvaluate("${pageContext.request.contextPath}", java.lang.String.class, (javax.servlet.jsp.PageContext)_jspx_page_context, null));
        out.write('/');
        out.write((java.lang.String) org.apache.jasper.runtime.PageContextImpl.proprietaryEvaluate("${post.thumbnail_img}", java.lang.String.class, (javax.servlet.jsp.PageContext)_jspx_page_context, null));
        out.write("\" alt=\"");
        out.write((java.lang.String) org.apache.jasper.runtime.PageContextImpl.proprietaryEvaluate("${post.title}", java.lang.String.class, (javax.servlet.jsp.PageContext)_jspx_page_context, null));
        out.write(" 썸네일\" >\r\n");
        out.write("                                        ");
        int evalDoAfterBody = _jspx_th_c_005fwhen_005f1.doAfterBody();
        if (evalDoAfterBody != javax.servlet.jsp.tagext.BodyTag.EVAL_BODY_AGAIN)
          break;
      } while (true);
    }
    if (_jspx_th_c_005fwhen_005f1.doEndTag() == javax.servlet.jsp.tagext.Tag.SKIP_PAGE) {
      return true;
    }
    _005fjspx_005ftagPool_005fc_005fwhen_0026_005ftest.reuse(_jspx_th_c_005fwhen_005f1);
    return false;
  }

  private boolean _jspx_meth_c_005fotherwise_005f1(javax.servlet.jsp.tagext.JspTag _jspx_th_c_005fchoose_005f1, javax.servlet.jsp.PageContext _jspx_page_context, int[] _jspx_push_body_count_c_005fforEach_005f0)
          throws java.lang.Throwable {
    javax.servlet.jsp.PageContext pageContext = _jspx_page_context;
    javax.servlet.jsp.JspWriter out = _jspx_page_context.getOut();
    //  c:otherwise
    org.apache.taglibs.standard.tag.common.core.OtherwiseTag _jspx_th_c_005fotherwise_005f1 = (org.apache.taglibs.standard.tag.common.core.OtherwiseTag) _005fjspx_005ftagPool_005fc_005fotherwise.get(org.apache.taglibs.standard.tag.common.core.OtherwiseTag.class);
    _jspx_th_c_005fotherwise_005f1.setPageContext(_jspx_page_context);
    _jspx_th_c_005fotherwise_005f1.setParent((javax.servlet.jsp.tagext.Tag) _jspx_th_c_005fchoose_005f1);
    int _jspx_eval_c_005fotherwise_005f1 = _jspx_th_c_005fotherwise_005f1.doStartTag();
    if (_jspx_eval_c_005fotherwise_005f1 != javax.servlet.jsp.tagext.Tag.SKIP_BODY) {
      do {
        out.write("\r\n");
        out.write("                                            <img src=\"");
        out.write((java.lang.String) org.apache.jasper.runtime.PageContextImpl.proprietaryEvaluate("${pageContext.request.contextPath}", java.lang.String.class, (javax.servlet.jsp.PageContext)_jspx_page_context, null));
        out.write("/sources/images/default_thumbnail.png\" alt=\"기본 썸네일\">\r\n");
        out.write("                                        ");
        int evalDoAfterBody = _jspx_th_c_005fotherwise_005f1.doAfterBody();
        if (evalDoAfterBody != javax.servlet.jsp.tagext.BodyTag.EVAL_BODY_AGAIN)
          break;
      } while (true);
    }
    if (_jspx_th_c_005fotherwise_005f1.doEndTag() == javax.servlet.jsp.tagext.Tag.SKIP_PAGE) {
      return true;
    }
    _005fjspx_005ftagPool_005fc_005fotherwise.reuse(_jspx_th_c_005fotherwise_005f1);
    return false;
  }

  private boolean _jspx_meth_c_005fif_005f3(javax.servlet.jsp.PageContext _jspx_page_context)
          throws java.lang.Throwable {
    javax.servlet.jsp.PageContext pageContext = _jspx_page_context;
    javax.servlet.jsp.JspWriter out = _jspx_page_context.getOut();
    //  c:if
    org.apache.taglibs.standard.tag.rt.core.IfTag _jspx_th_c_005fif_005f3 = (org.apache.taglibs.standard.tag.rt.core.IfTag) _005fjspx_005ftagPool_005fc_005fif_0026_005ftest.get(org.apache.taglibs.standard.tag.rt.core.IfTag.class);
    _jspx_th_c_005fif_005f3.setPageContext(_jspx_page_context);
    _jspx_th_c_005fif_005f3.setParent(null);
    // /vibesync/userPage.jsp(158,4) name = test type = boolean reqTime = true required = true fragment = false deferredValue = false expectedTypeName = null deferredMethod = false methodSignature = null
    _jspx_th_c_005fif_005f3.setTest(((java.lang.Boolean) org.apache.jasper.runtime.PageContextImpl.proprietaryEvaluate("${sessionScope.userInfo != null && sessionScope.userInfo.ac_idx == userPageData.userProfile.ac_idx}", boolean.class, (javax.servlet.jsp.PageContext)_jspx_page_context, null)).booleanValue());
    int _jspx_eval_c_005fif_005f3 = _jspx_th_c_005fif_005f3.doStartTag();
    if (_jspx_eval_c_005fif_005f3 != javax.servlet.jsp.tagext.Tag.SKIP_BODY) {
      do {
        out.write("\r\n");
        out.write("        <button id=\"pageCreateBtn\">＋</button>\r\n");
        out.write("    ");
        int evalDoAfterBody = _jspx_th_c_005fif_005f3.doAfterBody();
        if (evalDoAfterBody != javax.servlet.jsp.tagext.BodyTag.EVAL_BODY_AGAIN)
          break;
      } while (true);
    }
    if (_jspx_th_c_005fif_005f3.doEndTag() == javax.servlet.jsp.tagext.Tag.SKIP_PAGE) {
      return true;
    }
    _005fjspx_005ftagPool_005fc_005fif_0026_005ftest.reuse(_jspx_th_c_005fif_005f3);
    return false;
  }
}
