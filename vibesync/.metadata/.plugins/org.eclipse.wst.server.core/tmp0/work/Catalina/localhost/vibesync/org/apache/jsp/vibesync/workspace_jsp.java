/*
 * Generated by the Jasper component of Apache Tomcat
 * Version: Apache Tomcat/9.0.104
 * Generated at: 2025-06-23 02:20:52 UTC
 * Note: The last modified time of this file was set to
 *       the last modified time of the source file after
 *       generation to assist with modification tracking.
 */
package org.apache.jsp.vibesync;

import javax.servlet.*;
import javax.servlet.http.*;
import javax.servlet.jsp.*;
import java.net.URLEncoder;

public final class workspace_jsp extends org.apache.jasper.runtime.HttpJspBase
    implements org.apache.jasper.runtime.JspSourceDependent,
                 org.apache.jasper.runtime.JspSourceImports {

  private static final javax.servlet.jsp.JspFactory _jspxFactory =
          javax.servlet.jsp.JspFactory.getDefaultFactory();

  private static java.util.Map<java.lang.String,java.lang.Long> _jspx_dependants;

  static {
    _jspx_dependants = new java.util.HashMap<java.lang.String,java.lang.Long>(3);
    _jspx_dependants.put("/WEB-INF/lib/jstl-1.2.jar", Long.valueOf(1749773114000L));
    _jspx_dependants.put("jar:file:/C:/Class/vibesync/.metadata/.plugins/org.eclipse.wst.server.core/tmp0/wtpwebapps/vibesync/WEB-INF/lib/jstl-1.2.jar!/META-INF/c.tld", Long.valueOf(1153352682000L));
    _jspx_dependants.put("jar:file:/C:/Class/vibesync/.metadata/.plugins/org.eclipse.wst.server.core/tmp0/wtpwebapps/vibesync/WEB-INF/lib/jstl-1.2.jar!/META-INF/fmt.tld", Long.valueOf(1153352682000L));
  }

  private static final java.util.Set<java.lang.String> _jspx_imports_packages;

  private static final java.util.Set<java.lang.String> _jspx_imports_classes;

  static {
    _jspx_imports_packages = new java.util.LinkedHashSet<>(4);
    _jspx_imports_packages.add("javax.servlet");
    _jspx_imports_packages.add("javax.servlet.http");
    _jspx_imports_packages.add("javax.servlet.jsp");
    _jspx_imports_classes = new java.util.LinkedHashSet<>(2);
    _jspx_imports_classes.add("java.net.URLEncoder");
  }

  private org.apache.jasper.runtime.TagHandlerPool _005fjspx_005ftagPool_005fc_005fchoose;
  private org.apache.jasper.runtime.TagHandlerPool _005fjspx_005ftagPool_005fc_005fwhen_0026_005ftest;
  private org.apache.jasper.runtime.TagHandlerPool _005fjspx_005ftagPool_005fc_005fforEach_0026_005fvar_005fitems;
  private org.apache.jasper.runtime.TagHandlerPool _005fjspx_005ftagPool_005fc_005fotherwise;
  private org.apache.jasper.runtime.TagHandlerPool _005fjspx_005ftagPool_005fc_005fset_0026_005fvar_005fvalue_005fscope_005fnobody;
  private org.apache.jasper.runtime.TagHandlerPool _005fjspx_005ftagPool_005fc_005fif_0026_005ftest;
  private org.apache.jasper.runtime.TagHandlerPool _005fjspx_005ftagPool_005fc_005fout_0026_005fvalue_005fescapeXml_005fnobody;

  private volatile javax.el.ExpressionFactory _el_expressionfactory;
  private volatile org.apache.tomcat.InstanceManager _jsp_instancemanager;

  public java.util.Map<java.lang.String,java.lang.Long> getDependants() {
    return _jspx_dependants;
  }

  public java.util.Set<java.lang.String> getPackageImports() {
    return _jspx_imports_packages;
  }

  public java.util.Set<java.lang.String> getClassImports() {
    return _jspx_imports_classes;
  }

  public javax.el.ExpressionFactory _jsp_getExpressionFactory() {
    if (_el_expressionfactory == null) {
      synchronized (this) {
        if (_el_expressionfactory == null) {
          _el_expressionfactory = _jspxFactory.getJspApplicationContext(getServletConfig().getServletContext()).getExpressionFactory();
        }
      }
    }
    return _el_expressionfactory;
  }

  public org.apache.tomcat.InstanceManager _jsp_getInstanceManager() {
    if (_jsp_instancemanager == null) {
      synchronized (this) {
        if (_jsp_instancemanager == null) {
          _jsp_instancemanager = org.apache.jasper.runtime.InstanceManagerFactory.getInstanceManager(getServletConfig());
        }
      }
    }
    return _jsp_instancemanager;
  }

  public void _jspInit() {
    _005fjspx_005ftagPool_005fc_005fchoose = org.apache.jasper.runtime.TagHandlerPool.getTagHandlerPool(getServletConfig());
    _005fjspx_005ftagPool_005fc_005fwhen_0026_005ftest = org.apache.jasper.runtime.TagHandlerPool.getTagHandlerPool(getServletConfig());
    _005fjspx_005ftagPool_005fc_005fforEach_0026_005fvar_005fitems = org.apache.jasper.runtime.TagHandlerPool.getTagHandlerPool(getServletConfig());
    _005fjspx_005ftagPool_005fc_005fotherwise = org.apache.jasper.runtime.TagHandlerPool.getTagHandlerPool(getServletConfig());
    _005fjspx_005ftagPool_005fc_005fset_0026_005fvar_005fvalue_005fscope_005fnobody = org.apache.jasper.runtime.TagHandlerPool.getTagHandlerPool(getServletConfig());
    _005fjspx_005ftagPool_005fc_005fif_0026_005ftest = org.apache.jasper.runtime.TagHandlerPool.getTagHandlerPool(getServletConfig());
    _005fjspx_005ftagPool_005fc_005fout_0026_005fvalue_005fescapeXml_005fnobody = org.apache.jasper.runtime.TagHandlerPool.getTagHandlerPool(getServletConfig());
  }

  public void _jspDestroy() {
    _005fjspx_005ftagPool_005fc_005fchoose.release();
    _005fjspx_005ftagPool_005fc_005fwhen_0026_005ftest.release();
    _005fjspx_005ftagPool_005fc_005fforEach_0026_005fvar_005fitems.release();
    _005fjspx_005ftagPool_005fc_005fotherwise.release();
    _005fjspx_005ftagPool_005fc_005fset_0026_005fvar_005fvalue_005fscope_005fnobody.release();
    _005fjspx_005ftagPool_005fc_005fif_0026_005ftest.release();
    _005fjspx_005ftagPool_005fc_005fout_0026_005fvalue_005fescapeXml_005fnobody.release();
  }

  public void _jspService(final javax.servlet.http.HttpServletRequest request, final javax.servlet.http.HttpServletResponse response)
      throws java.io.IOException, javax.servlet.ServletException {

    if (!javax.servlet.DispatcherType.ERROR.equals(request.getDispatcherType())) {
      final java.lang.String _jspx_method = request.getMethod();
      if ("OPTIONS".equals(_jspx_method)) {
        response.setHeader("Allow","GET, HEAD, POST, OPTIONS");
        return;
      }
      if (!"GET".equals(_jspx_method) && !"POST".equals(_jspx_method) && !"HEAD".equals(_jspx_method)) {
        response.setHeader("Allow","GET, HEAD, POST, OPTIONS");
        response.sendError(HttpServletResponse.SC_METHOD_NOT_ALLOWED, "JSP들은 오직 GET, POST 또는 HEAD 메소드만을 허용합니다. Jasper는 OPTIONS 메소드 또한 허용합니다.");
        return;
      }
    }

    final javax.servlet.jsp.PageContext pageContext;
    javax.servlet.http.HttpSession session = null;
    final javax.servlet.ServletContext application;
    final javax.servlet.ServletConfig config;
    javax.servlet.jsp.JspWriter out = null;
    final java.lang.Object page = this;
    javax.servlet.jsp.JspWriter _jspx_out = null;
    javax.servlet.jsp.PageContext _jspx_page_context = null;


    try {
      response.setContentType("text/html; charset=UTF-8");
      pageContext = _jspxFactory.getPageContext(this, request, response,
      			null, true, 8192, true);
      _jspx_page_context = pageContext;
      application = pageContext.getServletContext();
      config = pageContext.getServletConfig();
      session = pageContext.getSession();
      out = pageContext.getOut();
      _jspx_out = out;

      out.write("\r\n");
      out.write("\r\n");
 String contextPath = request.getContextPath() + "/vibesync"; 
      out.write("\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("<!DOCTYPE html>\r\n");
      org.apache.jasper.runtime.JspRuntimeLibrary.include(request, response, "/vibesync/includes/header.jsp", out, false);
      out.write("\r\n");
      out.write("<head>\r\n");
      out.write("<meta charset=\"UTF-8\">\r\n");
      out.write("<meta name=\"viewport\" content=\"width=device-width, initial-scale=1.0\">\r\n");
      out.write("<title>workspace</title>\r\n");
      out.write("<link rel=\"icon\" href=\"./sources/favicon.ico\" />\r\n");
      out.write("<script src=\"https://code.jquery.com/jquery-3.7.1.min.js\"></script>\r\n");
      out.write("<script defer src=\"./js/script.js\"></script>\r\n");
      out.write("  <!-- 폰트 추가 -->\r\n");
      out.write("<link rel=\"stylesheet\" href=\"https://cdnjs.cloudflare.com/ajax/libs/font-awesome/6.5.2/css/all.min.css\">\r\n");
      out.write("  <!-- 차트 그리기 : chart.js -->\r\n");
      out.write("<script src=\"https://cdn.jsdelivr.net/npm/chart.js\"></script>\r\n");
      out.write("  ");
      out.write("\r\n");
      out.write("<script src='https://cdn.jsdelivr.net/npm/fullcalendar@6.1.11/index.global.min.js'></script> \r\n");
      out.write("<link rel=\"stylesheet\" href=\"./css/workspace.css\">\r\n");
      out.write("<link rel=\"stylesheet\" href=\"./css/style.css\"> \r\n");
      out.write("<link rel=\"stylesheet\" href=\"./css/sidebar.css\">\r\n");
      out.write("  \r\n");
      out.write("    <style> /* 추가 블록 */\r\n");
      out.write("        .block-header { display: flex; justify-content: space-between; align-items: center; margin-bottom: 10px; }\r\n");
      out.write("        .block-header h4 { margin: 0; }\r\n");
      out.write("        .block-actions button { background: none; border: none; cursor: pointer; color: #888; font-size: 14px; margin-left: 5px; }\r\n");
      out.write("        .block-actions button:hover { color: #000; }\r\n");
      out.write("        .chart-toggles { margin-bottom: 10px; }\r\n");
      out.write("        .chart-toggles label { margin-right: 15px; font-size: 13px; cursor: pointer; display: none; }\r\n");
      out.write("        .loading-spinner { border: 4px solid #f3f3f3; border-top: 4px solid #3498db; border-radius: 50%; width: 30px; height: 30px; animation: spin 1s linear infinite; margin: 20px auto; }\r\n");
      out.write("        @keyframes spin { 0% { transform: rotate(0deg); } 100% { transform: rotate(360deg); } }\r\n");
      out.write("    </style>\r\n");
      out.write("    \r\n");
      out.write("    <style> /* 추가 블록 편집 모드 */\r\n");
      out.write("		.workspace-controls {\r\n");
      out.write("		    display: flex;\r\n");
      out.write("		    justify-content: space-between;\r\n");
      out.write("		    align-items: center;\r\n");
      out.write("		    padding: 10px 20px;\r\n");
      out.write("		    margin-bottom: 10px;\r\n");
      out.write("		}\r\n");
      out.write("		\r\n");
      out.write("		.workspace-controls h3 {\r\n");
      out.write("		    margin: 0;\r\n");
      out.write("		    font-size: 1.5em;\r\n");
      out.write("		    color: var(--font-color);\r\n");
      out.write("		}\r\n");
      out.write("		\r\n");
      out.write("		.control-btn {\r\n");
      out.write("		    background-color: var(--sidebar-color);\r\n");
      out.write("		    color: var(--font-color);\r\n");
      out.write("		    border: 1px solid var(--border-color);\r\n");
      out.write("		    padding: 8px 15px;\r\n");
      out.write("		    border-radius: 5px;\r\n");
      out.write("		    cursor: pointer;\r\n");
      out.write("		    margin-left: 10px;\r\n");
      out.write("		    transition: background-color 0.2s, color 0.2s;\r\n");
      out.write("		}\r\n");
      out.write("		\r\n");
      out.write("		.control-btn:hover {\r\n");
      out.write("		    background-color: var(--point-color);\r\n");
      out.write("		    color: white;\r\n");
      out.write("		}\r\n");
      out.write("		\r\n");
      out.write("		/* 편집 모드일 때 생성된 블록에 적용될 스타일 */\r\n");
      out.write("		#contents_grid.edit-mode .generated_block {\r\n");
      out.write("		    position: relative; /* 화살표 버튼의 기준점 */\r\n");
      out.write("		    border: 2px dashed var(--point-color);\r\n");
      out.write("		    box-shadow: 0 0 10px rgba(var(--point-color-rgb), 0.5);\r\n");
      out.write("		    gap: 0px, 20px;\r\n");
      out.write("    		transition: padding 0.2s ease-in-out;\r\n");
      out.write("		}\r\n");
      out.write("		\r\n");
      out.write("		#contents_grid.edit-mode .generated_block:hover {\r\n");
      out.write("		    z-index: 15;\r\n");
      out.write("		}\r\n");
      out.write("		\r\n");
      out.write("		/* 블록 이동 화살표 버튼 */\r\n");
      out.write("		.move-block-btn {\r\n");
      out.write("		    position: absolute;\r\n");
      out.write("		    top: 50%;\r\n");
      out.write("		    transform: translateY(-50%);\r\n");
      out.write("		    width: 30px;\r\n");
      out.write("		    height: 30px;\r\n");
      out.write("		    background-color: rgba(0, 0, 0, 0.6);\r\n");
      out.write("		    color: white;\r\n");
      out.write("		    border: none;\r\n");
      out.write("		    border-radius: 50%;\r\n");
      out.write("		    font-size: 16px;\r\n");
      out.write("		    cursor: pointer;\r\n");
      out.write("		    display: flex;\r\n");
      out.write("		    align-items: center;\r\n");
      out.write("		    justify-content: center;\r\n");
      out.write("		    z-index: 10;\r\n");
      out.write("		    opacity: 0.7;\r\n");
      out.write("		    transition: opacity 0.2s;\r\n");
      out.write("		}\r\n");
      out.write("		\r\n");
      out.write("		.move-block-btn:hover {\r\n");
      out.write("		    opacity: 1;\r\n");
      out.write("		}\r\n");
      out.write("		\r\n");
      out.write("		.move-left-btn {\r\n");
      out.write("		    left: 5px;\r\n");
      out.write("		}\r\n");
      out.write("		\r\n");
      out.write("		.move-right-btn {\r\n");
      out.write("		    right: 5px;\r\n");
      out.write("		}\r\n");
      out.write("    </style>\r\n");
      out.write("    \r\n");
      out.write("    <style> /* 통계 기간 변경 */\r\n");
      out.write("		.stats-controls {\r\n");
      out.write("		    display: flex;\r\n");
      out.write("		    justify-content: center;\r\n");
      out.write("		    align-items: center;\r\n");
      out.write("		    margin-bottom: 15px;\r\n");
      out.write("		    flex-wrap: wrap; /* 창이 좁을 때 줄바꿈 */\r\n");
      out.write("		}\r\n");
      out.write("		\r\n");
      out.write("		.period-selector button {\r\n");
      out.write("		    background: #eee;\r\n");
      out.write("		    border: 1px solid #ddd;\r\n");
      out.write("		    border-radius: 4px;\r\n");
      out.write("		    padding: 4px 8px;\r\n");
      out.write("		    font-size: 12px;\r\n");
      out.write("		    cursor: pointer;\r\n");
      out.write("		    margin-left: 5px;\r\n");
      out.write("		}\r\n");
      out.write("		\r\n");
      out.write("		.period-selector button.active {\r\n");
      out.write("		    background-color: var(--point-color);\r\n");
      out.write("		    color: white;\r\n");
      out.write("		    border-color: var(--point-color);\r\n");
      out.write("		    font-weight: bold;\r\n");
      out.write("		}\r\n");
      out.write("    </style>\r\n");
      out.write("  \r\n");
      out.write("</head>\r\n");
      out.write("<body>\r\n");
      out.write("	<div id=\"notion-app\">\r\n");
      out.write("		<input type=\"hidden\" id=\"mode\" value=\"workspace\">\r\n");
      out.write("		<div class=\"notion-app-inner\">\r\n");
      out.write("			");
      org.apache.jasper.runtime.JspRuntimeLibrary.include(request, response, "./includes/sidebar.jsp", out, false);
      out.write("\r\n");
      out.write("			<!-- content -->\r\n");
      out.write("			<div id=\"content_wrapper\">\r\n");
      out.write("				<section id=\"content\">\r\n");
      out.write("					<div id=\"workspace_wrapper\">\r\n");
      out.write("						<div id=\"todolist\">\r\n");
      out.write("							<div id=\"calendar\">\r\n");
      out.write("					            <button id=\"add-event-button\" style=\"display: none; position: absolute;\">+</button>\r\n");
      out.write("					        </div>    \r\n");
      out.write("							<div id=\"date-picker-popover\" style=\"display: none;\">\r\n");
      out.write("					            <div class=\"date-picker-body\">\r\n");
      out.write("					                <select id=\"year-select\"></select>\r\n");
      out.write("					                <select id=\"month-select\"></select>\r\n");
      out.write("					                <button id=\"goto-date-btn\">이동</button>\r\n");
      out.write("					            </div>\r\n");
      out.write("					        </div>\r\n");
      out.write("							");
      out.write("\r\n");
      out.write("							<div class=\"calendar_contents\">\r\n");
      out.write("								");
      out.write("\r\n");
      out.write("								<div class=\"tab-buttons\">\r\n");
      out.write("									<button class=\"tab-btn active\" data-tab=\"tab_schedule\">일정</button>\r\n");
      out.write("									<button class=\"tab-btn\" data-tab=\"tab_todo\">할 일</button>\r\n");
      out.write("								</div>\r\n");
      out.write("								<div class=\"add-btn-container\">\r\n");
      out.write("									<button id=\"add-schedule-btn\" class=\"add-btn\">+ 새 일정</button>\r\n");
      out.write("									<button id=\"add-todo-btn\" class=\"add-btn\"\r\n");
      out.write("										style=\"display: none;\">+ 새 할 일</button>\r\n");
      out.write("								</div>\r\n");
      out.write("								");
      out.write("\r\n");
      out.write("								<div class=\"tab-content-wrapper\">\r\n");
      out.write("									<div id=\"tab_schedule\" class=\"tab-content active\">\r\n");
      out.write("										 ");
      out.write("\r\n");
      out.write("									    <h4 class=\"schedule-date-title\"></h4> \r\n");
      out.write("									    ");
      out.write("\r\n");
      out.write("									    <div id=\"daily-schedule-list-container\">\r\n");
      out.write("									        <p>캘린더에서 날짜를 선택해주세요.</p>\r\n");
      out.write("									    </div>\r\n");
      out.write("									</div>\r\n");
      out.write("									<div id=\"tab_todo\" class=\"tab-content\">\r\n");
      out.write("										<p>로딩 중...</p>\r\n");
      out.write("									</div>\r\n");
      out.write("								</div>\r\n");
      out.write("							</div>\r\n");
      out.write("						</div>\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("						<div class=\"line\"></div>\r\n");
      out.write("						\r\n");
      out.write("						<!-- 블록 위치 변경을 위한 수정, 저장, 취소 버튼 -->\r\n");
      out.write("						<div class=\"workspace-controls\">\r\n");
      out.write("						    <h3><i class=\"fa-solid fa-shapes\"></i>&nbsp;&nbsp;My Workspace</h3>\r\n");
      out.write("						    <div class=\"workspace-buttons\">\r\n");
      out.write("						        <button id=\"edit-order-btn\" class=\"control-btn\"><i class=\"fa-solid fa-pen-to-square\" style=\"filter: invert(0) !important;\"></i> 편집</button>\r\n");
      out.write("						        <button id=\"save-order-btn\" class=\"control-btn\" style=\"display: none;\"><i class=\"fa-solid fa-save\" style=\"filter: invert(0) !important;\"></i> 저장</button>\r\n");
      out.write("						        <button id=\"cancel-order-btn\" class=\"control-btn\" style=\"display: none;\"><i class=\"fa-solid fa-times\" style=\"filter: invert(0) !important;\"></i> 취소</button>\r\n");
      out.write("						    </div>\r\n");
      out.write("						</div>\r\n");
      out.write("\r\n");
      out.write("						<div id=\"contents_grid\">\r\n");
      out.write("							<!-- 내가 작성한 전체 글 목록 (인기글 순) -->\r\n");
      out.write("							<div class=\"contents_item\" id=\"my-posts\">\r\n");
      out.write("								<div class=\"widget-header\">\r\n");
      out.write("						        <h4><i class=\"fa-solid fa-pen-nib\"></i>&nbsp;&nbsp;내가 작성한 글</h4>\r\n");
      out.write("						        <button class=\"more-btn\" data-type=\"my-posts\">더보기</button>\r\n");
      out.write("						    </div>\r\n");
      out.write("						    <ul>\r\n");
      out.write("						        ");
      if (_jspx_meth_c_005fchoose_005f0(_jspx_page_context))
        return;
      out.write("\r\n");
      out.write("						    </ul>\r\n");
      out.write("							</div>\r\n");
      out.write("							<!-- 좋아요한 포스트 목록 -->\r\n");
      out.write("							<div class=\"contents_item\" id=\"liked-posts\">\r\n");
      out.write("								<div class=\"widget-header\">\r\n");
      out.write("							        <h4><i class=\"fa-solid fa-heart\"></i>&nbsp;&nbsp;좋아요한 글</h4>\r\n");
      out.write("							        <button class=\"more-btn\" data-type=\"liked-posts\">더보기</button>\r\n");
      out.write("							    </div>\r\n");
      out.write("							    <ul>\r\n");
      out.write("							        ");
      if (_jspx_meth_c_005fchoose_005f1(_jspx_page_context))
        return;
      out.write("\r\n");
      out.write("							    </ul>\r\n");
      out.write("							</div>\r\n");
      out.write("\r\n");
      out.write("							<!-- 안읽은 메시지 목록 -->\r\n");
      out.write("                            <div id=\"unread_messages\" class=\"contents_item\" style=\"background-color: var(--sidebar-color); border-radius: 20px; padding: 20px; box-shadow: 0 4px 20px rgba(0,0,0,0.2);\">\r\n");
      out.write("                            <h3 style=\"font-size: 18px; margin-bottom: 16px; color: var(--font-color); border-bottom: 1px solid var(--border-color); padding-bottom: 8px;\"><i class=\"fa-solid fa-bell\"></i> 안읽은 메시지</h3>\r\n");
      out.write("                            <div class=\"message_card_list\">\r\n");
      out.write("                                ");
      if (_jspx_meth_c_005fchoose_005f2(_jspx_page_context))
        return;
      out.write("\r\n");
      out.write("                            </div>\r\n");
      out.write("                            </div>\r\n");
      out.write("\r\n");
      out.write("							<!-- 동적으로 추가된 블록들 -->\r\n");
      out.write("							");
      if (_jspx_meth_c_005fforEach_005f3(_jspx_page_context))
        return;
      out.write("\r\n");
      out.write("\r\n");
      out.write("                        <!-- 블록 추가 버튼(블록) -->\r\n");
      out.write("			            <div id=\"content_plus\" class=\"contents_item\">+</div>\r\n");
      out.write("\r\n");
      out.write("						</div>\r\n");
      out.write("					</div>\r\n");
      out.write("				</section>\r\n");
      out.write("			</div>\r\n");
      out.write("            \r\n");
      out.write("\r\n");
      out.write('\r');
      out.write('\n');
      out.write('\r');
      out.write('\n');
      out.write("\r\n");
      out.write("<div class=\"modal-overlay\" id=\"unified-modal\" style=\"display: none;\">\r\n");
      out.write("    <div class=\"modal-content\">\r\n");
      out.write("        <h2 id=\"modal-title\"></h2> ");
      out.write("\r\n");
      out.write("        \r\n");
      out.write("        <form id=\"schedule-form\" style=\"display: none;\">\r\n");
      out.write("            <input type=\"hidden\" id=\"schedule-id\" name=\"schedule_idx\">\r\n");
      out.write("            <div class=\"form-group\">\r\n");
      out.write("                <label for=\"schedule-title\">제목</label>\r\n");
      out.write("                <input type=\"text\" id=\"schedule-title\" name=\"title\" required>\r\n");
      out.write("            </div>\r\n");
      out.write("            <div class=\"form-group\">\r\n");
      out.write("                <label for=\"schedule-description\">설명</label>\r\n");
      out.write("                <textarea id=\"schedule-description\" name=\"description\" rows=\"3\"></textarea>\r\n");
      out.write("            </div>\r\n");
      out.write("            <div class=\"form-group-row\">\r\n");
      out.write("                <div class=\"form-group\">\r\n");
      out.write("                    <label for=\"schedule-start\">시작 시간</label>\r\n");
      out.write("                    <input type=\"datetime-local\" id=\"schedule-start\" name=\"start_time\" required>\r\n");
      out.write("                </div>\r\n");
      out.write("                <div class=\"form-group\">\r\n");
      out.write("                    <label for=\"schedule-end\">종료 시간</label>\r\n");
      out.write("                    <input type=\"datetime-local\" id=\"schedule-end\" name=\"end_time\" required>\r\n");
      out.write("                </div>\r\n");
      out.write("            </div>\r\n");
      out.write("            <div class=\"form-group\">\r\n");
      out.write("                <label for=\"schedule-color\">색상</label>\r\n");
      out.write("                <div class=\"color-picker-wrapper\">\r\n");
      out.write("			        <input type=\"color\" id=\"schedule-color\" name=\"color\" value=\"#3788d8\">\r\n");
      out.write("			        <div id=\"schedule-recent-colors\" class=\"recent-colors-container\"></div>\r\n");
      out.write("			    </div>\r\n");
      out.write("            </div>\r\n");
      out.write("            <div class=\"modal-buttons\">\r\n");
      out.write("                <button type=\"button\" class=\"modal-close-btn\">취소</button>\r\n");
      out.write("                <button type=\"submit\" class=\"modal-save-btn\">저장</button>\r\n");
      out.write("            </div>\r\n");
      out.write("        </form>\r\n");
      out.write("\r\n");
      out.write("        <form id=\"todo-form\" style=\"display: none;\">\r\n");
      out.write("            <input type=\"hidden\" id=\"todo-id\" name=\"todo_idx\">\r\n");
      out.write("            <div class=\"form-group\">\r\n");
      out.write("                <label for=\"todo-text\">내용</label>\r\n");
      out.write("                <textarea id=\"todo-text\" name=\"text\" rows=\"4\" required></textarea>\r\n");
      out.write("            </div>\r\n");
      out.write("            <div class=\"form-group\">\r\n");
      out.write("                <label for=\"todo-group\">그룹</label>\r\n");
      out.write("                <input type=\"text\" id=\"todo-group\" name=\"todo_group\">\r\n");
      out.write("            </div>\r\n");
      out.write("            <div class=\"form-group\">\r\n");
      out.write("        		<label for=\"todo-color\">색상</label>\r\n");
      out.write("        		<div class=\"color-picker-wrapper\">\r\n");
      out.write("		        <input type=\"color\" id=\"todo-color\" name=\"color\" value=\"#3788d8\">\r\n");
      out.write("		        <div id=\"todo-recent-colors\" class=\"recent-colors-container\"></div>\r\n");
      out.write("		    </div>\r\n");
      out.write("    		</div>\r\n");
      out.write("            \r\n");
      out.write("            <div class=\"modal-buttons\">\r\n");
      out.write("                <button type=\"button\" class=\"modal-close-btn\">취소</button>\r\n");
      out.write("                <button type=\"submit\" class=\"modal-save-btn\">저장</button>\r\n");
      out.write("            </div>\r\n");
      out.write("        </form>\r\n");
      out.write("    </div>\r\n");
      out.write("</div>\r\n");
      out.write("\r\n");
      out.write("<div class=\"modal-overlay\" id=\"list-modal\" style=\"display: none;\">\r\n");
      out.write("    <div class=\"modal-content\">\r\n");
      out.write("        <h2 id=\"list-modal-title\"></h2>\r\n");
      out.write("        <div class=\"list-modal-content\"></div> \r\n");
      out.write("        <div class=\"modal-buttons\">\r\n");
      out.write("            <button type=\"button\" class=\"modal-close-btn\">닫기</button>\r\n");
      out.write("        </div>\r\n");
      out.write("    </div>\r\n");
      out.write("</div>\r\n");
      out.write("\r\n");
      out.write("<!-- 모달 -->\r\n");
      out.write("	<!-- 메시지 모달 -->\r\n");
      out.write("	<div id=\"chatModal\" class=\"modal\">\r\n");
      out.write("	  <div class=\"modal-content\" style=\"min-width:350px; max-width:430px;\">\r\n");
      out.write("	    <span class=\"close-modal\" onclick=\"closeChatModal()\"> &times; </span>\r\n");
      out.write("	    <h4 id=\"chatTitle\" style=\"text-align:center;\">채팅</h4>\r\n");
      out.write("	    <div id=\"chatHistory\"></div>\r\n");
      out.write("		<div class=\"chat-input-row\">\r\n");
      out.write("		  <input type=\"text\" id=\"chatInput\" placeholder=\"메시지를 입력하세요...\" autocomplete=\"off\" />\r\n");
      out.write("		  <button type=\"button\" id=\"sendMessageBtn\" title=\"전송\">\r\n");
      out.write("		    <svg width=\"22\" height=\"22\" viewBox=\"0 0 22 22\" fill=\"none\">\r\n");
      out.write("		      <path d=\"M3 19L20 11L3 3V10L15 11L3 12V19Z\" fill=\"#fff\"/>\r\n");
      out.write("		    </svg>\r\n");
      out.write("		  </button>\r\n");
      out.write("		</div>\r\n");
      out.write("	  </div>\r\n");
      out.write("	</div>\r\n");
      out.write("	\r\n");
      out.write("	<!-- 블록 추가 모달 -->\r\n");
      out.write("	<div id=\"addBlockModal\" class=\"modal\">\r\n");
      out.write("		<div class=\"modal-content\" style=\"text-align: center;\">\r\n");
      out.write("			<h4>추가할 블록 선택</h4>\r\n");
      out.write("			<hr style=\"width: 100%; border: solid 1px var(--border-color);\"><br>\r\n");
      out.write("			<select id=\"blockTypeSelector\">\r\n");
      out.write("				<option value=\"CategoryPosts\">카테고리별 글</option>\r\n");
      out.write("				<option value=\"WatchParties\">구독 워치파티</option>\r\n");
      out.write("				<option value=\"UserStats\">내 활동 통계</option>\r\n");
      out.write("			</select>\r\n");
      out.write("	\r\n");
      out.write("			<div id=\"category\" style=\"display: none;\">\r\n");
      out.write("				<select id=\"categorySelector\" name=\"category\">\r\n");
      out.write("					");
      if (_jspx_meth_c_005fforEach_005f4(_jspx_page_context))
        return;
      out.write("\r\n");
      out.write("				</select>\r\n");
      out.write("				<br>\r\n");
      out.write("				<select id=\"sortTypeSelector\">\r\n");
      out.write("					<option value=\"popular\">인기순</option>\r\n");
      out.write("					<option value=\"latest\">최신순</option>\r\n");
      out.write("				</select>\r\n");
      out.write("			</div>\r\n");
      out.write("			<button id=\"confirmAddBlock\" style=\"display: block;\">추가</button>\r\n");
      out.write("		</div>\r\n");
      out.write("	</div>\r\n");
      out.write("	<!-- 모달 끝 -->\r\n");
      out.write("\r\n");
      out.write("<script> /* 모달, 블록 */\r\n");
      out.write("	\r\n");
      out.write("    // 전역 차트 인스턴스 저장소\r\n");
      out.write("    const userCharts = {};\r\n");
      out.write("    \r\n");
      out.write("    // 추가 블록 편집 모드 시 사용할 전역 변수\r\n");
      out.write("    let isEditMode = false; // 편집 모드 상태 관리\r\n");
      out.write("    let initialBlockOrder = null; // 편집 시작 시의 블록 순서 저장\r\n");
      out.write("	\r\n");
      out.write("    /* 모달, 블록 관련 js, jquery */\r\n");
      out.write("    $(document).ready(function() {\r\n");
      out.write("    	// 초기 페이지 로드\r\n");
      out.write("        ");
      if (_jspx_meth_c_005fforEach_005f5(_jspx_page_context))
        return;
      out.write("\r\n");
      out.write("        \r\n");
      out.write("        // + 버튼 표시여부 결정\r\n");
      out.write("        updateAddBlockButtonVisibility();\r\n");
      out.write("		\r\n");
      out.write("        // 이벤트 관련\r\n");
      out.write("        const grid = $('#contents_grid');\r\n");
      out.write("\r\n");
      out.write("     	// 이벤트 위임을 사용하여 새로고침 및 삭제 버튼 이벤트 한 번에 처리\r\n");
      out.write("        grid.on('click', '.block-actions button', function() {\r\n");
      out.write("            const button = $(this);\r\n");
      out.write("            const blockId = button.data('block-id');\r\n");
      out.write("\r\n");
      out.write("            if (button.hasClass('refresh-block-btn')) {\r\n");
      out.write("                const blockContentDiv = $('#block-' + blockId + ' .block-content');\r\n");
      out.write("                blockContentDiv.html('<div class=\"loading-spinner\"></div>');\r\n");
      out.write("                $.ajax({\r\n");
      out.write("                    url: '");
      out.write((java.lang.String) org.apache.jasper.runtime.PageContextImpl.proprietaryEvaluate("${pageContext.request.contextPath}", java.lang.String.class, (javax.servlet.jsp.PageContext)_jspx_page_context, null));
      out.write("/block.do',\r\n");
      out.write("                    type: 'GET',\r\n");
      out.write("                    data: { block_id: blockId },\r\n");
      out.write("                    dataType: 'json', // 서버로부터 JSON 응답을 기대한다고 명시\r\n");
      out.write("                    success: function(res) {\r\n");
      out.write("                        // 1. 새로운 HTML로 내용을 교체\r\n");
      out.write("                        blockContentDiv.html(res.html);\r\n");
      out.write("\r\n");
      out.write("                        // 2. 만약 블록 타입이 'UserStats'이고 차트 데이터가 있다면 차트를 다시 그림\r\n");
      out.write("                        if (res.block_type === 'UserStats' && res.chart_data) {\r\n");
      out.write("                        	$('#block-' + blockId).find('.block-header h4').html('<i class=\"fa-solid fa-chart-simple\"></i>&nbsp;' + res.title);\r\n");
      out.write("                        	createOrUpdateChart(blockId, res.chart_data);\r\n");
      out.write("                        }\r\n");
      out.write("                    },\r\n");
      out.write("                    error: function() {\r\n");
      out.write("                        blockContentDiv.html('<p style=\"color:red;\">새로고침 실패</p>');\r\n");
      out.write("                    }\r\n");
      out.write("                });\r\n");
      out.write("            } else if (button.hasClass('delete-block-btn')) {\r\n");
      out.write("                deleteBlock(blockId);\r\n");
      out.write("            }\r\n");
      out.write("        });\r\n");
      out.write("\r\n");
      out.write("        // 차트 데이터셋 토글\r\n");
      out.write("        grid.on('change', '.dataset-toggle-cb', function() {\r\n");
      out.write("            const checkbox = $(this);\r\n");
      out.write("            const chartId = checkbox.closest('.chart-toggles').data('chart-id');\r\n");
      out.write("            const datasetIndex = checkbox.data('dataset-index');\r\n");
      out.write("            const chart = userCharts[chartId];\r\n");
      out.write("            if (chart) {\r\n");
      out.write("                chart.setDatasetVisibility(datasetIndex, checkbox.prop('checked'));\r\n");
      out.write("                chart.update();\r\n");
      out.write("            }\r\n");
      out.write("        });\r\n");
      out.write("        \r\n");
      out.write("        // 통계 블록의 기간 변경 버튼 이벤트 핸들러\r\n");
      out.write("        grid.on('click', '.period-btn', function() {\r\n");
      out.write("            const $button = $(this);\r\n");
      out.write("            const blockId = $button.data('block-id');\r\n");
      out.write("            const period = $button.data('period');\r\n");
      out.write("\r\n");
      out.write("            // 이미 활성화된 버튼을 누르면 아무것도 하지 않음\r\n");
      out.write("            if ($button.hasClass('active')) {\r\n");
      out.write("                return;\r\n");
      out.write("            }\r\n");
      out.write("            \r\n");
      out.write("            // 버튼 활성 상태 UI 업데이트\r\n");
      out.write("            $button.siblings().removeClass('active');\r\n");
      out.write("            $button.addClass('active');\r\n");
      out.write("\r\n");
      out.write("            // 로딩 스피너 표시\r\n");
      out.write("            const blockContentDiv = $('#block-' + blockId + ' .block-content');\r\n");
      out.write("            blockContentDiv.html('<div class=\"loading-spinner\"></div>');\r\n");
      out.write("\r\n");
      out.write("            // 해당 블록을 새로운 기간으로 새로고침\r\n");
      out.write("            $.ajax({\r\n");
      out.write("                url: '");
      out.write((java.lang.String) org.apache.jasper.runtime.PageContextImpl.proprietaryEvaluate("${pageContext.request.contextPath}", java.lang.String.class, (javax.servlet.jsp.PageContext)_jspx_page_context, null));
      out.write("/block.do',\r\n");
      out.write("                type: 'GET',\r\n");
      out.write("                data: { \r\n");
      out.write("                    block_id: blockId,\r\n");
      out.write("                    period: period\r\n");
      out.write("                },\r\n");
      out.write("                dataType: 'json',\r\n");
      out.write("                success: function(res) {\r\n");
      out.write("                	// 새 HTML로 교체\r\n");
      out.write("                    blockContentDiv.html(res.html);\r\n");
      out.write("                    // 차트 다시 그리기\r\n");
      out.write("                    if (res.block_type === 'UserStats' && res.chart_data) {\r\n");
      out.write("                    	const $headerTitle = $('#block-' + blockId).find('.block-header h4');\r\n");
      out.write("                    	$headerTitle.html('<i class=\"fa-solid fa-chart-simple\"></i>&nbsp;' + res.title);\r\n");
      out.write("                        createOrUpdateChart(blockId, res.chart_data);\r\n");
      out.write("                    }\r\n");
      out.write("                },\r\n");
      out.write("                error: function() {\r\n");
      out.write("                    blockContentDiv.html('<p style=\"color:red;\">새로고침 실패</p>');\r\n");
      out.write("                }\r\n");
      out.write("            });\r\n");
      out.write("        });\r\n");
      out.write("\r\n");
      out.write("        // --- 블록 추가 모달 관련 이벤트 ---\r\n");
      out.write("        $('#content_plus').on('click', function() {\r\n");
      out.write("  		  $('html, body').scrollTop(0);\r\n");
      out.write("		  $('#addBlockModal').css({\r\n");
      out.write("			  position: 'fixed',\r\n");
      out.write("			  top: '50%',\r\n");
      out.write("			  left: '50%',\r\n");
      out.write("			  transform: 'translate(-50%, -50%)',\r\n");
      out.write("			  backgroundColor: 'rgba(0,0,0,0.8)',\r\n");
      out.write("			  display: 'flex',\r\n");
      out.write("			  zIndex: 99999\r\n");
      out.write("		  });\r\n");
      out.write("        });\r\n");
      out.write("        \r\n");
      out.write("        $('#blockTypeSelector').on('change', function() {\r\n");
      out.write("            if ($(this).val() === 'CategoryPosts') { $('#category').show(); } \r\n");
      out.write("            else { $('#category').hide(); }\r\n");
      out.write("        }).change();\r\n");
      out.write("\r\n");
      out.write("        $('#confirmAddBlock').on('click', function() {\r\n");
      out.write("            const blockType = $('#blockTypeSelector').val();\r\n");
      out.write("            let dataToSend = {\r\n");
      out.write("                block_type: blockType,\r\n");
      out.write("                _method: 'ADD'\r\n");
      out.write("            };\r\n");
      out.write("            if (blockType === 'CategoryPosts') {\r\n");
      out.write("                dataToSend.category_idx = $('#categorySelector').val();\r\n");
      out.write("                dataToSend.category_name = $('#categorySelector option:selected').text();\r\n");
      out.write("                dataToSend.sort_type = $('#sortTypeSelector').val();\r\n");
      out.write("            }\r\n");
      out.write("            addBlockToServer(dataToSend);\r\n");
      out.write("            $('#addBlockModal').hide();\r\n");
      out.write("        });\r\n");
      out.write("        \r\n");
      out.write("	    // 모달 외부 클릭/ESC로 닫기\r\n");
      out.write("	    $(document).on('keydown', function(e) {\r\n");
      out.write("	        if (e.key === 'Escape') {\r\n");
      out.write("	          $('#addBlockModal').hide();\r\n");
      out.write("	        }\r\n");
      out.write("	    });\r\n");
      out.write("\r\n");
      out.write("	    $('#addBlockModal').on('click', function(e) {\r\n");
      out.write("	        if (e.target.id === 'addBlockModal') {\r\n");
      out.write("	          $(this).hide();\r\n");
      out.write("	        }\r\n");
      out.write("	    });\r\n");
      out.write("       \r\n");
      out.write("	 	// --- 워크스페이스 순서 편집 관련 이벤트 ---\r\n");
      out.write("	 	// 편집 모드 진입\r\n");
      out.write("	    $('#edit-order-btn').on('click', function() {\r\n");
      out.write("	        enterEditMode();\r\n");
      out.write("	    });\r\n");
      out.write("\r\n");
      out.write("	 	// 편집 취소\r\n");
      out.write("	    $('#cancel-order-btn').on('click', function() {\r\n");
      out.write("	        if (initialBlockOrder) {\r\n");
      out.write("	        	// 이동시킨 블록들 전부 제거\r\n");
      out.write("	            $('.generated_block').remove();\r\n");
      out.write("\r\n");
      out.write("	            // 초기 상태의 블록들 다시 삽입\r\n");
      out.write("	            initialBlockOrder.each(function() {\r\n");
      out.write("	                $('#content_plus').before(this);\r\n");
      out.write("	                \r\n");
      out.write("	                if ($(this).find('canvas[id^=\"userStatsChart_\"]').length > 0) {\r\n");
      out.write("	                	$(this).find('.refresh-block-btn').trigger('click');\r\n");
      out.write("	                }\r\n");
      out.write("	            });\r\n");
      out.write("	        }\r\n");
      out.write("	        exitEditMode();\r\n");
      out.write("	    });\r\n");
      out.write("\r\n");
      out.write("	 	// 편집된 순서 저장\r\n");
      out.write("	    $('#save-order-btn').on('click', function() {\r\n");
      out.write("	        saveBlockOrder();\r\n");
      out.write("	    });\r\n");
      out.write("\r\n");
      out.write("	    // 동적으로 생성된 화살표 버튼 클릭 처리 : 이벤트 위임 사용\r\n");
      out.write("	    $('#contents_grid').on('click', '.move-block-btn', function() {\r\n");
      out.write("	        const $thisBlock = $(this).closest('.generated_block');\r\n");
      out.write("	        const movableBlocks = $('.generated_block').toArray();\r\n");
      out.write("	        const currentIndex = movableBlocks.indexOf($thisBlock[0]);\r\n");
      out.write("\r\n");
      out.write("	        let targetIndex = -1;\r\n");
      out.write("\r\n");
      out.write("	        if ($(this).hasClass('move-left-btn')) {\r\n");
      out.write("	            targetIndex = currentIndex - 1;\r\n");
      out.write("	        } else if ($(this).hasClass('move-right-btn')) {\r\n");
      out.write("	            targetIndex = currentIndex + 1;\r\n");
      out.write("	        }\r\n");
      out.write("\r\n");
      out.write("	        if (targetIndex >= 0 && targetIndex < movableBlocks.length) {\r\n");
      out.write("	            const $targetBlock = $(movableBlocks[targetIndex]);\r\n");
      out.write("	            if ($(this).hasClass('move-left-btn')) {\r\n");
      out.write("	                $targetBlock.before($thisBlock);\r\n");
      out.write("	            } else {\r\n");
      out.write("	                $targetBlock.after($thisBlock);\r\n");
      out.write("	            }\r\n");
      out.write("	            updateArrowVisibility(); // 화살표 상태 즉시 업데이트\r\n");
      out.write("	        }\r\n");
      out.write("	    });\r\n");
      out.write("    });\r\n");
      out.write("    \r\n");
      out.write("	/* 모달, 블록 관련 함수 */\r\n");
      out.write("\r\n");
      out.write("	// '+' 버튼 표시 여부를 업데이트하는 함수\r\n");
      out.write("	function updateAddBlockButtonVisibility() {\r\n");
      out.write("	    if ($('.generated_block').length >= 5) {\r\n");
      out.write("	        $(\"#content_plus\").hide();\r\n");
      out.write("	    } else {\r\n");
      out.write("	        $(\"#content_plus\").show();\r\n");
      out.write("	    }\r\n");
      out.write("	}\r\n");
      out.write("	\r\n");
      out.write("    // 차트 생성 함수\r\n");
      out.write("    function createOrUpdateChart(blockId, chartData) {\r\n");
      out.write("        const chartId = 'userStatsChart_' + blockId;\r\n");
      out.write("        if (userCharts[chartId]) {\r\n");
      out.write("            userCharts[chartId].destroy();\r\n");
      out.write("        }\r\n");
      out.write("        const ctx = document.getElementById(chartId)?.getContext('2d');\r\n");
      out.write("        if (!ctx) return;\r\n");
      out.write("\r\n");
      out.write("        const chart = new Chart(ctx, {\r\n");
      out.write("            type: 'line',\r\n");
      out.write("            data: chartData,\r\n");
      out.write("            options: {\r\n");
      out.write("                responsive: true,\r\n");
      out.write("                maintainAspectRatio: false,\r\n");
      out.write("                scales: { y: { beginAtZero: true } },\r\n");
      out.write("                plugins: { legend: { position: 'top' }, tooltip: { mode: 'index', intersect: false } },\r\n");
      out.write("                hover: { mode: 'index', intersect: false }\r\n");
      out.write("            }\r\n");
      out.write("        });\r\n");
      out.write("        userCharts[chartId] = chart;\r\n");
      out.write("    }\r\n");
      out.write("\r\n");
      out.write("    // 블록 추가 함수\r\n");
      out.write("	function addBlockToServer(payload) {\r\n");
      out.write("	    $.ajax({\r\n");
      out.write("	        url: '");
      out.write((java.lang.String) org.apache.jasper.runtime.PageContextImpl.proprietaryEvaluate("${pageContext.request.contextPath}", java.lang.String.class, (javax.servlet.jsp.PageContext)_jspx_page_context, null));
      out.write("/block.do',\r\n");
      out.write("	        type: 'POST',\r\n");
      out.write("	        data: payload,\r\n");
      out.write("	        dataType: 'json', // 응답 타입을 'html'에서 'json'으로 변경\r\n");
      out.write("	        success: function(res) { // 응답 변수 이름을 res (response)로 변경\r\n");
      out.write("	            // 1. 새로운 HTML을 화면에 추가\r\n");
      out.write("	            $('#content_plus').before(res.html);\r\n");
      out.write("	            \r\n");
      out.write("	            // 2. 만약 추가된 블록이 차트 블록이라면, 차트를 그려줌\r\n");
      out.write("	            if (res.block_type === 'UserStats' && res.chart_data) {\r\n");
      out.write("	                createOrUpdateChart(res.block_id, res.chart_data);\r\n");
      out.write("	            }\r\n");
      out.write("	            \r\n");
      out.write("	            // 3. '+' 버튼 표시 여부 업데이트\r\n");
      out.write("	            updateAddBlockButtonVisibility();\r\n");
      out.write("	        },\r\n");
      out.write("	        error: function() { alert('블록을 추가하는 데 실패했습니다.'); }\r\n");
      out.write("	    });\r\n");
      out.write("	}\r\n");
      out.write("\r\n");
      out.write("	// 블록 삭제 함수\r\n");
      out.write("	function deleteBlock(blockId) {\r\n");
      out.write("	    if (!confirm(\"블록을 정말 삭제하시겠습니까?\")) return;\r\n");
      out.write("	    $.ajax({\r\n");
      out.write("	        url: '");
      out.write((java.lang.String) org.apache.jasper.runtime.PageContextImpl.proprietaryEvaluate("${pageContext.request.contextPath}", java.lang.String.class, (javax.servlet.jsp.PageContext)_jspx_page_context, null));
      out.write("/block.do',\r\n");
      out.write("	        type: 'POST',\r\n");
      out.write("	        data: {\r\n");
      out.write("	            block_id: blockId,\r\n");
      out.write("	            _method: 'DELETE'\r\n");
      out.write("	        },\r\n");
      out.write("	        dataType: 'json',\r\n");
      out.write("	        success: function(res) {\r\n");
      out.write("	            if (res.success) {\r\n");
      out.write("	                $('#block-' + blockId).fadeOut(function() {\r\n");
      out.write("	                    $(this).remove();\r\n");
      out.write("	                    \r\n");
      out.write("	                    updateAddBlockButtonVisibility();\r\n");
      out.write("	                });\r\n");
      out.write("	            } else { alert(res.message); }\r\n");
      out.write("	        },\r\n");
      out.write("	        error: function() { alert('블록 삭제 중 오류가 발생했습니다.'); }\r\n");
      out.write("	    });\r\n");
      out.write("	}\r\n");
      out.write("	\r\n");
      out.write("	// --- 워크스페이스 순서 편집 관련 함수 ---\r\n");
      out.write("\r\n");
      out.write("	// 편집 모드로 진입하는 함수\r\n");
      out.write("	function enterEditMode() {\r\n");
      out.write("	    isEditMode = true;\r\n");
      out.write("	    initialBlockOrder = $('.generated_block').clone(true, true); // 초기 상태 저장\r\n");
      out.write("\r\n");
      out.write("	    $('#contents_grid').addClass('edit-mode');\r\n");
      out.write("	    $('#edit-order-btn').hide();\r\n");
      out.write("	    $('#save-order-btn, #cancel-order-btn').show();\r\n");
      out.write("\r\n");
      out.write("	    // 각 블록에 화살표 버튼 추가\r\n");
      out.write("	    $('.generated_block').each(function() {\r\n");
      out.write("	        $(this).append(`\r\n");
      out.write("	            <button class=\"move-block-btn move-left-btn\" title=\"왼쪽으로 이동\"><i class=\"fa-solid fa-chevron-left\"></i></button>\r\n");
      out.write("	            <button class=\"move-block-btn move-right-btn\" title=\"오른쪽으로 이동\"><i class=\"fa-solid fa-chevron-right\"></i></button>\r\n");
      out.write("	        `);\r\n");
      out.write("	    });\r\n");
      out.write("	    updateArrowVisibility();\r\n");
      out.write("	}\r\n");
      out.write("\r\n");
      out.write("	// 편집 모드를 종료하는 함수\r\n");
      out.write("	function exitEditMode() {\r\n");
      out.write("	    isEditMode = false;\r\n");
      out.write("	    initialBlockOrder = null; // 초기 상태 리셋\r\n");
      out.write("\r\n");
      out.write("	    $('#contents_grid').removeClass('edit-mode');\r\n");
      out.write("	    $('#edit-order-btn').show();\r\n");
      out.write("	    $('#save-order-btn, #cancel-order-btn').hide();\r\n");
      out.write("\r\n");
      out.write("	    // 모든 화살표 버튼 제거\r\n");
      out.write("	    $('.move-block-btn').remove();\r\n");
      out.write("	}\r\n");
      out.write("\r\n");
      out.write("	// 화살표 버튼의 표시 여부를 업데이트하는 함수\r\n");
      out.write("	function updateArrowVisibility() {\r\n");
      out.write("	    const movableBlocks = $('.generated_block');\r\n");
      out.write("	    const totalMovable = movableBlocks.length;\r\n");
      out.write("\r\n");
      out.write("	    movableBlocks.each(function(index) {\r\n");
      out.write("	        const $leftArrow = $(this).find('.move-left-btn');\r\n");
      out.write("	        const $rightArrow = $(this).find('.move-right-btn');\r\n");
      out.write("\r\n");
      out.write("	        // 첫 번째 블록이면 왼쪽 화살표 숨김\r\n");
      out.write("	        if (index === 0) {\r\n");
      out.write("	            $leftArrow.hide();\r\n");
      out.write("	        } else {\r\n");
      out.write("	            $leftArrow.show();\r\n");
      out.write("	        }\r\n");
      out.write("\r\n");
      out.write("	        // 마지막 블록이면 오른쪽 화살표 숨김\r\n");
      out.write("	        if (index === totalMovable - 1) {\r\n");
      out.write("	            $rightArrow.hide();\r\n");
      out.write("	        } else {\r\n");
      out.write("	            $rightArrow.show();\r\n");
      out.write("	        }\r\n");
      out.write("	    });\r\n");
      out.write("	}\r\n");
      out.write("\r\n");
      out.write("	// 변경된 블록 순서를 서버에 저장하는 함수\r\n");
      out.write("	function saveBlockOrder() {\r\n");
      out.write("	    const orderData = [];\r\n");
      out.write("	    $('.generated_block').each(function(index) {\r\n");
      out.write("	        const blockId = $(this).attr('id').split('-')[1];\r\n");
      out.write("	        // block_order는 1부터 시작하도록 index + 1\r\n");
      out.write("	        orderData.push({ block_id: parseInt(blockId), block_order: index + 1 });\r\n");
      out.write("	    });\r\n");
      out.write("\r\n");
      out.write("	    $.ajax({\r\n");
      out.write("	        url: '");
      out.write((java.lang.String) org.apache.jasper.runtime.PageContextImpl.proprietaryEvaluate("${pageContext.request.contextPath}", java.lang.String.class, (javax.servlet.jsp.PageContext)_jspx_page_context, null));
      out.write("/block.do',\r\n");
      out.write("	        type: 'POST',\r\n");
      out.write("	        data: {\r\n");
      out.write("	            _method: 'EDIT',\r\n");
      out.write("	            orders: JSON.stringify(orderData)\r\n");
      out.write("	        },\r\n");
      out.write("	        dataType: 'json',\r\n");
      out.write("	        success: function(res) {\r\n");
      out.write("	            if (res.success) {\r\n");
      out.write("	                alert('블록 순서가 저장되었습니다.');\r\n");
      out.write("	                exitEditMode();\r\n");
      out.write("	            } else {\r\n");
      out.write("	                alert(res.message || '순서 저장에 실패했습니다.');\r\n");
      out.write("	            }\r\n");
      out.write("	        },\r\n");
      out.write("	        error: function() {\r\n");
      out.write("	            alert('서버와 통신 중 오류가 발생했습니다.');\r\n");
      out.write("	        }\r\n");
      out.write("	    });\r\n");
      out.write("	}\r\n");
      out.write("\r\n");
      out.write("    \r\n");
      out.write("</script>\r\n");
      out.write("\r\n");
      out.write("<script> /* 채팅방 */\r\n");
      out.write("	/* 채팅방 관련 js, jquery */\r\n");
      out.write("	let currentChatSenderIdx = null;\r\n");
      out.write("	\r\n");
      out.write("	$(document).ready(function() {\r\n");
      out.write("	    $('.message_item').on('click', function () {\r\n");
      out.write("	      const senderIdx = $(this).data('sender-idx');\r\n");
      out.write("	      currentChatSenderIdx = senderIdx;\r\n");
      out.write("	      const nickname = $(this).data('nickname');\r\n");
      out.write("	      $('#chatTitle').text(nickname);\r\n");
      out.write("	      \r\n");
      out.write("	      $.ajax({\r\n");
      out.write("	        url: '");
      out.write((java.lang.String) org.apache.jasper.runtime.PageContextImpl.proprietaryEvaluate("${pageContext.request.contextPath}", java.lang.String.class, (javax.servlet.jsp.PageContext)_jspx_page_context, null));
      out.write("/message.do',\r\n");
      out.write("	        type: 'GET',\r\n");
      out.write("	        data: { \r\n");
      out.write("	        	sender_idx: senderIdx,\r\n");
      out.write("	        	view: 'CHAT'\r\n");
      out.write("	        },\r\n");
      out.write("	        dataType: 'json',\r\n");
      out.write("	        success: function (chatList) {\r\n");
      out.write("	        	$('#chatHistory').empty();\r\n");
      out.write("	\r\n");
      out.write("	            if (!chatList || !Array.isArray(chatList) || chatList.length === 0) {\r\n");
      out.write("	                $('#chatHistory').html('<p style=\"text-align:center; color:grey;\">채팅 내역이 없습니다.</p>');\r\n");
      out.write("	                return;\r\n");
      out.write("	            }\r\n");
      out.write("	            \r\n");
      out.write("	            const chatContainer = $('<div class=\"chat-container\"></div>');\r\n");
      out.write("	            let lastDate = null;\r\n");
      out.write("	\r\n");
      out.write("	            chatList.forEach(msg => {\r\n");
      out.write("	                if (msg.date !== lastDate) {\r\n");
      out.write("	                    lastDate = msg.date;\r\n");
      out.write("	                    const dateLabel = $('<div class=\"chat-date-separator\"></div>').text(lastDate);\r\n");
      out.write("	                    chatContainer.append(dateLabel);\r\n");
      out.write("	                }\r\n");
      out.write("	            	\r\n");
      out.write("	                const who = msg.isMine ? 'bubble-me' : 'bubble-other';\r\n");
      out.write("	                const formattedText = msg.text.replace(/\\n/g, '<br>');\r\n");
      out.write("	\r\n");
      out.write("	                const messageHtml = `\r\n");
      out.write("	                    <div class=\"chat-bubble ${who}\">\r\n");
      out.write("	                        <div class=\"bubble-text\">${formattedText}</div>\r\n");
      out.write("	                        <div class=\"bubble-time\">${msg.relativeTime}</div>\r\n");
      out.write("	                    </div>\r\n");
      out.write("	                `;\r\n");
      out.write("	                chatContainer.append(messageHtml);\r\n");
      out.write("	            });\r\n");
      out.write("	\r\n");
      out.write("	            $('#chatHistory').append(chatContainer);\r\n");
      out.write("	\r\n");
      out.write("	            $('#chatModal').css({\r\n");
      out.write("	                display: 'flex',\r\n");
      out.write("	                top: '50%',\r\n");
      out.write("	                left: '50%',\r\n");
      out.write("	                transform: 'translate(-50%, -50%)',\r\n");
      out.write("	                backgroundColor: 'rgba(0,0,0,0.8)'\r\n");
      out.write("	            });\r\n");
      out.write("	            \r\n");
      out.write("	            if(chatContainer.length) {\r\n");
      out.write("	                chatContainer.scrollTop(chatContainer[0].scrollHeight);\r\n");
      out.write("	            }\r\n");
      out.write("	        },\r\n");
      out.write("	        error: function () {\r\n");
      out.write("	          alert('채팅 내역 불러오기 실패');\r\n");
      out.write("	        }\r\n");
      out.write("	      });\r\n");
      out.write("	    });\r\n");
      out.write("	    \r\n");
      out.write("	    // 채팅방에서 메시지 전송 (버튼 클릭 또는 엔터)\r\n");
      out.write("	    $(\"#sendMessageBtn\").on(\"click\", sendChatMessage);\r\n");
      out.write("	\r\n");
      out.write("	    $(\"#chatInput\").on(\"keydown\", function(e) {\r\n");
      out.write("	      if (e.key === \"Enter\" && !e.shiftKey) {\r\n");
      out.write("	        e.preventDefault();\r\n");
      out.write("	        sendChatMessage();\r\n");
      out.write("	      }\r\n");
      out.write("	   });\r\n");
      out.write("	});\r\n");
      out.write("\r\n");
      out.write("	/* 채팅방 함수 */\r\n");
      out.write("	// 채팅 내역 닫기\r\n");
      out.write("	function closeChatModal() {\r\n");
      out.write("		$('#chatModal').hide();\r\n");
      out.write("		location.reload();\r\n");
      out.write("	}\r\n");
      out.write("	\r\n");
      out.write("	// 채팅방에서 메시지 전송\r\n");
      out.write("	function sendChatMessage() {\r\n");
      out.write("	    const message = $(\"#chatInput\").val().trim();\r\n");
      out.write("	    if (!message || !currentChatSenderIdx) return;\r\n");
      out.write("	\r\n");
      out.write("	    $.ajax({\r\n");
      out.write("	      url: '");
      out.write((java.lang.String) org.apache.jasper.runtime.PageContextImpl.proprietaryEvaluate("${pageContext.request.contextPath}", java.lang.String.class, (javax.servlet.jsp.PageContext)_jspx_page_context, null));
      out.write("/message.do',\r\n");
      out.write("	      type: 'POST',\r\n");
      out.write("	      data: JSON.stringify({\r\n");
      out.write("	    	receiver_idx: currentChatSenderIdx,\r\n");
      out.write("	        text: message\r\n");
      out.write("	      }),\r\n");
      out.write("	      contentType: \"application/json; charset=utf-8\",\r\n");
      out.write("	      success: function(res) {\r\n");
      out.write("	        $(\"#chatInput\").val(\"\"); // 입력창 비우기\r\n");
      out.write("	\r\n");
      out.write("	        // 메시지 전송 성공시 채팅 내역 갱신\r\n");
      out.write("	        // 서버에서 새 메시지 저장 후, 최신 내역 반환\r\n");
      out.write("	        // 채팅내역 새로 불러오기\r\n");
      out.write("	        reloadChatHistory();\r\n");
      out.write("	      },\r\n");
      out.write("	      error: function() {\r\n");
      out.write("	        alert('메시지 전송 실패!');\r\n");
      out.write("	      }\r\n");
      out.write("	    });\r\n");
      out.write("	}\r\n");
      out.write("	\r\n");
      out.write("	// 채팅내역 새로 불러오기\r\n");
      out.write("    function reloadChatHistory() {\r\n");
      out.write("      if (currentChatSenderIdx) {\r\n");
      out.write("        $('.message_item[data-sender-idx=\"'+currentChatSenderIdx+'\"]').click();\r\n");
      out.write("      }\r\n");
      out.write("    }\r\n");
      out.write("\r\n");
      out.write("</script>\r\n");
      out.write("\r\n");
      out.write("<script>\r\n");
      out.write("        const contextPath = \"");
      out.write((java.lang.String) org.apache.jasper.runtime.PageContextImpl.proprietaryEvaluate("${pageContext.request.contextPath}", java.lang.String.class, (javax.servlet.jsp.PageContext)_jspx_page_context, null));
      out.write("\";\r\n");
      out.write("</script>\r\n");
      out.write("<script defer src=\"./js/workspace.js\"></script>\r\n");
      out.write("</body>\r\n");
      org.apache.jasper.runtime.JspRuntimeLibrary.include(request, response, "/vibesync/includes/footer.jsp", out, false);
      out.write("\r\n");
      out.write("</html>\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("\r\n");
    } catch (java.lang.Throwable t) {
      if (!(t instanceof javax.servlet.jsp.SkipPageException)){
        out = _jspx_out;
        if (out != null && out.getBufferSize() != 0)
          try {
            if (response.isCommitted()) {
              out.flush();
            } else {
              out.clearBuffer();
            }
          } catch (java.io.IOException e) {}
        if (_jspx_page_context != null) _jspx_page_context.handlePageException(t);
        else throw new ServletException(t);
      }
    } finally {
      _jspxFactory.releasePageContext(_jspx_page_context);
    }
  }

  private boolean _jspx_meth_c_005fchoose_005f0(javax.servlet.jsp.PageContext _jspx_page_context)
          throws java.lang.Throwable {
    javax.servlet.jsp.PageContext pageContext = _jspx_page_context;
    javax.servlet.jsp.JspWriter out = _jspx_page_context.getOut();
    //  c:choose
    org.apache.taglibs.standard.tag.common.core.ChooseTag _jspx_th_c_005fchoose_005f0 = (org.apache.taglibs.standard.tag.common.core.ChooseTag) _005fjspx_005ftagPool_005fc_005fchoose.get(org.apache.taglibs.standard.tag.common.core.ChooseTag.class);
    _jspx_th_c_005fchoose_005f0.setPageContext(_jspx_page_context);
    _jspx_th_c_005fchoose_005f0.setParent(null);
    int _jspx_eval_c_005fchoose_005f0 = _jspx_th_c_005fchoose_005f0.doStartTag();
    if (_jspx_eval_c_005fchoose_005f0 != javax.servlet.jsp.tagext.Tag.SKIP_BODY) {
      do {
        out.write("\r\n");
        out.write("						            ");
        if (_jspx_meth_c_005fwhen_005f0(_jspx_th_c_005fchoose_005f0, _jspx_page_context))
          return true;
        out.write("\r\n");
        out.write("						            ");
        if (_jspx_meth_c_005fotherwise_005f0(_jspx_th_c_005fchoose_005f0, _jspx_page_context))
          return true;
        out.write("\r\n");
        out.write("						        ");
        int evalDoAfterBody = _jspx_th_c_005fchoose_005f0.doAfterBody();
        if (evalDoAfterBody != javax.servlet.jsp.tagext.BodyTag.EVAL_BODY_AGAIN)
          break;
      } while (true);
    }
    if (_jspx_th_c_005fchoose_005f0.doEndTag() == javax.servlet.jsp.tagext.Tag.SKIP_PAGE) {
      return true;
    }
    _005fjspx_005ftagPool_005fc_005fchoose.reuse(_jspx_th_c_005fchoose_005f0);
    return false;
  }

  private boolean _jspx_meth_c_005fwhen_005f0(javax.servlet.jsp.tagext.JspTag _jspx_th_c_005fchoose_005f0, javax.servlet.jsp.PageContext _jspx_page_context)
          throws java.lang.Throwable {
    javax.servlet.jsp.PageContext pageContext = _jspx_page_context;
    javax.servlet.jsp.JspWriter out = _jspx_page_context.getOut();
    //  c:when
    org.apache.taglibs.standard.tag.rt.core.WhenTag _jspx_th_c_005fwhen_005f0 = (org.apache.taglibs.standard.tag.rt.core.WhenTag) _005fjspx_005ftagPool_005fc_005fwhen_0026_005ftest.get(org.apache.taglibs.standard.tag.rt.core.WhenTag.class);
    _jspx_th_c_005fwhen_005f0.setPageContext(_jspx_page_context);
    _jspx_th_c_005fwhen_005f0.setParent((javax.servlet.jsp.tagext.Tag) _jspx_th_c_005fchoose_005f0);
    // /vibesync/workspace.jsp(215,18) name = test type = boolean reqTime = true required = true fragment = false deferredValue = false expectedTypeName = null deferredMethod = false methodSignature = null
    _jspx_th_c_005fwhen_005f0.setTest(((java.lang.Boolean) org.apache.jasper.runtime.PageContextImpl.proprietaryEvaluate("${not empty initialData.myPosts}", boolean.class, (javax.servlet.jsp.PageContext)_jspx_page_context, null)).booleanValue());
    int _jspx_eval_c_005fwhen_005f0 = _jspx_th_c_005fwhen_005f0.doStartTag();
    if (_jspx_eval_c_005fwhen_005f0 != javax.servlet.jsp.tagext.Tag.SKIP_BODY) {
      do {
        out.write("\r\n");
        out.write("						                ");
        if (_jspx_meth_c_005fforEach_005f0(_jspx_th_c_005fwhen_005f0, _jspx_page_context))
          return true;
        out.write("\r\n");
        out.write("						            ");
        int evalDoAfterBody = _jspx_th_c_005fwhen_005f0.doAfterBody();
        if (evalDoAfterBody != javax.servlet.jsp.tagext.BodyTag.EVAL_BODY_AGAIN)
          break;
      } while (true);
    }
    if (_jspx_th_c_005fwhen_005f0.doEndTag() == javax.servlet.jsp.tagext.Tag.SKIP_PAGE) {
      return true;
    }
    _005fjspx_005ftagPool_005fc_005fwhen_0026_005ftest.reuse(_jspx_th_c_005fwhen_005f0);
    return false;
  }

  private boolean _jspx_meth_c_005fforEach_005f0(javax.servlet.jsp.tagext.JspTag _jspx_th_c_005fwhen_005f0, javax.servlet.jsp.PageContext _jspx_page_context)
          throws java.lang.Throwable {
    javax.servlet.jsp.PageContext pageContext = _jspx_page_context;
    javax.servlet.jsp.JspWriter out = _jspx_page_context.getOut();
    //  c:forEach
    org.apache.taglibs.standard.tag.rt.core.ForEachTag _jspx_th_c_005fforEach_005f0 = (org.apache.taglibs.standard.tag.rt.core.ForEachTag) _005fjspx_005ftagPool_005fc_005fforEach_0026_005fvar_005fitems.get(org.apache.taglibs.standard.tag.rt.core.ForEachTag.class);
    _jspx_th_c_005fforEach_005f0.setPageContext(_jspx_page_context);
    _jspx_th_c_005fforEach_005f0.setParent((javax.servlet.jsp.tagext.Tag) _jspx_th_c_005fwhen_005f0);
    // /vibesync/workspace.jsp(216,22) name = var type = java.lang.String reqTime = false required = false fragment = false deferredValue = false expectedTypeName = null deferredMethod = false methodSignature = null
    _jspx_th_c_005fforEach_005f0.setVar("post");
    // /vibesync/workspace.jsp(216,22) name = items type = javax.el.ValueExpression reqTime = true required = false fragment = false deferredValue = true expectedTypeName = java.lang.Object deferredMethod = false methodSignature = null
    _jspx_th_c_005fforEach_005f0.setItems(new org.apache.jasper.el.JspValueExpression("/vibesync/workspace.jsp(216,22) '${initialData.myPosts}'",_jsp_getExpressionFactory().createValueExpression(_jspx_page_context.getELContext(),"${initialData.myPosts}",java.lang.Object.class)).getValue(_jspx_page_context.getELContext()));
    int[] _jspx_push_body_count_c_005fforEach_005f0 = new int[] { 0 };
    try {
      int _jspx_eval_c_005fforEach_005f0 = _jspx_th_c_005fforEach_005f0.doStartTag();
      if (_jspx_eval_c_005fforEach_005f0 != javax.servlet.jsp.tagext.Tag.SKIP_BODY) {
        do {
          out.write("\r\n");
          out.write("						                    <li>\r\n");
          out.write("						                        <a href=\"postView.do?nidx=");
          out.write((java.lang.String) org.apache.jasper.runtime.PageContextImpl.proprietaryEvaluate("${post.note_idx}", java.lang.String.class, (javax.servlet.jsp.PageContext)_jspx_page_context, null));
          out.write("\" title=\"");
          out.write((java.lang.String) org.apache.jasper.runtime.PageContextImpl.proprietaryEvaluate("${post.title}", java.lang.String.class, (javax.servlet.jsp.PageContext)_jspx_page_context, null));
          out.write("\">\r\n");
          out.write("						                            <span>");
          out.write((java.lang.String) org.apache.jasper.runtime.PageContextImpl.proprietaryEvaluate("${post.title}", java.lang.String.class, (javax.servlet.jsp.PageContext)_jspx_page_context, null));
          out.write("</span>\r\n");
          out.write("						                            <span class=\"block-meta\">\r\n");
          out.write("						                                <i class=\"fa-regular fa-eye\"></i> ");
          out.write((java.lang.String) org.apache.jasper.runtime.PageContextImpl.proprietaryEvaluate("${post.view_count}", java.lang.String.class, (javax.servlet.jsp.PageContext)_jspx_page_context, null));
          out.write("&nbsp;&nbsp;\r\n");
          out.write("						                                <i class=\"fa-regular fa-thumbs-up\"></i>");
          out.write((java.lang.String) org.apache.jasper.runtime.PageContextImpl.proprietaryEvaluate("${post.like_count}", java.lang.String.class, (javax.servlet.jsp.PageContext)_jspx_page_context, null));
          out.write("\r\n");
          out.write("						                            </span>\r\n");
          out.write("						                        </a>\r\n");
          out.write("						                    </li>\r\n");
          out.write("						                ");
          int evalDoAfterBody = _jspx_th_c_005fforEach_005f0.doAfterBody();
          if (evalDoAfterBody != javax.servlet.jsp.tagext.BodyTag.EVAL_BODY_AGAIN)
            break;
        } while (true);
      }
      if (_jspx_th_c_005fforEach_005f0.doEndTag() == javax.servlet.jsp.tagext.Tag.SKIP_PAGE) {
        return true;
      }
    } catch (java.lang.Throwable _jspx_exception) {
      while (_jspx_push_body_count_c_005fforEach_005f0[0]-- > 0)
        out = _jspx_page_context.popBody();
      _jspx_th_c_005fforEach_005f0.doCatch(_jspx_exception);
    } finally {
      _jspx_th_c_005fforEach_005f0.doFinally();
    }
    _005fjspx_005ftagPool_005fc_005fforEach_0026_005fvar_005fitems.reuse(_jspx_th_c_005fforEach_005f0);
    return false;
  }

  private boolean _jspx_meth_c_005fotherwise_005f0(javax.servlet.jsp.tagext.JspTag _jspx_th_c_005fchoose_005f0, javax.servlet.jsp.PageContext _jspx_page_context)
          throws java.lang.Throwable {
    javax.servlet.jsp.PageContext pageContext = _jspx_page_context;
    javax.servlet.jsp.JspWriter out = _jspx_page_context.getOut();
    //  c:otherwise
    org.apache.taglibs.standard.tag.common.core.OtherwiseTag _jspx_th_c_005fotherwise_005f0 = (org.apache.taglibs.standard.tag.common.core.OtherwiseTag) _005fjspx_005ftagPool_005fc_005fotherwise.get(org.apache.taglibs.standard.tag.common.core.OtherwiseTag.class);
    _jspx_th_c_005fotherwise_005f0.setPageContext(_jspx_page_context);
    _jspx_th_c_005fotherwise_005f0.setParent((javax.servlet.jsp.tagext.Tag) _jspx_th_c_005fchoose_005f0);
    int _jspx_eval_c_005fotherwise_005f0 = _jspx_th_c_005fotherwise_005f0.doStartTag();
    if (_jspx_eval_c_005fotherwise_005f0 != javax.servlet.jsp.tagext.Tag.SKIP_BODY) {
      do {
        out.write("\r\n");
        out.write("						                <li class=\"no-items\">작성한 글이 없습니다.</li>\r\n");
        out.write("						            ");
        int evalDoAfterBody = _jspx_th_c_005fotherwise_005f0.doAfterBody();
        if (evalDoAfterBody != javax.servlet.jsp.tagext.BodyTag.EVAL_BODY_AGAIN)
          break;
      } while (true);
    }
    if (_jspx_th_c_005fotherwise_005f0.doEndTag() == javax.servlet.jsp.tagext.Tag.SKIP_PAGE) {
      return true;
    }
    _005fjspx_005ftagPool_005fc_005fotherwise.reuse(_jspx_th_c_005fotherwise_005f0);
    return false;
  }

  private boolean _jspx_meth_c_005fchoose_005f1(javax.servlet.jsp.PageContext _jspx_page_context)
          throws java.lang.Throwable {
    javax.servlet.jsp.PageContext pageContext = _jspx_page_context;
    javax.servlet.jsp.JspWriter out = _jspx_page_context.getOut();
    //  c:choose
    org.apache.taglibs.standard.tag.common.core.ChooseTag _jspx_th_c_005fchoose_005f1 = (org.apache.taglibs.standard.tag.common.core.ChooseTag) _005fjspx_005ftagPool_005fc_005fchoose.get(org.apache.taglibs.standard.tag.common.core.ChooseTag.class);
    _jspx_th_c_005fchoose_005f1.setPageContext(_jspx_page_context);
    _jspx_th_c_005fchoose_005f1.setParent(null);
    int _jspx_eval_c_005fchoose_005f1 = _jspx_th_c_005fchoose_005f1.doStartTag();
    if (_jspx_eval_c_005fchoose_005f1 != javax.servlet.jsp.tagext.Tag.SKIP_BODY) {
      do {
        out.write("\r\n");
        out.write("							            ");
        if (_jspx_meth_c_005fwhen_005f1(_jspx_th_c_005fchoose_005f1, _jspx_page_context))
          return true;
        out.write("\r\n");
        out.write("							            ");
        if (_jspx_meth_c_005fotherwise_005f1(_jspx_th_c_005fchoose_005f1, _jspx_page_context))
          return true;
        out.write("\r\n");
        out.write("							        ");
        int evalDoAfterBody = _jspx_th_c_005fchoose_005f1.doAfterBody();
        if (evalDoAfterBody != javax.servlet.jsp.tagext.BodyTag.EVAL_BODY_AGAIN)
          break;
      } while (true);
    }
    if (_jspx_th_c_005fchoose_005f1.doEndTag() == javax.servlet.jsp.tagext.Tag.SKIP_PAGE) {
      return true;
    }
    _005fjspx_005ftagPool_005fc_005fchoose.reuse(_jspx_th_c_005fchoose_005f1);
    return false;
  }

  private boolean _jspx_meth_c_005fwhen_005f1(javax.servlet.jsp.tagext.JspTag _jspx_th_c_005fchoose_005f1, javax.servlet.jsp.PageContext _jspx_page_context)
          throws java.lang.Throwable {
    javax.servlet.jsp.PageContext pageContext = _jspx_page_context;
    javax.servlet.jsp.JspWriter out = _jspx_page_context.getOut();
    //  c:when
    org.apache.taglibs.standard.tag.rt.core.WhenTag _jspx_th_c_005fwhen_005f1 = (org.apache.taglibs.standard.tag.rt.core.WhenTag) _005fjspx_005ftagPool_005fc_005fwhen_0026_005ftest.get(org.apache.taglibs.standard.tag.rt.core.WhenTag.class);
    _jspx_th_c_005fwhen_005f1.setPageContext(_jspx_page_context);
    _jspx_th_c_005fwhen_005f1.setParent((javax.servlet.jsp.tagext.Tag) _jspx_th_c_005fchoose_005f1);
    // /vibesync/workspace.jsp(242,19) name = test type = boolean reqTime = true required = true fragment = false deferredValue = false expectedTypeName = null deferredMethod = false methodSignature = null
    _jspx_th_c_005fwhen_005f1.setTest(((java.lang.Boolean) org.apache.jasper.runtime.PageContextImpl.proprietaryEvaluate("${not empty initialData.likedPosts}", boolean.class, (javax.servlet.jsp.PageContext)_jspx_page_context, null)).booleanValue());
    int _jspx_eval_c_005fwhen_005f1 = _jspx_th_c_005fwhen_005f1.doStartTag();
    if (_jspx_eval_c_005fwhen_005f1 != javax.servlet.jsp.tagext.Tag.SKIP_BODY) {
      do {
        out.write("\r\n");
        out.write("							                ");
        if (_jspx_meth_c_005fforEach_005f1(_jspx_th_c_005fwhen_005f1, _jspx_page_context))
          return true;
        out.write("\r\n");
        out.write("							            ");
        int evalDoAfterBody = _jspx_th_c_005fwhen_005f1.doAfterBody();
        if (evalDoAfterBody != javax.servlet.jsp.tagext.BodyTag.EVAL_BODY_AGAIN)
          break;
      } while (true);
    }
    if (_jspx_th_c_005fwhen_005f1.doEndTag() == javax.servlet.jsp.tagext.Tag.SKIP_PAGE) {
      return true;
    }
    _005fjspx_005ftagPool_005fc_005fwhen_0026_005ftest.reuse(_jspx_th_c_005fwhen_005f1);
    return false;
  }

  private boolean _jspx_meth_c_005fforEach_005f1(javax.servlet.jsp.tagext.JspTag _jspx_th_c_005fwhen_005f1, javax.servlet.jsp.PageContext _jspx_page_context)
          throws java.lang.Throwable {
    javax.servlet.jsp.PageContext pageContext = _jspx_page_context;
    javax.servlet.jsp.JspWriter out = _jspx_page_context.getOut();
    //  c:forEach
    org.apache.taglibs.standard.tag.rt.core.ForEachTag _jspx_th_c_005fforEach_005f1 = (org.apache.taglibs.standard.tag.rt.core.ForEachTag) _005fjspx_005ftagPool_005fc_005fforEach_0026_005fvar_005fitems.get(org.apache.taglibs.standard.tag.rt.core.ForEachTag.class);
    _jspx_th_c_005fforEach_005f1.setPageContext(_jspx_page_context);
    _jspx_th_c_005fforEach_005f1.setParent((javax.servlet.jsp.tagext.Tag) _jspx_th_c_005fwhen_005f1);
    // /vibesync/workspace.jsp(243,23) name = var type = java.lang.String reqTime = false required = false fragment = false deferredValue = false expectedTypeName = null deferredMethod = false methodSignature = null
    _jspx_th_c_005fforEach_005f1.setVar("post");
    // /vibesync/workspace.jsp(243,23) name = items type = javax.el.ValueExpression reqTime = true required = false fragment = false deferredValue = true expectedTypeName = java.lang.Object deferredMethod = false methodSignature = null
    _jspx_th_c_005fforEach_005f1.setItems(new org.apache.jasper.el.JspValueExpression("/vibesync/workspace.jsp(243,23) '${initialData.likedPosts}'",_jsp_getExpressionFactory().createValueExpression(_jspx_page_context.getELContext(),"${initialData.likedPosts}",java.lang.Object.class)).getValue(_jspx_page_context.getELContext()));
    int[] _jspx_push_body_count_c_005fforEach_005f1 = new int[] { 0 };
    try {
      int _jspx_eval_c_005fforEach_005f1 = _jspx_th_c_005fforEach_005f1.doStartTag();
      if (_jspx_eval_c_005fforEach_005f1 != javax.servlet.jsp.tagext.Tag.SKIP_BODY) {
        do {
          out.write("\r\n");
          out.write("							                    <li>\r\n");
          out.write("							                        <a href=\"postView.do?nidx=");
          out.write((java.lang.String) org.apache.jasper.runtime.PageContextImpl.proprietaryEvaluate("${post.note_idx}", java.lang.String.class, (javax.servlet.jsp.PageContext)_jspx_page_context, null));
          out.write("\" title=\"");
          out.write((java.lang.String) org.apache.jasper.runtime.PageContextImpl.proprietaryEvaluate("${post.title}", java.lang.String.class, (javax.servlet.jsp.PageContext)_jspx_page_context, null));
          out.write("\">\r\n");
          out.write("							                            <span>");
          out.write((java.lang.String) org.apache.jasper.runtime.PageContextImpl.proprietaryEvaluate("${post.title}", java.lang.String.class, (javax.servlet.jsp.PageContext)_jspx_page_context, null));
          out.write("</span>\r\n");
          out.write("							                            <span class=\"block-meta\">by ");
          out.write((java.lang.String) org.apache.jasper.runtime.PageContextImpl.proprietaryEvaluate("${post.author_name}", java.lang.String.class, (javax.servlet.jsp.PageContext)_jspx_page_context, null));
          out.write("</span>\r\n");
          out.write("							                        </a>\r\n");
          out.write("							                    </li>\r\n");
          out.write("							                ");
          int evalDoAfterBody = _jspx_th_c_005fforEach_005f1.doAfterBody();
          if (evalDoAfterBody != javax.servlet.jsp.tagext.BodyTag.EVAL_BODY_AGAIN)
            break;
        } while (true);
      }
      if (_jspx_th_c_005fforEach_005f1.doEndTag() == javax.servlet.jsp.tagext.Tag.SKIP_PAGE) {
        return true;
      }
    } catch (java.lang.Throwable _jspx_exception) {
      while (_jspx_push_body_count_c_005fforEach_005f1[0]-- > 0)
        out = _jspx_page_context.popBody();
      _jspx_th_c_005fforEach_005f1.doCatch(_jspx_exception);
    } finally {
      _jspx_th_c_005fforEach_005f1.doFinally();
    }
    _005fjspx_005ftagPool_005fc_005fforEach_0026_005fvar_005fitems.reuse(_jspx_th_c_005fforEach_005f1);
    return false;
  }

  private boolean _jspx_meth_c_005fotherwise_005f1(javax.servlet.jsp.tagext.JspTag _jspx_th_c_005fchoose_005f1, javax.servlet.jsp.PageContext _jspx_page_context)
          throws java.lang.Throwable {
    javax.servlet.jsp.PageContext pageContext = _jspx_page_context;
    javax.servlet.jsp.JspWriter out = _jspx_page_context.getOut();
    //  c:otherwise
    org.apache.taglibs.standard.tag.common.core.OtherwiseTag _jspx_th_c_005fotherwise_005f1 = (org.apache.taglibs.standard.tag.common.core.OtherwiseTag) _005fjspx_005ftagPool_005fc_005fotherwise.get(org.apache.taglibs.standard.tag.common.core.OtherwiseTag.class);
    _jspx_th_c_005fotherwise_005f1.setPageContext(_jspx_page_context);
    _jspx_th_c_005fotherwise_005f1.setParent((javax.servlet.jsp.tagext.Tag) _jspx_th_c_005fchoose_005f1);
    int _jspx_eval_c_005fotherwise_005f1 = _jspx_th_c_005fotherwise_005f1.doStartTag();
    if (_jspx_eval_c_005fotherwise_005f1 != javax.servlet.jsp.tagext.Tag.SKIP_BODY) {
      do {
        out.write("\r\n");
        out.write("							                <li class=\"no-items\">좋아요한 글이 없습니다.</li>\r\n");
        out.write("							            ");
        int evalDoAfterBody = _jspx_th_c_005fotherwise_005f1.doAfterBody();
        if (evalDoAfterBody != javax.servlet.jsp.tagext.BodyTag.EVAL_BODY_AGAIN)
          break;
      } while (true);
    }
    if (_jspx_th_c_005fotherwise_005f1.doEndTag() == javax.servlet.jsp.tagext.Tag.SKIP_PAGE) {
      return true;
    }
    _005fjspx_005ftagPool_005fc_005fotherwise.reuse(_jspx_th_c_005fotherwise_005f1);
    return false;
  }

  private boolean _jspx_meth_c_005fchoose_005f2(javax.servlet.jsp.PageContext _jspx_page_context)
          throws java.lang.Throwable {
    javax.servlet.jsp.PageContext pageContext = _jspx_page_context;
    javax.servlet.jsp.JspWriter out = _jspx_page_context.getOut();
    //  c:choose
    org.apache.taglibs.standard.tag.common.core.ChooseTag _jspx_th_c_005fchoose_005f2 = (org.apache.taglibs.standard.tag.common.core.ChooseTag) _005fjspx_005ftagPool_005fc_005fchoose.get(org.apache.taglibs.standard.tag.common.core.ChooseTag.class);
    _jspx_th_c_005fchoose_005f2.setPageContext(_jspx_page_context);
    _jspx_th_c_005fchoose_005f2.setParent(null);
    int _jspx_eval_c_005fchoose_005f2 = _jspx_th_c_005fchoose_005f2.doStartTag();
    if (_jspx_eval_c_005fchoose_005f2 != javax.servlet.jsp.tagext.Tag.SKIP_BODY) {
      do {
        out.write("\r\n");
        out.write("                                ");
        if (_jspx_meth_c_005fwhen_005f2(_jspx_th_c_005fchoose_005f2, _jspx_page_context))
          return true;
        out.write("\r\n");
        out.write("                                ");
        if (_jspx_meth_c_005fotherwise_005f2(_jspx_th_c_005fchoose_005f2, _jspx_page_context))
          return true;
        out.write("\r\n");
        out.write("                                ");
        int evalDoAfterBody = _jspx_th_c_005fchoose_005f2.doAfterBody();
        if (evalDoAfterBody != javax.servlet.jsp.tagext.BodyTag.EVAL_BODY_AGAIN)
          break;
      } while (true);
    }
    if (_jspx_th_c_005fchoose_005f2.doEndTag() == javax.servlet.jsp.tagext.Tag.SKIP_PAGE) {
      return true;
    }
    _005fjspx_005ftagPool_005fc_005fchoose.reuse(_jspx_th_c_005fchoose_005f2);
    return false;
  }

  private boolean _jspx_meth_c_005fwhen_005f2(javax.servlet.jsp.tagext.JspTag _jspx_th_c_005fchoose_005f2, javax.servlet.jsp.PageContext _jspx_page_context)
          throws java.lang.Throwable {
    javax.servlet.jsp.PageContext pageContext = _jspx_page_context;
    javax.servlet.jsp.JspWriter out = _jspx_page_context.getOut();
    //  c:when
    org.apache.taglibs.standard.tag.rt.core.WhenTag _jspx_th_c_005fwhen_005f2 = (org.apache.taglibs.standard.tag.rt.core.WhenTag) _005fjspx_005ftagPool_005fc_005fwhen_0026_005ftest.get(org.apache.taglibs.standard.tag.rt.core.WhenTag.class);
    _jspx_th_c_005fwhen_005f2.setPageContext(_jspx_page_context);
    _jspx_th_c_005fwhen_005f2.setParent((javax.servlet.jsp.tagext.Tag) _jspx_th_c_005fchoose_005f2);
    // /vibesync/workspace.jsp(264,32) name = test type = boolean reqTime = true required = true fragment = false deferredValue = false expectedTypeName = null deferredMethod = false methodSignature = null
    _jspx_th_c_005fwhen_005f2.setTest(((java.lang.Boolean) org.apache.jasper.runtime.PageContextImpl.proprietaryEvaluate("${not empty initialData.unreadMessages}", boolean.class, (javax.servlet.jsp.PageContext)_jspx_page_context, null)).booleanValue());
    int _jspx_eval_c_005fwhen_005f2 = _jspx_th_c_005fwhen_005f2.doStartTag();
    if (_jspx_eval_c_005fwhen_005f2 != javax.servlet.jsp.tagext.Tag.SKIP_BODY) {
      do {
        out.write("\r\n");
        out.write("                                    ");
        if (_jspx_meth_c_005fforEach_005f2(_jspx_th_c_005fwhen_005f2, _jspx_page_context))
          return true;
        out.write("\r\n");
        out.write("                                ");
        int evalDoAfterBody = _jspx_th_c_005fwhen_005f2.doAfterBody();
        if (evalDoAfterBody != javax.servlet.jsp.tagext.BodyTag.EVAL_BODY_AGAIN)
          break;
      } while (true);
    }
    if (_jspx_th_c_005fwhen_005f2.doEndTag() == javax.servlet.jsp.tagext.Tag.SKIP_PAGE) {
      return true;
    }
    _005fjspx_005ftagPool_005fc_005fwhen_0026_005ftest.reuse(_jspx_th_c_005fwhen_005f2);
    return false;
  }

  private boolean _jspx_meth_c_005fforEach_005f2(javax.servlet.jsp.tagext.JspTag _jspx_th_c_005fwhen_005f2, javax.servlet.jsp.PageContext _jspx_page_context)
          throws java.lang.Throwable {
    javax.servlet.jsp.PageContext pageContext = _jspx_page_context;
    javax.servlet.jsp.JspWriter out = _jspx_page_context.getOut();
    //  c:forEach
    org.apache.taglibs.standard.tag.rt.core.ForEachTag _jspx_th_c_005fforEach_005f2 = (org.apache.taglibs.standard.tag.rt.core.ForEachTag) _005fjspx_005ftagPool_005fc_005fforEach_0026_005fvar_005fitems.get(org.apache.taglibs.standard.tag.rt.core.ForEachTag.class);
    _jspx_th_c_005fforEach_005f2.setPageContext(_jspx_page_context);
    _jspx_th_c_005fforEach_005f2.setParent((javax.servlet.jsp.tagext.Tag) _jspx_th_c_005fwhen_005f2);
    // /vibesync/workspace.jsp(265,36) name = var type = java.lang.String reqTime = false required = false fragment = false deferredValue = false expectedTypeName = null deferredMethod = false methodSignature = null
    _jspx_th_c_005fforEach_005f2.setVar("msg");
    // /vibesync/workspace.jsp(265,36) name = items type = javax.el.ValueExpression reqTime = true required = false fragment = false deferredValue = true expectedTypeName = java.lang.Object deferredMethod = false methodSignature = null
    _jspx_th_c_005fforEach_005f2.setItems(new org.apache.jasper.el.JspValueExpression("/vibesync/workspace.jsp(265,36) '${initialData.unreadMessages}'",_jsp_getExpressionFactory().createValueExpression(_jspx_page_context.getELContext(),"${initialData.unreadMessages}",java.lang.Object.class)).getValue(_jspx_page_context.getELContext()));
    int[] _jspx_push_body_count_c_005fforEach_005f2 = new int[] { 0 };
    try {
      int _jspx_eval_c_005fforEach_005f2 = _jspx_th_c_005fforEach_005f2.doStartTag();
      if (_jspx_eval_c_005fforEach_005f2 != javax.servlet.jsp.tagext.Tag.SKIP_BODY) {
        do {
          out.write("\r\n");
          out.write("                                    <div class=\"message_card message_item\" data-sender-idx=\"");
          out.write((java.lang.String) org.apache.jasper.runtime.PageContextImpl.proprietaryEvaluate("${msg.ac_sender}", java.lang.String.class, (javax.servlet.jsp.PageContext)_jspx_page_context, null));
          out.write("\" data-nickname=\"");
          out.write((java.lang.String) org.apache.jasper.runtime.PageContextImpl.proprietaryEvaluate("${msg.latestMessage.sender_nickname}", java.lang.String.class, (javax.servlet.jsp.PageContext)_jspx_page_context, null));
          out.write("\">\r\n");
          out.write("                                        ");
          out.write("\r\n");
          out.write("                                        <div class=\"msg_text_area\">\r\n");
          out.write("                                        <div class=\"msg_sender_row\">\r\n");
          out.write("                                        <div class=\"msg_sender\">");
          out.write((java.lang.String) org.apache.jasper.runtime.PageContextImpl.proprietaryEvaluate("${msg.latestMessage.sender_nickname}", java.lang.String.class, (javax.servlet.jsp.PageContext)_jspx_page_context, null));
          out.write("</div>\r\n");
          out.write("                                        <span class=\"unread-badge\">");
          out.write((java.lang.String) org.apache.jasper.runtime.PageContextImpl.proprietaryEvaluate("${msg.numOfUnreadMessages}", java.lang.String.class, (javax.servlet.jsp.PageContext)_jspx_page_context, null));
          out.write("</span>\r\n");
          out.write("                                        </div>\r\n");
          out.write("                                        <div class=\"msg_preview\">");
          out.write((java.lang.String) org.apache.jasper.runtime.PageContextImpl.proprietaryEvaluate("${msg.latestMessage.text}", java.lang.String.class, (javax.servlet.jsp.PageContext)_jspx_page_context, null));
          out.write("</div>\r\n");
          out.write("                                        <div class=\"msg_time\">");
          out.write((java.lang.String) org.apache.jasper.runtime.PageContextImpl.proprietaryEvaluate("${msg.latestMessage.relativeTime}", java.lang.String.class, (javax.servlet.jsp.PageContext)_jspx_page_context, null));
          out.write("</div>\r\n");
          out.write("                                        </div>\r\n");
          out.write("                                    </div>\r\n");
          out.write("                                    ");
          int evalDoAfterBody = _jspx_th_c_005fforEach_005f2.doAfterBody();
          if (evalDoAfterBody != javax.servlet.jsp.tagext.BodyTag.EVAL_BODY_AGAIN)
            break;
        } while (true);
      }
      if (_jspx_th_c_005fforEach_005f2.doEndTag() == javax.servlet.jsp.tagext.Tag.SKIP_PAGE) {
        return true;
      }
    } catch (java.lang.Throwable _jspx_exception) {
      while (_jspx_push_body_count_c_005fforEach_005f2[0]-- > 0)
        out = _jspx_page_context.popBody();
      _jspx_th_c_005fforEach_005f2.doCatch(_jspx_exception);
    } finally {
      _jspx_th_c_005fforEach_005f2.doFinally();
    }
    _005fjspx_005ftagPool_005fc_005fforEach_0026_005fvar_005fitems.reuse(_jspx_th_c_005fforEach_005f2);
    return false;
  }

  private boolean _jspx_meth_c_005fotherwise_005f2(javax.servlet.jsp.tagext.JspTag _jspx_th_c_005fchoose_005f2, javax.servlet.jsp.PageContext _jspx_page_context)
          throws java.lang.Throwable {
    javax.servlet.jsp.PageContext pageContext = _jspx_page_context;
    javax.servlet.jsp.JspWriter out = _jspx_page_context.getOut();
    //  c:otherwise
    org.apache.taglibs.standard.tag.common.core.OtherwiseTag _jspx_th_c_005fotherwise_005f2 = (org.apache.taglibs.standard.tag.common.core.OtherwiseTag) _005fjspx_005ftagPool_005fc_005fotherwise.get(org.apache.taglibs.standard.tag.common.core.OtherwiseTag.class);
    _jspx_th_c_005fotherwise_005f2.setPageContext(_jspx_page_context);
    _jspx_th_c_005fotherwise_005f2.setParent((javax.servlet.jsp.tagext.Tag) _jspx_th_c_005fchoose_005f2);
    int _jspx_eval_c_005fotherwise_005f2 = _jspx_th_c_005fotherwise_005f2.doStartTag();
    if (_jspx_eval_c_005fotherwise_005f2 != javax.servlet.jsp.tagext.Tag.SKIP_BODY) {
      do {
        out.write("\r\n");
        out.write("                                    <div class=\"no_message\">새로운 메시지가 없습니다.</div>\r\n");
        out.write("                                ");
        int evalDoAfterBody = _jspx_th_c_005fotherwise_005f2.doAfterBody();
        if (evalDoAfterBody != javax.servlet.jsp.tagext.BodyTag.EVAL_BODY_AGAIN)
          break;
      } while (true);
    }
    if (_jspx_th_c_005fotherwise_005f2.doEndTag() == javax.servlet.jsp.tagext.Tag.SKIP_PAGE) {
      return true;
    }
    _005fjspx_005ftagPool_005fc_005fotherwise.reuse(_jspx_th_c_005fotherwise_005f2);
    return false;
  }

  private boolean _jspx_meth_c_005fforEach_005f3(javax.servlet.jsp.PageContext _jspx_page_context)
          throws java.lang.Throwable {
    javax.servlet.jsp.PageContext pageContext = _jspx_page_context;
    javax.servlet.jsp.JspWriter out = _jspx_page_context.getOut();
    javax.servlet.http.HttpServletRequest request = (javax.servlet.http.HttpServletRequest)_jspx_page_context.getRequest();
    javax.servlet.http.HttpServletResponse response = (javax.servlet.http.HttpServletResponse)_jspx_page_context.getResponse();
    //  c:forEach
    org.apache.taglibs.standard.tag.rt.core.ForEachTag _jspx_th_c_005fforEach_005f3 = (org.apache.taglibs.standard.tag.rt.core.ForEachTag) _005fjspx_005ftagPool_005fc_005fforEach_0026_005fvar_005fitems.get(org.apache.taglibs.standard.tag.rt.core.ForEachTag.class);
    _jspx_th_c_005fforEach_005f3.setPageContext(_jspx_page_context);
    _jspx_th_c_005fforEach_005f3.setParent(null);
    // /vibesync/workspace.jsp(289,7) name = var type = java.lang.String reqTime = false required = false fragment = false deferredValue = false expectedTypeName = null deferredMethod = false methodSignature = null
    _jspx_th_c_005fforEach_005f3.setVar("block");
    // /vibesync/workspace.jsp(289,7) name = items type = javax.el.ValueExpression reqTime = true required = false fragment = false deferredValue = true expectedTypeName = java.lang.Object deferredMethod = false methodSignature = null
    _jspx_th_c_005fforEach_005f3.setItems(new org.apache.jasper.el.JspValueExpression("/vibesync/workspace.jsp(289,7) '${workspaceData.blocks}'",_jsp_getExpressionFactory().createValueExpression(_jspx_page_context.getELContext(),"${workspaceData.blocks}",java.lang.Object.class)).getValue(_jspx_page_context.getELContext()));
    int[] _jspx_push_body_count_c_005fforEach_005f3 = new int[] { 0 };
    try {
      int _jspx_eval_c_005fforEach_005f3 = _jspx_th_c_005fforEach_005f3.doStartTag();
      if (_jspx_eval_c_005fforEach_005f3 != javax.servlet.jsp.tagext.Tag.SKIP_BODY) {
        do {
          out.write("\r\n");
          out.write("								<div class=\"contents_item generated_block\" id=\"block-");
          out.write((java.lang.String) org.apache.jasper.runtime.PageContextImpl.proprietaryEvaluate("${block.block_id}", java.lang.String.class, (javax.servlet.jsp.PageContext)_jspx_page_context, null));
          out.write("\">\r\n");
          out.write("									<div class=\"block-header\">\r\n");
          out.write("										<h4>\r\n");
          out.write("											");
          if (_jspx_meth_c_005fchoose_005f3(_jspx_th_c_005fforEach_005f3, _jspx_page_context, _jspx_push_body_count_c_005fforEach_005f3))
            return true;
          out.write("\r\n");
          out.write("										</h4>\r\n");
          out.write("										<div class=\"block-actions\">\r\n");
          out.write("									        <button class=\"refresh-block-btn\" data-block-id=\"");
          out.write((java.lang.String) org.apache.jasper.runtime.PageContextImpl.proprietaryEvaluate("${block.block_id}", java.lang.String.class, (javax.servlet.jsp.PageContext)_jspx_page_context, null));
          out.write("\" title=\"새로고침\">\r\n");
          out.write("									            <i class=\"fa-solid fa-arrows-rotate\"></i>\r\n");
          out.write("									        </button>\r\n");
          out.write("									        <button class=\"delete-block-btn\" data-block-id=\"");
          out.write((java.lang.String) org.apache.jasper.runtime.PageContextImpl.proprietaryEvaluate("${block.block_id}", java.lang.String.class, (javax.servlet.jsp.PageContext)_jspx_page_context, null));
          out.write("\" title=\"삭제\">\r\n");
          out.write("									            <i class=\"fa-solid fa-trash-can\"></i>\r\n");
          out.write("									        </button>\r\n");
          out.write("									    </div>\r\n");
          out.write("									</div>\r\n");
          out.write("									<div class=\"block-content\">\r\n");
          out.write("										");
          out.write("\r\n");
          out.write("										");
          if (_jspx_meth_c_005fset_005f0(_jspx_th_c_005fforEach_005f3, _jspx_page_context, _jspx_push_body_count_c_005fforEach_005f3))
            return true;
          out.write("\r\n");
          out.write("										");
          org.apache.jasper.runtime.JspRuntimeLibrary.include(request, response, (java.lang.String) org.apache.jasper.runtime.PageContextImpl.proprietaryEvaluate("/WEB-INF/views/workspace/fragments/_${block.block_type}Content.jsp", java.lang.String.class, (javax.servlet.jsp.PageContext)_jspx_page_context, null), out, false);
          out.write("\r\n");
          out.write("									</div>\r\n");
          out.write("								</div>\r\n");
          out.write("						");
          int evalDoAfterBody = _jspx_th_c_005fforEach_005f3.doAfterBody();
          if (evalDoAfterBody != javax.servlet.jsp.tagext.BodyTag.EVAL_BODY_AGAIN)
            break;
        } while (true);
      }
      if (_jspx_th_c_005fforEach_005f3.doEndTag() == javax.servlet.jsp.tagext.Tag.SKIP_PAGE) {
        return true;
      }
    } catch (java.lang.Throwable _jspx_exception) {
      while (_jspx_push_body_count_c_005fforEach_005f3[0]-- > 0)
        out = _jspx_page_context.popBody();
      _jspx_th_c_005fforEach_005f3.doCatch(_jspx_exception);
    } finally {
      _jspx_th_c_005fforEach_005f3.doFinally();
    }
    _005fjspx_005ftagPool_005fc_005fforEach_0026_005fvar_005fitems.reuse(_jspx_th_c_005fforEach_005f3);
    return false;
  }

  private boolean _jspx_meth_c_005fchoose_005f3(javax.servlet.jsp.tagext.JspTag _jspx_th_c_005fforEach_005f3, javax.servlet.jsp.PageContext _jspx_page_context, int[] _jspx_push_body_count_c_005fforEach_005f3)
          throws java.lang.Throwable {
    javax.servlet.jsp.PageContext pageContext = _jspx_page_context;
    javax.servlet.jsp.JspWriter out = _jspx_page_context.getOut();
    //  c:choose
    org.apache.taglibs.standard.tag.common.core.ChooseTag _jspx_th_c_005fchoose_005f3 = (org.apache.taglibs.standard.tag.common.core.ChooseTag) _005fjspx_005ftagPool_005fc_005fchoose.get(org.apache.taglibs.standard.tag.common.core.ChooseTag.class);
    _jspx_th_c_005fchoose_005f3.setPageContext(_jspx_page_context);
    _jspx_th_c_005fchoose_005f3.setParent((javax.servlet.jsp.tagext.Tag) _jspx_th_c_005fforEach_005f3);
    int _jspx_eval_c_005fchoose_005f3 = _jspx_th_c_005fchoose_005f3.doStartTag();
    if (_jspx_eval_c_005fchoose_005f3 != javax.servlet.jsp.tagext.Tag.SKIP_BODY) {
      do {
        out.write("\r\n");
        out.write("												");
        if (_jspx_meth_c_005fwhen_005f3(_jspx_th_c_005fchoose_005f3, _jspx_page_context, _jspx_push_body_count_c_005fforEach_005f3))
          return true;
        out.write("\r\n");
        out.write("												");
        if (_jspx_meth_c_005fwhen_005f4(_jspx_th_c_005fchoose_005f3, _jspx_page_context, _jspx_push_body_count_c_005fforEach_005f3))
          return true;
        out.write("\r\n");
        out.write("												");
        if (_jspx_meth_c_005fwhen_005f5(_jspx_th_c_005fchoose_005f3, _jspx_page_context, _jspx_push_body_count_c_005fforEach_005f3))
          return true;
        out.write("\r\n");
        out.write("											");
        int evalDoAfterBody = _jspx_th_c_005fchoose_005f3.doAfterBody();
        if (evalDoAfterBody != javax.servlet.jsp.tagext.BodyTag.EVAL_BODY_AGAIN)
          break;
      } while (true);
    }
    if (_jspx_th_c_005fchoose_005f3.doEndTag() == javax.servlet.jsp.tagext.Tag.SKIP_PAGE) {
      return true;
    }
    _005fjspx_005ftagPool_005fc_005fchoose.reuse(_jspx_th_c_005fchoose_005f3);
    return false;
  }

  private boolean _jspx_meth_c_005fwhen_005f3(javax.servlet.jsp.tagext.JspTag _jspx_th_c_005fchoose_005f3, javax.servlet.jsp.PageContext _jspx_page_context, int[] _jspx_push_body_count_c_005fforEach_005f3)
          throws java.lang.Throwable {
    javax.servlet.jsp.PageContext pageContext = _jspx_page_context;
    javax.servlet.jsp.JspWriter out = _jspx_page_context.getOut();
    //  c:when
    org.apache.taglibs.standard.tag.rt.core.WhenTag _jspx_th_c_005fwhen_005f3 = (org.apache.taglibs.standard.tag.rt.core.WhenTag) _005fjspx_005ftagPool_005fc_005fwhen_0026_005ftest.get(org.apache.taglibs.standard.tag.rt.core.WhenTag.class);
    _jspx_th_c_005fwhen_005f3.setPageContext(_jspx_page_context);
    _jspx_th_c_005fwhen_005f3.setParent((javax.servlet.jsp.tagext.Tag) _jspx_th_c_005fchoose_005f3);
    // /vibesync/workspace.jsp(294,12) name = test type = boolean reqTime = true required = true fragment = false deferredValue = false expectedTypeName = null deferredMethod = false methodSignature = null
    _jspx_th_c_005fwhen_005f3.setTest(((java.lang.Boolean) org.apache.jasper.runtime.PageContextImpl.proprietaryEvaluate("${block.block_type == 'CategoryPosts'}", boolean.class, (javax.servlet.jsp.PageContext)_jspx_page_context, null)).booleanValue());
    int _jspx_eval_c_005fwhen_005f3 = _jspx_th_c_005fwhen_005f3.doStartTag();
    if (_jspx_eval_c_005fwhen_005f3 != javax.servlet.jsp.tagext.Tag.SKIP_BODY) {
      do {
        out.write("<i class=\"fa-solid fa-layer-group\"></i>&nbsp;");
        out.write((java.lang.String) org.apache.jasper.runtime.PageContextImpl.proprietaryEvaluate("${block.categoryName}", java.lang.String.class, (javax.servlet.jsp.PageContext)_jspx_page_context, null));
        out.write(' ');
        out.write((java.lang.String) org.apache.jasper.runtime.PageContextImpl.proprietaryEvaluate("${block.sortType == 'popular' ? '인기' : '최신'}", java.lang.String.class, (javax.servlet.jsp.PageContext)_jspx_page_context, null));
        out.write('글');
        int evalDoAfterBody = _jspx_th_c_005fwhen_005f3.doAfterBody();
        if (evalDoAfterBody != javax.servlet.jsp.tagext.BodyTag.EVAL_BODY_AGAIN)
          break;
      } while (true);
    }
    if (_jspx_th_c_005fwhen_005f3.doEndTag() == javax.servlet.jsp.tagext.Tag.SKIP_PAGE) {
      return true;
    }
    _005fjspx_005ftagPool_005fc_005fwhen_0026_005ftest.reuse(_jspx_th_c_005fwhen_005f3);
    return false;
  }

  private boolean _jspx_meth_c_005fwhen_005f4(javax.servlet.jsp.tagext.JspTag _jspx_th_c_005fchoose_005f3, javax.servlet.jsp.PageContext _jspx_page_context, int[] _jspx_push_body_count_c_005fforEach_005f3)
          throws java.lang.Throwable {
    javax.servlet.jsp.PageContext pageContext = _jspx_page_context;
    javax.servlet.jsp.JspWriter out = _jspx_page_context.getOut();
    //  c:when
    org.apache.taglibs.standard.tag.rt.core.WhenTag _jspx_th_c_005fwhen_005f4 = (org.apache.taglibs.standard.tag.rt.core.WhenTag) _005fjspx_005ftagPool_005fc_005fwhen_0026_005ftest.get(org.apache.taglibs.standard.tag.rt.core.WhenTag.class);
    _jspx_th_c_005fwhen_005f4.setPageContext(_jspx_page_context);
    _jspx_th_c_005fwhen_005f4.setParent((javax.servlet.jsp.tagext.Tag) _jspx_th_c_005fchoose_005f3);
    // /vibesync/workspace.jsp(295,12) name = test type = boolean reqTime = true required = true fragment = false deferredValue = false expectedTypeName = null deferredMethod = false methodSignature = null
    _jspx_th_c_005fwhen_005f4.setTest(((java.lang.Boolean) org.apache.jasper.runtime.PageContextImpl.proprietaryEvaluate("${block.block_type == 'WatchParties'}", boolean.class, (javax.servlet.jsp.PageContext)_jspx_page_context, null)).booleanValue());
    int _jspx_eval_c_005fwhen_005f4 = _jspx_th_c_005fwhen_005f4.doStartTag();
    if (_jspx_eval_c_005fwhen_005f4 != javax.servlet.jsp.tagext.Tag.SKIP_BODY) {
      do {
        out.write("<i class=\"fa-solid fa-tv\"></i>&nbsp;진행중인 워치파티");
        int evalDoAfterBody = _jspx_th_c_005fwhen_005f4.doAfterBody();
        if (evalDoAfterBody != javax.servlet.jsp.tagext.BodyTag.EVAL_BODY_AGAIN)
          break;
      } while (true);
    }
    if (_jspx_th_c_005fwhen_005f4.doEndTag() == javax.servlet.jsp.tagext.Tag.SKIP_PAGE) {
      return true;
    }
    _005fjspx_005ftagPool_005fc_005fwhen_0026_005ftest.reuse(_jspx_th_c_005fwhen_005f4);
    return false;
  }

  private boolean _jspx_meth_c_005fwhen_005f5(javax.servlet.jsp.tagext.JspTag _jspx_th_c_005fchoose_005f3, javax.servlet.jsp.PageContext _jspx_page_context, int[] _jspx_push_body_count_c_005fforEach_005f3)
          throws java.lang.Throwable {
    javax.servlet.jsp.PageContext pageContext = _jspx_page_context;
    javax.servlet.jsp.JspWriter out = _jspx_page_context.getOut();
    //  c:when
    org.apache.taglibs.standard.tag.rt.core.WhenTag _jspx_th_c_005fwhen_005f5 = (org.apache.taglibs.standard.tag.rt.core.WhenTag) _005fjspx_005ftagPool_005fc_005fwhen_0026_005ftest.get(org.apache.taglibs.standard.tag.rt.core.WhenTag.class);
    _jspx_th_c_005fwhen_005f5.setPageContext(_jspx_page_context);
    _jspx_th_c_005fwhen_005f5.setParent((javax.servlet.jsp.tagext.Tag) _jspx_th_c_005fchoose_005f3);
    // /vibesync/workspace.jsp(296,12) name = test type = boolean reqTime = true required = true fragment = false deferredValue = false expectedTypeName = null deferredMethod = false methodSignature = null
    _jspx_th_c_005fwhen_005f5.setTest(((java.lang.Boolean) org.apache.jasper.runtime.PageContextImpl.proprietaryEvaluate("${block.block_type == 'UserStats'}", boolean.class, (javax.servlet.jsp.PageContext)_jspx_page_context, null)).booleanValue());
    int _jspx_eval_c_005fwhen_005f5 = _jspx_th_c_005fwhen_005f5.doStartTag();
    if (_jspx_eval_c_005fwhen_005f5 != javax.servlet.jsp.tagext.Tag.SKIP_BODY) {
      do {
        out.write("<i class=\"fa-solid fa-chart-simple\"></i>&nbsp;");
        out.write((java.lang.String) org.apache.jasper.runtime.PageContextImpl.proprietaryEvaluate("${block.title}", java.lang.String.class, (javax.servlet.jsp.PageContext)_jspx_page_context, null));
        int evalDoAfterBody = _jspx_th_c_005fwhen_005f5.doAfterBody();
        if (evalDoAfterBody != javax.servlet.jsp.tagext.BodyTag.EVAL_BODY_AGAIN)
          break;
      } while (true);
    }
    if (_jspx_th_c_005fwhen_005f5.doEndTag() == javax.servlet.jsp.tagext.Tag.SKIP_PAGE) {
      return true;
    }
    _005fjspx_005ftagPool_005fc_005fwhen_0026_005ftest.reuse(_jspx_th_c_005fwhen_005f5);
    return false;
  }

  private boolean _jspx_meth_c_005fset_005f0(javax.servlet.jsp.tagext.JspTag _jspx_th_c_005fforEach_005f3, javax.servlet.jsp.PageContext _jspx_page_context, int[] _jspx_push_body_count_c_005fforEach_005f3)
          throws java.lang.Throwable {
    javax.servlet.jsp.PageContext pageContext = _jspx_page_context;
    javax.servlet.jsp.JspWriter out = _jspx_page_context.getOut();
    //  c:set
    org.apache.taglibs.standard.tag.rt.core.SetTag _jspx_th_c_005fset_005f0 = (org.apache.taglibs.standard.tag.rt.core.SetTag) _005fjspx_005ftagPool_005fc_005fset_0026_005fvar_005fvalue_005fscope_005fnobody.get(org.apache.taglibs.standard.tag.rt.core.SetTag.class);
    _jspx_th_c_005fset_005f0.setPageContext(_jspx_page_context);
    _jspx_th_c_005fset_005f0.setParent((javax.servlet.jsp.tagext.Tag) _jspx_th_c_005fforEach_005f3);
    // /vibesync/workspace.jsp(310,10) name = var type = java.lang.String reqTime = false required = false fragment = false deferredValue = false expectedTypeName = null deferredMethod = false methodSignature = null
    _jspx_th_c_005fset_005f0.setVar("block");
    // /vibesync/workspace.jsp(310,10) name = value type = javax.el.ValueExpression reqTime = true required = false fragment = false deferredValue = true expectedTypeName = java.lang.Object deferredMethod = false methodSignature = null
    _jspx_th_c_005fset_005f0.setValue(new org.apache.jasper.el.JspValueExpression("/vibesync/workspace.jsp(310,10) '${block}'",_jsp_getExpressionFactory().createValueExpression(_jspx_page_context.getELContext(),"${block}",java.lang.Object.class)).getValue(_jspx_page_context.getELContext()));
    // /vibesync/workspace.jsp(310,10) name = scope type = java.lang.String reqTime = false required = false fragment = false deferredValue = false expectedTypeName = null deferredMethod = false methodSignature = null
    _jspx_th_c_005fset_005f0.setScope("request");
    int _jspx_eval_c_005fset_005f0 = _jspx_th_c_005fset_005f0.doStartTag();
    if (_jspx_th_c_005fset_005f0.doEndTag() == javax.servlet.jsp.tagext.Tag.SKIP_PAGE) {
      return true;
    }
    _005fjspx_005ftagPool_005fc_005fset_0026_005fvar_005fvalue_005fscope_005fnobody.reuse(_jspx_th_c_005fset_005f0);
    return false;
  }

  private boolean _jspx_meth_c_005fforEach_005f4(javax.servlet.jsp.PageContext _jspx_page_context)
          throws java.lang.Throwable {
    javax.servlet.jsp.PageContext pageContext = _jspx_page_context;
    javax.servlet.jsp.JspWriter out = _jspx_page_context.getOut();
    //  c:forEach
    org.apache.taglibs.standard.tag.rt.core.ForEachTag _jspx_th_c_005fforEach_005f4 = (org.apache.taglibs.standard.tag.rt.core.ForEachTag) _005fjspx_005ftagPool_005fc_005fforEach_0026_005fvar_005fitems.get(org.apache.taglibs.standard.tag.rt.core.ForEachTag.class);
    _jspx_th_c_005fforEach_005f4.setPageContext(_jspx_page_context);
    _jspx_th_c_005fforEach_005f4.setParent(null);
    // /vibesync/workspace.jsp(432,5) name = items type = javax.el.ValueExpression reqTime = true required = false fragment = false deferredValue = true expectedTypeName = java.lang.Object deferredMethod = false methodSignature = null
    _jspx_th_c_005fforEach_005f4.setItems(new org.apache.jasper.el.JspValueExpression("/vibesync/workspace.jsp(432,5) '${ categoryVOList }'",_jsp_getExpressionFactory().createValueExpression(_jspx_page_context.getELContext(),"${ categoryVOList }",java.lang.Object.class)).getValue(_jspx_page_context.getELContext()));
    // /vibesync/workspace.jsp(432,5) name = var type = java.lang.String reqTime = false required = false fragment = false deferredValue = false expectedTypeName = null deferredMethod = false methodSignature = null
    _jspx_th_c_005fforEach_005f4.setVar("categoryVO");
    int[] _jspx_push_body_count_c_005fforEach_005f4 = new int[] { 0 };
    try {
      int _jspx_eval_c_005fforEach_005f4 = _jspx_th_c_005fforEach_005f4.doStartTag();
      if (_jspx_eval_c_005fforEach_005f4 != javax.servlet.jsp.tagext.Tag.SKIP_BODY) {
        do {
          out.write("\r\n");
          out.write("						<option value=\"");
          out.write((java.lang.String) org.apache.jasper.runtime.PageContextImpl.proprietaryEvaluate("${ categoryVO.category_idx }", java.lang.String.class, (javax.servlet.jsp.PageContext)_jspx_page_context, null));
          out.write('"');
          out.write('>');
          out.write((java.lang.String) org.apache.jasper.runtime.PageContextImpl.proprietaryEvaluate("${ categoryVO.c_name }", java.lang.String.class, (javax.servlet.jsp.PageContext)_jspx_page_context, null));
          out.write("</option>\r\n");
          out.write("					");
          int evalDoAfterBody = _jspx_th_c_005fforEach_005f4.doAfterBody();
          if (evalDoAfterBody != javax.servlet.jsp.tagext.BodyTag.EVAL_BODY_AGAIN)
            break;
        } while (true);
      }
      if (_jspx_th_c_005fforEach_005f4.doEndTag() == javax.servlet.jsp.tagext.Tag.SKIP_PAGE) {
        return true;
      }
    } catch (java.lang.Throwable _jspx_exception) {
      while (_jspx_push_body_count_c_005fforEach_005f4[0]-- > 0)
        out = _jspx_page_context.popBody();
      _jspx_th_c_005fforEach_005f4.doCatch(_jspx_exception);
    } finally {
      _jspx_th_c_005fforEach_005f4.doFinally();
    }
    _005fjspx_005ftagPool_005fc_005fforEach_0026_005fvar_005fitems.reuse(_jspx_th_c_005fforEach_005f4);
    return false;
  }

  private boolean _jspx_meth_c_005fforEach_005f5(javax.servlet.jsp.PageContext _jspx_page_context)
          throws java.lang.Throwable {
    javax.servlet.jsp.PageContext pageContext = _jspx_page_context;
    javax.servlet.jsp.JspWriter out = _jspx_page_context.getOut();
    //  c:forEach
    org.apache.taglibs.standard.tag.rt.core.ForEachTag _jspx_th_c_005fforEach_005f5 = (org.apache.taglibs.standard.tag.rt.core.ForEachTag) _005fjspx_005ftagPool_005fc_005fforEach_0026_005fvar_005fitems.get(org.apache.taglibs.standard.tag.rt.core.ForEachTag.class);
    _jspx_th_c_005fforEach_005f5.setPageContext(_jspx_page_context);
    _jspx_th_c_005fforEach_005f5.setParent(null);
    // /vibesync/workspace.jsp(459,8) name = var type = java.lang.String reqTime = false required = false fragment = false deferredValue = false expectedTypeName = null deferredMethod = false methodSignature = null
    _jspx_th_c_005fforEach_005f5.setVar("block");
    // /vibesync/workspace.jsp(459,8) name = items type = javax.el.ValueExpression reqTime = true required = false fragment = false deferredValue = true expectedTypeName = java.lang.Object deferredMethod = false methodSignature = null
    _jspx_th_c_005fforEach_005f5.setItems(new org.apache.jasper.el.JspValueExpression("/vibesync/workspace.jsp(459,8) '${workspaceData.blocks}'",_jsp_getExpressionFactory().createValueExpression(_jspx_page_context.getELContext(),"${workspaceData.blocks}",java.lang.Object.class)).getValue(_jspx_page_context.getELContext()));
    int[] _jspx_push_body_count_c_005fforEach_005f5 = new int[] { 0 };
    try {
      int _jspx_eval_c_005fforEach_005f5 = _jspx_th_c_005fforEach_005f5.doStartTag();
      if (_jspx_eval_c_005fforEach_005f5 != javax.servlet.jsp.tagext.Tag.SKIP_BODY) {
        do {
          out.write("\r\n");
          out.write("            ");
          if (_jspx_meth_c_005fif_005f0(_jspx_th_c_005fforEach_005f5, _jspx_page_context, _jspx_push_body_count_c_005fforEach_005f5))
            return true;
          out.write("\r\n");
          out.write("        ");
          int evalDoAfterBody = _jspx_th_c_005fforEach_005f5.doAfterBody();
          if (evalDoAfterBody != javax.servlet.jsp.tagext.BodyTag.EVAL_BODY_AGAIN)
            break;
        } while (true);
      }
      if (_jspx_th_c_005fforEach_005f5.doEndTag() == javax.servlet.jsp.tagext.Tag.SKIP_PAGE) {
        return true;
      }
    } catch (java.lang.Throwable _jspx_exception) {
      while (_jspx_push_body_count_c_005fforEach_005f5[0]-- > 0)
        out = _jspx_page_context.popBody();
      _jspx_th_c_005fforEach_005f5.doCatch(_jspx_exception);
    } finally {
      _jspx_th_c_005fforEach_005f5.doFinally();
    }
    _005fjspx_005ftagPool_005fc_005fforEach_0026_005fvar_005fitems.reuse(_jspx_th_c_005fforEach_005f5);
    return false;
  }

  private boolean _jspx_meth_c_005fif_005f0(javax.servlet.jsp.tagext.JspTag _jspx_th_c_005fforEach_005f5, javax.servlet.jsp.PageContext _jspx_page_context, int[] _jspx_push_body_count_c_005fforEach_005f5)
          throws java.lang.Throwable {
    javax.servlet.jsp.PageContext pageContext = _jspx_page_context;
    javax.servlet.jsp.JspWriter out = _jspx_page_context.getOut();
    //  c:if
    org.apache.taglibs.standard.tag.rt.core.IfTag _jspx_th_c_005fif_005f0 = (org.apache.taglibs.standard.tag.rt.core.IfTag) _005fjspx_005ftagPool_005fc_005fif_0026_005ftest.get(org.apache.taglibs.standard.tag.rt.core.IfTag.class);
    _jspx_th_c_005fif_005f0.setPageContext(_jspx_page_context);
    _jspx_th_c_005fif_005f0.setParent((javax.servlet.jsp.tagext.Tag) _jspx_th_c_005fforEach_005f5);
    // /vibesync/workspace.jsp(460,12) name = test type = boolean reqTime = true required = true fragment = false deferredValue = false expectedTypeName = null deferredMethod = false methodSignature = null
    _jspx_th_c_005fif_005f0.setTest(((java.lang.Boolean) org.apache.jasper.runtime.PageContextImpl.proprietaryEvaluate("${block.block_type == 'UserStats'}", boolean.class, (javax.servlet.jsp.PageContext)_jspx_page_context, null)).booleanValue());
    int _jspx_eval_c_005fif_005f0 = _jspx_th_c_005fif_005f0.doStartTag();
    if (_jspx_eval_c_005fif_005f0 != javax.servlet.jsp.tagext.Tag.SKIP_BODY) {
      do {
        out.write("\r\n");
        out.write("                // 서버에서 받은 JSON 문자열을 사용해 차트 생성 함수를 호출하는 코드를 반복문으로 생성\r\n");
        out.write("                createOrUpdateChart(");
        out.write((java.lang.String) org.apache.jasper.runtime.PageContextImpl.proprietaryEvaluate("${block.block_id}", java.lang.String.class, (javax.servlet.jsp.PageContext)_jspx_page_context, null));
        out.write(", JSON.parse('");
        if (_jspx_meth_c_005fout_005f0(_jspx_th_c_005fif_005f0, _jspx_page_context, _jspx_push_body_count_c_005fforEach_005f5))
          return true;
        out.write("'));\r\n");
        out.write("            ");
        int evalDoAfterBody = _jspx_th_c_005fif_005f0.doAfterBody();
        if (evalDoAfterBody != javax.servlet.jsp.tagext.BodyTag.EVAL_BODY_AGAIN)
          break;
      } while (true);
    }
    if (_jspx_th_c_005fif_005f0.doEndTag() == javax.servlet.jsp.tagext.Tag.SKIP_PAGE) {
      return true;
    }
    _005fjspx_005ftagPool_005fc_005fif_0026_005ftest.reuse(_jspx_th_c_005fif_005f0);
    return false;
  }

  private boolean _jspx_meth_c_005fout_005f0(javax.servlet.jsp.tagext.JspTag _jspx_th_c_005fif_005f0, javax.servlet.jsp.PageContext _jspx_page_context, int[] _jspx_push_body_count_c_005fforEach_005f5)
          throws java.lang.Throwable {
    javax.servlet.jsp.PageContext pageContext = _jspx_page_context;
    javax.servlet.jsp.JspWriter out = _jspx_page_context.getOut();
    //  c:out
    org.apache.taglibs.standard.tag.rt.core.OutTag _jspx_th_c_005fout_005f0 = (org.apache.taglibs.standard.tag.rt.core.OutTag) _005fjspx_005ftagPool_005fc_005fout_0026_005fvalue_005fescapeXml_005fnobody.get(org.apache.taglibs.standard.tag.rt.core.OutTag.class);
    _jspx_th_c_005fout_005f0.setPageContext(_jspx_page_context);
    _jspx_th_c_005fout_005f0.setParent((javax.servlet.jsp.tagext.Tag) _jspx_th_c_005fif_005f0);
    // /vibesync/workspace.jsp(462,67) name = value type = null reqTime = true required = true fragment = false deferredValue = false expectedTypeName = null deferredMethod = false methodSignature = null
    _jspx_th_c_005fout_005f0.setValue((java.lang.Object) org.apache.jasper.runtime.PageContextImpl.proprietaryEvaluate("${block.chartDataJson}", java.lang.Object.class, (javax.servlet.jsp.PageContext)_jspx_page_context, null));
    // /vibesync/workspace.jsp(462,67) name = escapeXml type = null reqTime = true required = false fragment = false deferredValue = false expectedTypeName = null deferredMethod = false methodSignature = null
    _jspx_th_c_005fout_005f0.setEscapeXml(false);
    int _jspx_eval_c_005fout_005f0 = _jspx_th_c_005fout_005f0.doStartTag();
    if (_jspx_th_c_005fout_005f0.doEndTag() == javax.servlet.jsp.tagext.Tag.SKIP_PAGE) {
      return true;
    }
    _005fjspx_005ftagPool_005fc_005fout_0026_005fvalue_005fescapeXml_005fnobody.reuse(_jspx_th_c_005fout_005f0);
    return false;
  }
}
